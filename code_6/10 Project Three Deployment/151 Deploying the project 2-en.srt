1
00:00:00,730 --> 00:00:03,920
OK so now what we need to do we need to make some changes to the server.

2
00:00:03,980 --> 00:00:07,910
Just so you know we can make it work and it can make sense.

3
00:00:07,960 --> 00:00:13,630
For example whenever we pushed as to Heroku Heroku will you know create that post build and everything

4
00:00:13,630 --> 00:00:21,370
else but the server needs to know how to render that indexed that HD mail that we get inside of built

5
00:00:21,460 --> 00:00:23,440
after we of course create a build.

6
00:00:23,770 --> 00:00:26,980
So we need to give instructions to the server in how to render.

7
00:00:27,130 --> 00:00:29,130
So we're going to do just that.

8
00:00:29,140 --> 00:00:35,230
I'm going to go right here at the bottom and this should be the last route because this Froude it's

9
00:00:35,230 --> 00:00:40,150
going to be like a default case something like that default.

10
00:00:40,150 --> 00:00:41,600
So why it's a default.

11
00:00:41,710 --> 00:00:44,230
Well we have other routes right here.

12
00:00:44,410 --> 00:00:51,220
So whenever we make a request to our server which is Heroku and the our server it's in our application

13
00:00:51,220 --> 00:00:52,610
no whole application.

14
00:00:52,750 --> 00:00:59,560
It's not finding the route is going to go to a default because if it's not finding the route it's you

15
00:00:59,560 --> 00:01:03,320
know the symbol or the single page application react.

16
00:01:03,370 --> 00:01:04,180
Right.

17
00:01:04,240 --> 00:01:06,880
That is pretty much the whole logic.

18
00:01:06,880 --> 00:01:14,080
Now of course this only works and in production right inside Heroku whenever we run development server

19
00:01:14,320 --> 00:01:17,420
this actually you know does not does not apply.

20
00:01:17,560 --> 00:01:23,110
So we need to create kind of a rule something something to rule that the server or the development server

21
00:01:23,170 --> 00:01:23,780
out.

22
00:01:24,010 --> 00:01:32,710
So how can we do it first are going to access the process that are going to say EMV dot and then node

23
00:01:33,340 --> 00:01:35,100
underscore EMV.

24
00:01:35,410 --> 00:01:40,540
So this pretty much whenever we make a reference to the node environment this is going to be production

25
00:01:40,600 --> 00:01:41,680
or something else.

26
00:01:41,800 --> 00:01:46,030
So if it's triple equal to production just like this.

27
00:01:46,060 --> 00:01:47,330
Let me make it right.

28
00:01:47,680 --> 00:01:52,740
Production let me do it like this production.

29
00:01:53,050 --> 00:01:56,300
It means that of course we are inside Heroku.

30
00:01:56,320 --> 00:02:00,220
So of course it will record next recognize this of Orvil is going to pass.

31
00:02:00,220 --> 00:02:00,930
It's true.

32
00:02:00,940 --> 00:02:03,140
And this girl code right here will run.

33
00:02:03,160 --> 00:02:03,910
All right.

34
00:02:03,910 --> 00:02:06,330
So first I'm going to import path.

35
00:02:06,430 --> 00:02:10,410
This is something from note J.S. so require.

36
00:02:10,930 --> 00:02:12,070
And then it's gone.

37
00:02:12,150 --> 00:02:13,460
It's going to be called Path.

38
00:02:13,540 --> 00:02:14,250
Right.

39
00:02:14,740 --> 00:02:20,400
So this is what we need to do we need to create a route that accepts any kind of requests and it can

40
00:02:20,440 --> 00:02:21,560
and it kind of prompts.

41
00:02:21,580 --> 00:02:27,690
So I'm going to say app that get opening close I'm going to open this I'm going to save slash.

42
00:02:27,910 --> 00:02:28,710
I'm going to accept.

43
00:02:28,720 --> 00:02:29,560
All right.

44
00:02:29,560 --> 00:02:32,320
The Istar right here means all.

45
00:02:32,320 --> 00:02:35,280
And then of course we do the response.

46
00:02:35,680 --> 00:02:40,050
You know we function with the request and the response.

47
00:02:40,060 --> 00:02:40,750
All right.

48
00:02:40,900 --> 00:02:46,390
So we're going to send our response back to the client and this case is going to be response and we're

49
00:02:46,390 --> 00:02:53,520
going to send the files I'm going to say sent file and the file is going to be our index that HVM out.

50
00:02:53,620 --> 00:03:00,550
Of course we need to pass the path of where this file is located inside our directory inside Heroku

51
00:03:00,820 --> 00:03:03,530
and inside the client or inside the building.

52
00:03:03,640 --> 00:03:05,050
All right.

53
00:03:05,150 --> 00:03:10,480
So going to say underscore underscore name Oh sorry forgot to do something.

54
00:03:10,480 --> 00:03:12,420
We need to do path.

55
00:03:12,690 --> 00:03:15,650
The right thing including right here at the top.

56
00:03:15,940 --> 00:03:21,220
So resaw opening close instead of here we need to pass some arguments.

57
00:03:21,220 --> 00:03:24,440
First one is going to be Dirnt than coma.

58
00:03:24,470 --> 00:03:30,130
I'm going to say OK it's dot dot dot dot for Slash and then client.

59
00:03:30,130 --> 00:03:35,530
All right the next one is going to be where we can we find the index that HVM L..

60
00:03:35,620 --> 00:03:40,530
Well inside the build and then they're going to say coma and what do we need to render.

61
00:03:40,540 --> 00:03:45,460
So the index that H team L and that is it.

62
00:03:45,540 --> 00:03:48,630
Of course none of this routes right here.

63
00:03:48,640 --> 00:03:52,850
There is no match within the routes is going to go to the fallback scenario.

64
00:03:53,140 --> 00:04:00,010
And of course whenever we get this it's a request for a route of you know inside our application inside

65
00:04:00,010 --> 00:04:02,060
the re-act single page down.

66
00:04:02,230 --> 00:04:03,080
All right.

67
00:04:03,370 --> 00:04:04,620
So far so good.

68
00:04:04,630 --> 00:04:07,200
The problem is that sometimes we need to render.

69
00:04:07,300 --> 00:04:13,800
We need to you know provide to the browser or whatever some static files just like javascript.

70
00:04:13,870 --> 00:04:14,430
Right.

71
00:04:14,440 --> 00:04:20,760
This indicates that it's Jamail cannot work without this without the bundle with bundled edges.

72
00:04:20,890 --> 00:04:25,240
So we need to tell the server how to handle this kind of request.

73
00:04:25,240 --> 00:04:26,740
You know the static files.

74
00:04:26,950 --> 00:04:30,620
So again we pretty much do the same thing before.

75
00:04:30,780 --> 00:04:32,480
Let me just go here.

76
00:04:32,680 --> 00:04:37,510
I'm going to go right here at the bottom now I'm even with all the middleware.

77
00:04:37,660 --> 00:04:38,560
That's OK.

78
00:04:39,320 --> 00:04:44,830
And I'll go right here and I'm going to say of course and I am going to register a middleware So app

79
00:04:45,070 --> 00:04:52,140
that Jews open and close and we say Xpress DOD and we say static.

80
00:04:52,420 --> 00:04:56,680
Now we need to pass an instruction of you know where to find static files.

81
00:04:56,770 --> 00:05:00,980
So they're going to be inside client and inside built.

82
00:05:01,020 --> 00:05:02,060
All right.

83
00:05:02,220 --> 00:05:04,170
And that is it I'm going to save it.

84
00:05:04,290 --> 00:05:07,830
And now we can have it ready of course to go to Heroku again.

85
00:05:07,830 --> 00:05:13,770
But first I'm going to do get status and begin to get you know just a server in this case because I

86
00:05:13,770 --> 00:05:14,570
just did it.

87
00:05:14,730 --> 00:05:26,760
But I can say at DOD then get command minus am and you know as server changes I'm going to press enter

88
00:05:26,820 --> 00:05:28,470
and then get push

89
00:05:31,680 --> 00:05:32,360
OK.

90
00:05:32,880 --> 00:05:36,720
So now I'm going to clear since everything is up to date.

91
00:05:36,720 --> 00:05:42,960
Inside get help and get I'm going to clear and we're going to do the get push Heroku.

92
00:05:42,960 --> 00:05:48,960
Now of course we are going to get pretty much the same build than before but this time the build is

93
00:05:48,960 --> 00:05:53,800
going to stop or actually it's going to do something before it stops and it's going to be that post

94
00:05:53,800 --> 00:05:54,420
Bill.

95
00:05:54,510 --> 00:05:57,430
We added right here Rick opposed Bill.

96
00:05:57,470 --> 00:05:57,720
All right.

97
00:05:57,720 --> 00:05:59,300
So let's try it.

98
00:05:59,300 --> 00:06:00,300
We're going to press enter.

99
00:06:00,300 --> 00:06:01,610
It's going to take a couple seconds.

100
00:06:01,740 --> 00:06:06,990
Of course we're going to get a pause and be right back whenever we get the post Bill.

101
00:06:06,990 --> 00:06:11,920
All right so now it starts stop the everything stopped with the post Bill.

102
00:06:12,040 --> 00:06:12,380
Right.

103
00:06:12,390 --> 00:06:16,920
And this command we added to the package to Jason and this is going to take a while because imagine

104
00:06:16,920 --> 00:06:23,040
that it needs to download the dependencies it needs to you know run the build for react and everything

105
00:06:23,040 --> 00:06:23,540
else.

106
00:06:23,580 --> 00:06:26,450
So let's give it a minute.

107
00:06:26,560 --> 00:06:30,780
OK so after everything was built we get you know the your L back.

108
00:06:30,820 --> 00:06:33,850
So let's go to the your L and check it out.

109
00:06:33,850 --> 00:06:35,060
I'm going to go right here.

110
00:06:35,140 --> 00:06:37,800
And of course we get something but it fails.

111
00:06:37,810 --> 00:06:41,450
But at least it's flashing something you know the header.

112
00:06:41,860 --> 00:06:45,520
Let's see if we get again we can get it again.

113
00:06:45,650 --> 00:06:51,690
Maybe we don't that's fine it doesn't matter of course I know why this is happening.

114
00:06:51,870 --> 00:06:57,580
So if I go in to inspect something it's happening and we can add property overdressed.

115
00:06:57,660 --> 00:07:05,990
So we get some errors but they are related to main dot and you know this is the jast This is the bundle.

116
00:07:06,210 --> 00:07:12,420
So it's actually creating the bundle and trying to re-enter the re-act application but everything fails.

117
00:07:12,450 --> 00:07:14,130
So why is it failing.

118
00:07:14,250 --> 00:07:18,930
Well the thing is that if we go to the database the data is pretty much empty.

119
00:07:18,930 --> 00:07:22,890
So it's trying to work with data we fetch from the database right from the start.

120
00:07:22,890 --> 00:07:25,930
Real simple data and it's failing to get it.

121
00:07:26,100 --> 00:07:32,120
So right here whenever the application starts it creates some of the you know some of the documents

122
00:07:32,130 --> 00:07:33,470
collections right here.

123
00:07:33,570 --> 00:07:34,410
But they are empty.

124
00:07:34,410 --> 00:07:36,600
So it kind of fails.

125
00:07:36,600 --> 00:07:36,970
All right.

126
00:07:36,990 --> 00:07:42,540
So we have two choices and this is going to take a couple of minutes and it's going to be a little bit

127
00:07:42,540 --> 00:07:43,260
weird.

128
00:07:43,320 --> 00:07:44,580
So we have two choices.

129
00:07:44,670 --> 00:07:49,940
You can manually go to Roble 3D just copy the contents of waves.

130
00:07:49,950 --> 00:07:57,270
In this case whatever you can add manually the collections you can do that or you can try to grab whatever

131
00:07:57,270 --> 00:08:01,540
you have in your computer and export it and then import it from here.

132
00:08:01,710 --> 00:08:02,690
And this is on the cloud.

133
00:08:02,790 --> 00:08:05,020
Notice that we are inside Mongul lab.

134
00:08:05,490 --> 00:08:07,580
So we're going to do that right now.

135
00:08:08,420 --> 00:08:08,790
OK.

136
00:08:08,790 --> 00:08:12,650
So inside the on the left and right here we have some options.

137
00:08:12,660 --> 00:08:18,370
And if we go to tools they you know they give us import and export Export helper.

138
00:08:18,600 --> 00:08:24,750
So we cannot just you know run an imported or maybe export them from Mungo's from rubble through the

139
00:08:24,960 --> 00:08:28,300
export files and then imported right here we can do that.

140
00:08:28,380 --> 00:08:31,760
We need to do it through here and you get several.

141
00:08:31,830 --> 00:08:33,880
You have several ways to do this.

142
00:08:34,080 --> 00:08:37,930
And they are all weird and complicated.

143
00:08:38,340 --> 00:08:41,730
So so we're going to be doing is this one the binary.

144
00:08:41,790 --> 00:08:48,390
So what we're going to do we're going to go to our you know our instance of Mongo in our computer and

145
00:08:48,390 --> 00:08:54,670
we're going to export to collection once we get that then we're going to import that database with Mungo's

146
00:08:54,670 --> 00:08:55,640
store.

147
00:08:55,650 --> 00:09:00,990
So right from the start in our computer whenever we installed Mungo you have access to these commands

148
00:09:01,130 --> 00:09:01,610
now.

149
00:09:01,650 --> 00:09:02,520
All right let's go.

150
00:09:02,520 --> 00:09:08,010
Here are going to do clear and I'm going to just show you that you just cannot run these commands for

151
00:09:08,010 --> 00:09:09,820
example right here we have Mongo dump.

152
00:09:09,960 --> 00:09:13,710
So if I paste that command not found.

153
00:09:13,710 --> 00:09:18,120
The thing is that we get we get this commands but they are inside the Mongo bin.

154
00:09:18,120 --> 00:09:20,780
So just like with it right here to start a connection.

155
00:09:20,850 --> 00:09:26,390
Let me see if I can find the first command we ran me one second.

156
00:09:26,390 --> 00:09:27,950
Let me try to find this.

157
00:09:27,990 --> 00:09:33,650
We have a lot of things of course could be real long I believe.

158
00:09:33,810 --> 00:09:35,260
I mean.

159
00:09:36,540 --> 00:09:37,680
Almost there.

160
00:09:37,680 --> 00:09:38,320
There we go.

161
00:09:38,440 --> 00:09:38,900
OK.

162
00:09:39,060 --> 00:09:45,180
So to start Mongo we do dot for Slash Mongo d pad and everything else.

163
00:09:45,270 --> 00:09:51,440
So this Mongo is just like the Mongo Dom and Mongo we store is pretty much the same thing.

164
00:09:51,450 --> 00:09:53,760
So what we need to do we need to go to Ben.

165
00:09:53,790 --> 00:09:56,930
And again if you're in windows you need to of course do the same thing.

166
00:09:57,000 --> 00:10:01,410
Open a new shell a new command prompt and navigate to the bin of Mongo.

167
00:10:01,410 --> 00:10:05,340
Just like with it to start we do start a mongo server.

168
00:10:05,730 --> 00:10:09,870
And then what we do we just use dot for Slash to access that commands.

169
00:10:09,900 --> 00:10:13,810
If I do that for Slash and Mongo dump something that's going to happen.

170
00:10:13,830 --> 00:10:16,120
But of course it's not going to really work.

171
00:10:16,140 --> 00:10:17,780
We need to type a lot of things.

172
00:10:17,790 --> 00:10:18,350
All right.

173
00:10:18,510 --> 00:10:21,090
So first I'm going to open a new tab right here.

174
00:10:21,090 --> 00:10:25,260
Going to make a click and new tab with the Mongo bin.

175
00:10:25,260 --> 00:10:27,610
Notice I'm inside the bend already.

176
00:10:27,990 --> 00:10:31,580
So first we need to do we need to run a command.

177
00:10:31,890 --> 00:10:37,440
And this is going to go to the robot 380 database and it's going to grab all the files and put it you

178
00:10:37,440 --> 00:10:40,740
know can convert into binary you know kind of be Jason.

179
00:10:40,930 --> 00:10:41,640
That's OK.

180
00:10:41,970 --> 00:10:45,460
And it will store all the files inside a directory.

181
00:10:45,510 --> 00:10:51,050
I've already created a directory I have here documents inside documents my example.

182
00:10:51,120 --> 00:10:54,700
I call this dump it's empty directory.

183
00:10:54,790 --> 00:10:55,370
That's OK.

184
00:10:55,500 --> 00:10:57,180
It's going to show you in a minute.

185
00:10:57,480 --> 00:11:01,440
So let's go back to the batch and what we need to do inside of the pen.

186
00:11:01,440 --> 00:11:08,810
We do dot for Slash then Mongo then dump just like that Mongo dump the next one.

187
00:11:08,940 --> 00:11:12,180
It's going to be the source the source of whatever we want to do.

188
00:11:12,180 --> 00:11:19,020
You know the Mongo instance in our computer so we do minus H to make a reference to the location of

189
00:11:19,020 --> 00:11:20,210
Mongo instance.

190
00:11:20,490 --> 00:11:23,650
So what is the Mongo instance localhost.

191
00:11:23,720 --> 00:11:29,840
2:7 Collon and you need the port 2 7 0 1 7 just like this.

192
00:11:30,060 --> 00:11:34,280
Then we do a space and we need to specify the D.V. name right.

193
00:11:34,300 --> 00:11:35,240
The database name.

194
00:11:35,250 --> 00:11:38,200
So we do minus and then D.

195
00:11:38,390 --> 00:11:44,730
It's kind of the shortcut for database and then we type the divi name our device name its waves.

196
00:11:44,850 --> 00:11:47,950
So I'm going to say waves the next one.

197
00:11:48,490 --> 00:11:56,020
We have the ability to do mine as you put the username and then minus P and then do the passport but

198
00:11:56,020 --> 00:11:58,750
we don't have a user and a password.

199
00:11:58,750 --> 00:12:05,280
Of course with databases you can add users and passport passports and they can only access through there.

200
00:12:05,470 --> 00:12:11,440
So instead of our Mongul instance we don't have any users so we don't specify a user or a password.

201
00:12:11,500 --> 00:12:12,080
That's OK.

202
00:12:12,100 --> 00:12:15,780
It's going to work then we do minus 0 and 0.

203
00:12:15,790 --> 00:12:21,420
It's going to be the director where are we going to be dumping all the files that dump directory.

204
00:12:21,450 --> 00:12:24,820
And and this one what we need to do we just pacify the location.

205
00:12:24,820 --> 00:12:29,280
If you're a Windows machine you will need to do see Collen or whatever.

206
00:12:29,310 --> 00:12:34,930
You know it's the local drive then forward slash maybe users and documents you will need to you know

207
00:12:34,990 --> 00:12:41,320
go to the location in our computer and of course if we are Mac we just do that.

208
00:12:41,490 --> 00:12:49,090
Tilda just like this then for Slash and I'm going to go to documents for Slash documents for Slash and

209
00:12:49,090 --> 00:12:51,150
then that dump directory.

210
00:12:51,370 --> 00:12:59,010
I'm going to press enter and after you get this if I go to that directory we get the waves inside dump.

211
00:12:59,020 --> 00:13:01,030
So creating a directory for us.

212
00:13:01,150 --> 00:13:06,190
And if I enter we get all the you know all the data.

213
00:13:06,250 --> 00:13:09,790
So what we need to do now is run a different command.

214
00:13:09,970 --> 00:13:13,230
But instead of exporting this we need to import I'm sorry.

215
00:13:13,230 --> 00:13:18,280
Importing Karena export from our our instance of Mongo.

216
00:13:18,340 --> 00:13:23,810
We need to run a command to import it from the Mongo divi on the cloud.

217
00:13:24,160 --> 00:13:24,730
Right.

218
00:13:24,730 --> 00:13:27,140
So let's begin with that right.

219
00:13:27,140 --> 00:13:32,300
So now we need to do pretty much the same thing but the opposite side we need to grab whatever we get

220
00:13:32,300 --> 00:13:35,750
inside the directory and put it inside Mongolia laugh.

221
00:13:35,840 --> 00:13:38,170
And again we go to Tools right here.

222
00:13:38,200 --> 00:13:39,110
You get the command.

223
00:13:39,110 --> 00:13:45,530
It's Mongul restore than the name of this instance of Mongo TV and you get all the information right

224
00:13:45,530 --> 00:13:45,820
here.

225
00:13:45,820 --> 00:13:48,500
The database user and everything else.

226
00:13:48,680 --> 00:13:50,520
Then you will need a username password.

227
00:13:50,540 --> 00:13:52,310
And I'm a little bit curious right here.

228
00:13:52,430 --> 00:13:58,710
I never tried this without a user and without a password I always you know create a used in a password.

229
00:13:58,730 --> 00:14:04,280
Of course if there's we're going to try it and if it doesn't if it's not working then we will at the

230
00:14:04,280 --> 00:14:05,330
user password.

231
00:14:05,330 --> 00:14:06,670
How can you add users.

232
00:14:06,660 --> 00:14:11,800
You go to the users tap out a database user username and password resemble.

233
00:14:11,840 --> 00:14:12,320
All right.

234
00:14:12,440 --> 00:14:14,160
So let's try this one.

235
00:14:14,270 --> 00:14:18,710
I'm going to copy Mongul restore go to the bin.

236
00:14:18,800 --> 00:14:27,410
And remember that we need to do that for in case Mongul we store the space and I need to specify the

237
00:14:27,410 --> 00:14:28,130
place.

238
00:14:28,280 --> 00:14:31,770
And remember if you don't windows see column and everything else.

239
00:14:31,970 --> 00:14:42,060
If not if you're a Mac just like me that for Slash documents for Slash I believe it was a dump dump

240
00:14:42,330 --> 00:14:45,330
for Slash and then waves and for Slash.

241
00:14:45,760 --> 00:14:47,100
OK let's see what happens.

242
00:14:47,160 --> 00:14:49,420
Enter And

243
00:14:52,210 --> 00:14:55,140
well it should be all much longer.

244
00:14:55,720 --> 00:14:59,260
I believe that maybe something is wrong.

245
00:14:59,770 --> 00:15:02,040
Maybe we need to add the user and password.

246
00:15:02,050 --> 00:15:04,940
Let me go to collection's reload of course.

247
00:15:05,710 --> 00:15:08,690
The process right here whenever we do this actually goes ok.

248
00:15:08,830 --> 00:15:13,650
It's much much much longer not outcries so yeah.

249
00:15:13,700 --> 00:15:14,540
OK.

250
00:15:14,790 --> 00:15:15,590
That is good.

251
00:15:15,700 --> 00:15:16,870
Let's try it again.

252
00:15:16,900 --> 00:15:19,100
I'm going to call and go to Tools.

253
00:15:19,120 --> 00:15:22,370
I got a copy pretty much all.

254
00:15:23,180 --> 00:15:26,090
And I'm going to just stop and password.

255
00:15:26,360 --> 00:15:29,720
We're going to do that forward slash then Mongo restore.

256
00:15:29,780 --> 00:15:30,390
Right.

257
00:15:30,410 --> 00:15:32,530
And then you know pretty much the same thing of course.

258
00:15:32,660 --> 00:15:34,670
This one is for import database.

259
00:15:34,670 --> 00:15:35,720
Make sure of that.

260
00:15:36,080 --> 00:15:41,690
And we are importing a database not a collection collection is just a single part.

261
00:15:42,080 --> 00:15:43,540
So you have the user password.

262
00:15:43,550 --> 00:15:46,360
Let's create a user in a password and see what happens.

263
00:15:46,700 --> 00:15:52,620
So I read mine and then password one two three.

264
00:15:52,700 --> 00:15:54,810
Let me do it again password.

265
00:15:54,820 --> 00:15:56,020
One two three.

266
00:15:56,030 --> 00:15:56,990
One more time.

267
00:15:56,990 --> 00:15:57,900
Passport.

268
00:15:57,980 --> 00:15:59,320
One two three.

269
00:15:59,630 --> 00:16:02,890
Of course in real life you need to be a little bit more creative than this.

270
00:16:02,900 --> 00:16:06,450
So create.

271
00:16:06,590 --> 00:16:08,680
All right so now we have get a user.

272
00:16:08,700 --> 00:16:18,860
So we're going to go to user and say f my last name which in English means Wolf kind of weird.

273
00:16:19,130 --> 00:16:22,370
So then password one two three.

274
00:16:22,910 --> 00:16:28,570
And then of course and don't say same thing for Slash then documents.

275
00:16:29,140 --> 00:16:35,430
Then of course for Slash and it's dump for Slash and then waves.

276
00:16:35,690 --> 00:16:44,080
Just make sure waves and then dump and then cut and then are going to do four slash press center.

277
00:16:44,330 --> 00:16:46,670
And it works.

278
00:16:46,700 --> 00:16:48,610
Told you this is much much bigger.

279
00:16:48,620 --> 00:16:49,480
All right.

280
00:16:49,760 --> 00:16:52,090
So you need to use the password now we know.

281
00:16:52,370 --> 00:16:53,560
So I going to go to collections.

282
00:16:53,570 --> 00:16:56,570
If you just go to collections nothing really happens.

283
00:16:56,570 --> 00:16:59,140
So I'm going to reload the application.

284
00:16:59,390 --> 00:17:01,370
And now we get all the documents.

285
00:17:01,370 --> 00:17:03,600
So the migration is done.

286
00:17:03,770 --> 00:17:06,460
Of course we didn't have a lot of things but this could be much bigger.

287
00:17:06,590 --> 00:17:08,510
So including one by one.

288
00:17:08,780 --> 00:17:10,460
You know I'm not a good idea.

289
00:17:10,460 --> 00:17:11,250
All right.

290
00:17:11,390 --> 00:17:14,120
So I have one more problem I want to fix.

291
00:17:14,120 --> 00:17:19,790
I never tested this before and realized that I have a problem in my code.

292
00:17:19,910 --> 00:17:25,710
If I go to Minsk on the server routes I have API for class users and nothing.

293
00:17:25,730 --> 00:17:27,720
And the same thing with site voice site.

294
00:17:27,740 --> 00:17:30,600
So this works and that this one has a four slash.

295
00:17:30,680 --> 00:17:36,020
So on the development server this works but on production this will not work is going to give us an

296
00:17:36,020 --> 00:17:37,020
error message.

297
00:17:37,310 --> 00:17:40,400
So I'm going to change that and I'm going to do it again.

298
00:17:40,430 --> 00:17:41,950
You know push everything again.

299
00:17:42,080 --> 00:17:49,640
Get as you can get this part if you wish it and then get push ups or get commit minors.

300
00:17:49,680 --> 00:18:00,610
Am I the Sam then the message which is change routes server whatever.

301
00:18:00,930 --> 00:18:04,510
Then go get push.

302
00:18:05,630 --> 00:18:10,190
And then I'm going to go to Heroku again like I told you you can skip this because you know you know

303
00:18:10,190 --> 00:18:11,390
this kind of boring.

304
00:18:11,750 --> 00:18:17,830
So get push and then Heroku going to try one more time going to pause the video so it can be a little

305
00:18:17,840 --> 00:18:18,630
bit faster.

306
00:18:19,410 --> 00:18:23,190
For you at least OK so everything was done.

307
00:18:23,230 --> 00:18:26,150
I'm going to copy and check it out.

308
00:18:26,440 --> 00:18:27,460
Let's see what happens.

309
00:18:27,460 --> 00:18:34,000
Hopefully no mistakes so I can go to the route and

310
00:18:37,180 --> 00:18:40,270
we are good to go to everything works.

311
00:18:40,390 --> 00:18:46,390
So if you scroll down you know the Lanc you're getting you're getting the images from you know college

312
00:18:46,390 --> 00:18:48,230
Narey and everything goes OK.

313
00:18:48,250 --> 00:18:52,260
Now if I go to this beautiful sir.

314
00:18:52,690 --> 00:18:54,200
It works.

315
00:18:54,300 --> 00:18:54,920
All right.

316
00:18:54,970 --> 00:18:56,430
So everything works for now.

317
00:18:56,440 --> 00:19:01,650
Now of course if I do this that we will get an end and we are not going to get any message.

318
00:19:01,690 --> 00:19:04,510
Yeah I remember we get it on the council but I'm not going to do it.

319
00:19:04,870 --> 00:19:07,790
Everything works as expected.

320
00:19:07,900 --> 00:19:08,560
Right.

321
00:19:08,590 --> 00:19:10,000
So I get to go to home back home.

322
00:19:10,060 --> 00:19:11,290
I'm going to try to log in.

323
00:19:11,470 --> 00:19:19,000
So Frances password one two three law again and we are able to log in and we of course maintain the

324
00:19:19,060 --> 00:19:20,980
information about the user.

325
00:19:21,430 --> 00:19:26,010
Let's try to go to home if I at a Navan is a gem.

326
00:19:26,020 --> 00:19:28,590
It is a deep bass guitar.

327
00:19:28,890 --> 00:19:29,540
Can add it.

328
00:19:29,560 --> 00:19:34,190
We get the cart and you know we get my guitar and then the jam.

329
00:19:34,270 --> 00:19:37,060
So everything works man very good.

330
00:19:38,270 --> 00:19:38,750
OK.

331
00:19:38,830 --> 00:19:42,490
So this is the last thing we're going to do are going to skip everything.

332
00:19:42,490 --> 00:19:49,540
I'm going to put everything inside this project this waste repository so you can get the final code

333
00:19:50,410 --> 00:19:56,200
and I'm going to be adding some more sections at first going to add more to WIPs because you know this

334
00:19:56,200 --> 00:20:02,230
is the more complete one and most of the notes students or people want to know about this one.

335
00:20:02,410 --> 00:20:06,580
So I'm going to add some more which adds some more functionality to this one.

336
00:20:06,580 --> 00:20:12,430
And of course on each section I get to add tiny sections as long as the discourse is pretty much done

337
00:20:12,460 --> 00:20:13,560
with waste project.

338
00:20:13,570 --> 00:20:14,190
It's not.

339
00:20:14,320 --> 00:20:17,510
But you know just for fun I'm going to add and I have a list right here.

340
00:20:17,530 --> 00:20:18,070
Maybe you can.

341
00:20:18,070 --> 00:20:24,200
Of course maybe make some comments in what you want to add or maybe what you're interested in.

342
00:20:24,280 --> 00:20:28,950
You know I'm going to generate an ID whenever a user buys something.

343
00:20:28,990 --> 00:20:32,570
Remember whenever we buy something we get the idea from pay pal.

344
00:20:32,650 --> 00:20:36,400
Well this time we're going to generate again to do a hash.

345
00:20:36,760 --> 00:20:44,590
Our own custom hash and I'm going to return that one again inside of the you know the database and then

346
00:20:44,590 --> 00:20:51,730
of course I'm going to add here maybe an end point where we can see all the purchases with the ID and

347
00:20:51,730 --> 00:20:58,360
everything else and on the mike my account on user history I can add the ID that ID of purchase.

348
00:20:58,450 --> 00:21:00,820
So we can make a reference to that ID on the database.

349
00:21:00,820 --> 00:21:01,900
That's one thing.

350
00:21:02,240 --> 00:21:09,130
Know maybe not that simple but the point right here is just it's going to be very simple just like my

351
00:21:09,130 --> 00:21:10,300
account just like this.

352
00:21:10,360 --> 00:21:15,570
A simple simple table what else are going to do a reset password.

353
00:21:15,670 --> 00:21:17,480
Right now we cannot password.

354
00:21:17,710 --> 00:21:21,670
If I go to log in you know forgot my password we didn't get that.

355
00:21:21,670 --> 00:21:23,200
So I'm going to do it.

356
00:21:23,200 --> 00:21:25,180
What else.

357
00:21:25,200 --> 00:21:29,680
I'm going to give you maybe a couple of options with sending e-mails maybe when the users log in you

358
00:21:29,680 --> 00:21:31,680
want to have a service or something.

359
00:21:31,810 --> 00:21:34,370
Or you can send an e-mail whenever they log in.

360
00:21:34,510 --> 00:21:40,240
Or maybe when they reset the passport maybe send the hash you know to the e-mail.

361
00:21:40,590 --> 00:21:45,230
Do the user e-mail and they didn't then they can enter to a different route with that hash.

362
00:21:45,400 --> 00:21:50,710
And we said the passport you know the usual usual stuff what else I was going to show you how to upload

363
00:21:50,740 --> 00:21:52,830
images with multi-hour.

364
00:21:53,080 --> 00:21:55,000
That's when it's very very simple.

365
00:21:55,010 --> 00:21:56,130
No not that hard.

366
00:21:56,290 --> 00:22:01,990
But maybe I'm not going to do it on this end point to this project I'm going to maybe create a tiny

367
00:22:01,990 --> 00:22:10,180
tiny tiny form with a server with no Jair server are going to show you how to use motter it's very very

368
00:22:10,180 --> 00:22:19,900
simple because if I if I tried to do this on beaches go here Francis passport one two three if I had

369
00:22:19,900 --> 00:22:25,920
to show you how to link can to do everything inside of our products.

370
00:22:25,990 --> 00:22:31,000
I'll have to you know kind of kill the logic right here and mortified.

371
00:22:31,010 --> 00:22:32,490
I don't want to I don't want to do that.

372
00:22:32,490 --> 00:22:34,220
I just want to leave this like this.

373
00:22:34,360 --> 00:22:36,330
And maybe in a different component.

374
00:22:36,340 --> 00:22:43,450
Just show you how to do it with Mulder just with a couple of images maybe a couple of images and nothing

375
00:22:43,450 --> 00:22:43,680
else.

376
00:22:43,690 --> 00:22:44,630
Maybe with files.

377
00:22:44,670 --> 00:22:45,570
That's OK.

378
00:22:46,090 --> 00:22:54,300
And then I have some minor improvements maybe I really didn't do the job.

379
00:22:55,210 --> 00:22:55,830
No it didn't.

380
00:22:55,840 --> 00:22:56,770
The 4:4.

381
00:22:56,790 --> 00:22:57,120
OK.

382
00:22:57,160 --> 00:22:58,160
I'm going to add it to the list.

383
00:22:58,160 --> 00:22:59,370
We didn't do a for a four.

384
00:22:59,380 --> 00:23:00,750
So I'm going to do it for four.

385
00:23:00,830 --> 00:23:04,320
That what should be really really really simple.

386
00:23:04,360 --> 00:23:10,390
We did it on the second project and after and done adding things to waves I'm going to add a few things

387
00:23:10,390 --> 00:23:11,920
to the second project.

388
00:23:11,920 --> 00:23:15,450
They are more firebase related stuff.

389
00:23:15,940 --> 00:23:23,830
But that said and of course as time goes goes by if something comes up I'm going to just create a component

390
00:23:23,830 --> 00:23:26,790
or maybe a tiny widget and show you how to do it.

391
00:23:26,890 --> 00:23:27,260
All right.

392
00:23:27,340 --> 00:23:27,860
OK.

393
00:23:28,060 --> 00:23:33,660
So I hope you enjoyed the project and catch you maybe on the next course.

