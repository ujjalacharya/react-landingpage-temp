1
00:00:01,390 --> 00:00:06,520
OK so now what are we going to be doing is creating the route to process all of this.

2
00:00:06,640 --> 00:00:10,170
And then of course you get to go to the producers and do everything else.

3
00:00:10,240 --> 00:00:13,170
But for now which is going to you know do this.

4
00:00:13,360 --> 00:00:13,620
OK.

5
00:00:13,660 --> 00:00:19,010
So I get close some of the things because they have everything open and I really like it.

6
00:00:19,030 --> 00:00:19,470
There you go.

7
00:00:19,510 --> 00:00:22,370
So let's go to the server right here.

8
00:00:22,690 --> 00:00:26,040
And of course we need to create a route and it's inside users.

9
00:00:26,110 --> 00:00:30,420
So I'm going to go right here at the bottom and added to the users we're going to create a route.

10
00:00:30,430 --> 00:00:37,750
It's going to be an app and it's going to be a post and a U R L for this is going to be API API for

11
00:00:37,750 --> 00:00:40,930
Slash use words plural.

12
00:00:41,020 --> 00:00:48,190
And then success and then by and of course we will use the Our Connector coma and then we just run a

13
00:00:48,190 --> 00:00:49,220
function right.

14
00:00:49,390 --> 00:00:51,220
Just like always.

15
00:00:51,230 --> 00:00:52,260
All right.

16
00:00:52,600 --> 00:00:57,040
So of course we will get our request our response.

17
00:00:57,040 --> 00:01:01,500
Now before we go inside of here we need to do a lot of things first.

18
00:01:01,840 --> 00:01:04,980
So let me tell you a little bit of what you're going to be doing.

19
00:01:05,200 --> 00:01:08,740
First we're going to enter the user history right.

20
00:01:08,770 --> 00:01:13,120
Remember that on each user We're going to show you right now and I'm going to show you the final one

21
00:01:13,150 --> 00:01:15,760
because on the on this one we don't have anything.

22
00:01:15,800 --> 00:01:19,140
So going to show you what's can happen at the end.

23
00:01:19,180 --> 00:01:22,140
So going to go to the user and they're going to go to this one.

24
00:01:22,210 --> 00:01:24,010
We have a history right.

25
00:01:24,010 --> 00:01:30,130
We have a history place so we're going to grab what everything the user has on the card after they make

26
00:01:30,130 --> 00:01:33,500
the purchase and we're going to store that inside history.

27
00:01:33,790 --> 00:01:37,930
So whenever we complete the purchase the history will contain whatever they just bought.

28
00:01:37,960 --> 00:01:38,650
Right.

29
00:01:38,830 --> 00:01:39,310
OK.

30
00:01:39,490 --> 00:01:43,220
So of course we have all happening right now inside of this.

31
00:01:43,230 --> 00:01:47,260
We're going to get the date of the purchase and what they purchased and of course we are not going to

32
00:01:47,260 --> 00:01:50,320
store the whole data of the product.

33
00:01:50,350 --> 00:01:51,610
You can do it if you want.

34
00:01:51,610 --> 00:01:54,150
That's completely up to you on this route.

35
00:01:54,160 --> 00:02:00,850
A lot of things are you know depending on what you're building and what the customer your customer not

36
00:02:00,880 --> 00:02:05,610
the one that makes the purchase declined that is higher you higher hiring you.

37
00:02:05,890 --> 00:02:07,580
What they want in this case.

38
00:02:07,630 --> 00:02:12,130
Just going to put the date of the purchase some date of the product and then the payment I.D..

39
00:02:12,130 --> 00:02:17,340
So again we're going to grab from the cart begin to go to history and store everything in there.

40
00:02:17,350 --> 00:02:21,880
So the first thing we need to do is to do the user history right.

41
00:02:22,090 --> 00:02:26,560
So after we do that we get the store on a different place.

42
00:02:26,590 --> 00:02:32,500
The payment information because the people that it's hiring you they will need may be a place we are

43
00:02:32,500 --> 00:02:35,520
not going to do it right here maybe I will add it as a bonus.

44
00:02:35,920 --> 00:02:41,230
They will need a place where they can log in on the admin and Che and check the purchases or something

45
00:02:41,230 --> 00:02:41,700
like that.

46
00:02:41,710 --> 00:02:46,810
You know an end point where they see what's going on with the purchase on their Web site and they will

47
00:02:46,810 --> 00:02:50,530
access that model and that model will have some information.

48
00:02:50,530 --> 00:02:55,850
Let me just show you on the fine one we will Krita are here a model called payments.

49
00:02:56,260 --> 00:03:02,380
And of course if we go to payments we will have three things again and this place at this point you

50
00:03:02,380 --> 00:03:08,560
can add whatever you want or whatever your client asks you in this case.

51
00:03:08,560 --> 00:03:13,000
I'm just going to add the user that made the purchase and this will be all the data of the user.

52
00:03:13,000 --> 00:03:13,980
Right.

53
00:03:14,010 --> 00:03:19,050
They're going to add the data which is the data that we get back from Pay-Pal.

54
00:03:19,270 --> 00:03:24,070
And this could be whatever could be something from Paypal or maybe a different service and then you

55
00:03:24,070 --> 00:03:28,620
know the product and the product is going to be whatever they you know they purchased.

56
00:03:28,750 --> 00:03:32,600
And if we have many We'll have many a race of items right here.

57
00:03:32,770 --> 00:03:34,820
Many are items inside the array.

58
00:03:35,260 --> 00:03:36,460
So this is what we need to do.

59
00:03:36,460 --> 00:03:45,340
So the second step is going to be the payments payments dash whatever.

60
00:03:46,060 --> 00:03:46,760
All right.

61
00:03:47,260 --> 00:03:52,830
So then we have a third step but that one is a little bit weird to explain right now.

62
00:03:52,930 --> 00:03:58,260
So first we're going to do all of this we can just change the history and change the payment.

63
00:03:58,480 --> 00:03:59,570
And then begin to talk.

64
00:03:59,710 --> 00:04:04,050
I'm going to give you the inside of the that we are at you know scenario.

65
00:04:04,230 --> 00:04:04,790
Okay.

66
00:04:05,170 --> 00:04:07,780
So we are going to enter here right.

67
00:04:08,010 --> 00:04:14,200
And from the from the from here whenever we make the request we go to you know make the request to the

68
00:04:14,200 --> 00:04:14,940
server.

69
00:04:15,100 --> 00:04:17,590
We will need to pass several things.

70
00:04:17,670 --> 00:04:18,620
Right.

71
00:04:18,790 --> 00:04:25,660
So we're going to be passing is the card detail whatever the user has on the card detail at this point

72
00:04:25,810 --> 00:04:31,490
right inside the store and the payment data we get from paypal.

73
00:04:31,510 --> 00:04:31,960
Right.

74
00:04:31,960 --> 00:04:32,520
OK.

75
00:04:32,800 --> 00:04:38,890
So I'm going to go to the server now from the payment card detail.

76
00:04:39,100 --> 00:04:46,240
Let me just show you from the card detail we might have one item or several items and we don't need

77
00:04:46,300 --> 00:04:48,820
all the information that we have on the card detail.

78
00:04:48,910 --> 00:04:54,700
We just need some of this information so we can and need to grab this from the from the route right

79
00:04:54,730 --> 00:05:01,960
from the request and kind of make our own array of data so we can store it on a different Olga.

80
00:05:02,240 --> 00:05:06,180
So let's begin with this is going to be a little bit long but you know in fun.

81
00:05:06,470 --> 00:05:10,330
So I'm going to create a viral called Let let.

82
00:05:10,370 --> 00:05:13,180
And then history is to read.

83
00:05:13,580 --> 00:05:15,540
And this one starts as an empty array.

84
00:05:15,650 --> 00:05:16,250
OK.

85
00:05:16,540 --> 00:05:23,840
Then I'm going to create a new Orval Coltrane's section Trinh section and then data and this data it's

86
00:05:23,840 --> 00:05:26,980
the data we get you know from the Pay-Pal that's good.

87
00:05:27,440 --> 00:05:34,000
So first is this user history we need a way to enter the card detail of the user.

88
00:05:34,100 --> 00:05:41,510
They may have one item or many many items and grabbed that information change it a little bit and stored

89
00:05:41,570 --> 00:05:43,720
on history again in the end.

90
00:05:43,730 --> 00:05:49,130
And our inside history we might have one article or maybe many articles if they are purchasing many

91
00:05:49,130 --> 00:05:49,850
things.

92
00:05:49,850 --> 00:05:50,450
All right.

93
00:05:50,750 --> 00:05:57,470
So if you remember we are Pat we're going to be passing the card detail from from the cart from redux

94
00:05:57,470 --> 00:05:59,130
from the client to the server.

95
00:05:59,300 --> 00:06:01,760
Now what you can do and it's completely up to you.

96
00:06:01,790 --> 00:06:04,830
You can get the card detail directly from the off.

97
00:06:04,850 --> 00:06:07,060
Remember that the returns

98
00:06:10,150 --> 00:06:16,180
right here the returns the user all the user information so you could get it from there.

99
00:06:16,210 --> 00:06:17,400
In this case I'm not going to do this.

100
00:06:17,410 --> 00:06:21,270
I'm just going to grab it from the actual you know request.

101
00:06:21,760 --> 00:06:22,360
OK.

102
00:06:22,510 --> 00:06:28,120
So since we are going to be passing Jason with the Paypal information and the user card detail I'm going

103
00:06:28,120 --> 00:06:30,120
to say I want to enter the request.

104
00:06:30,230 --> 00:06:37,810
I want to enter the body because we use Jason and that I'm going to grab the cart the cart cart and

105
00:06:37,810 --> 00:06:39,380
the detail.

106
00:06:39,400 --> 00:06:45,760
All right Dot Net going to do a for each now for each element on the card detail of course we get an

107
00:06:45,760 --> 00:06:49,380
item and then we will loop something going to do something.

108
00:06:49,600 --> 00:06:54,730
So what we want to do we want to grab each element inside the card detail and push that to the history

109
00:06:54,730 --> 00:06:55,420
of the user.

110
00:06:55,540 --> 00:06:55,950
Right.

111
00:06:55,970 --> 00:06:56,410
OK.

112
00:06:56,680 --> 00:07:00,760
So history dot push open and close.

113
00:07:01,000 --> 00:07:06,370
Are going to be passing an object you're going to have the and an array of objects if we have many card

114
00:07:06,370 --> 00:07:07,680
details.

115
00:07:07,690 --> 00:07:08,320
All right.

116
00:07:08,410 --> 00:07:13,330
I don't want to push all the information that we get inside card detail because that's a little bit

117
00:07:13,600 --> 00:07:14,500
long.

118
00:07:14,810 --> 00:07:20,070
No and it's not relevant why we would want the sold or maybe the images.

119
00:07:20,190 --> 00:07:24,140
You know we will need the ID and the name but why would I pushed it description.

120
00:07:24,160 --> 00:07:25,200
I don't want to store that.

121
00:07:25,210 --> 00:07:30,060
We don't need it so we can create our own object you know the data we need.

122
00:07:30,220 --> 00:07:35,480
So going to eight going at a date off and then purchase.

123
00:07:35,610 --> 00:07:38,750
So the date of purchase is going to be date now.

124
00:07:38,780 --> 00:07:43,440
And of course you can choose whatever you know method to add a date you want right here.

125
00:07:43,470 --> 00:07:44,970
It's completely up to you.

126
00:07:45,030 --> 00:07:46,120
There are going to a coma.

127
00:07:46,240 --> 00:07:48,160
Of course we need the name of the item.

128
00:07:48,250 --> 00:07:54,370
So going to enter the item and get the name from the card detail are going to enter the brand and it's

129
00:07:54,430 --> 00:07:56,300
item dot brand.

130
00:07:56,320 --> 00:08:00,280
And remember that then get the name we're going to get the item ID.

131
00:08:00,310 --> 00:08:04,810
So item that underscore ID are going to do coma.

132
00:08:04,960 --> 00:08:11,920
And then the prize open item that price then we need the quantity.

133
00:08:12,040 --> 00:08:21,880
So quantity item that quantity and we need one more thing we need the payment ID from Paypal remember.

134
00:08:21,940 --> 00:08:22,540
All right.

135
00:08:22,660 --> 00:08:31,390
So I'm going to say payment Id just like this payment ID Kong and this one we don't get it inside the

136
00:08:31,390 --> 00:08:33,020
item of the card detail right.

137
00:08:33,070 --> 00:08:34,160
We don't get it from there.

138
00:08:34,270 --> 00:08:39,640
We get from the other thing that we're going to be passing which is the Paypal data this one so that

139
00:08:39,640 --> 00:08:50,770
one it's inside request request that body that payment payment data are going to call it just like that

140
00:08:51,070 --> 00:09:00,370
dot and then payment I.D. And it's you know just like this because inside PayPal we get it just like

141
00:09:00,370 --> 00:09:03,490
this payment Id really be accessing this object.

142
00:09:03,490 --> 00:09:04,010
Right.

143
00:09:04,150 --> 00:09:08,490
So it requires body payment data and then payment I.D. everything looks nice.

144
00:09:08,620 --> 00:09:11,530
Now I'll just give you an example.

145
00:09:11,530 --> 00:09:17,560
After we process this and we store it inside of the history of the user it is going to look something

146
00:09:17,560 --> 00:09:21,620
like this and we give you a real example going to go to users.

147
00:09:22,030 --> 00:09:27,380
And here in the history we get two elements right this user but two things.

148
00:09:27,520 --> 00:09:33,880
So the first one it's the date of purchase the name the brand the I.D. the price and then the payment

149
00:09:33,880 --> 00:09:37,090
from you know quantity and payment from PayPal.

150
00:09:37,090 --> 00:09:41,860
So at the end we should be getting something like this and much later we going to fetch this history

151
00:09:41,860 --> 00:09:45,180
from the user and show it on the under my account.

152
00:09:45,430 --> 00:09:47,150
The history of purchases.

153
00:09:47,160 --> 00:09:47,760
All right.

154
00:09:47,930 --> 00:09:49,280
Well let's go back.

155
00:09:49,780 --> 00:09:54,730
So this is the first thing we have an array right now with all the history that we're going to be pushing

156
00:09:55,060 --> 00:09:56,330
to the user.

157
00:09:56,620 --> 00:09:59,540
So next one is going to be the payment dashboard.

158
00:09:59,590 --> 00:10:04,960
We need to pretty much grab part of this information and the payment and everything else that we get

159
00:10:04,970 --> 00:10:09,220
from from Paypal and it's stored inside a new model.

160
00:10:09,220 --> 00:10:14,670
Now for this of course we need a new model so we need the two models going to create a new file.

161
00:10:14,800 --> 00:10:16,810
And this one will be payment.

162
00:10:17,270 --> 00:10:19,710
Let me do it like this payment that.

163
00:10:21,760 --> 00:10:23,250
So I'm going to open payments.

164
00:10:23,470 --> 00:10:33,410
And of course we need to import so Konst mongoose equals require opening close and then mongoose.

165
00:10:33,450 --> 00:10:36,240
All right now we need to create a scheme out.

166
00:10:36,570 --> 00:10:44,940
So it's going to be payment and then schema right equals mongoose dot capital S schema.

167
00:10:45,030 --> 00:10:49,980
Open it close and we pass an object and I'm going to do the rest.

168
00:10:50,140 --> 00:10:56,920
So we can have a Konst called payment capital P payment just like this equals two.

169
00:10:56,980 --> 00:10:59,290
And when then we create a model.

170
00:10:59,710 --> 00:11:04,630
If you remember that the model needs an I.D. payment just like this.

171
00:11:04,630 --> 00:11:05,520
Capital P.

172
00:11:05,530 --> 00:11:09,050
And then we pass the payment schema to create this.

173
00:11:09,250 --> 00:11:18,760
And then of course we need to module that module that exports right and that equals and we just export

174
00:11:18,760 --> 00:11:21,880
disparate payments right here.

175
00:11:22,030 --> 00:11:29,010
Now just like a show you inside of the robo 3 2 payments we get three things.

176
00:11:29,110 --> 00:11:34,330
We get the user data of the data of the user that's making the purchase the data which is the data that

177
00:11:34,330 --> 00:11:36,370
comes from Pay-Pal.

178
00:11:36,460 --> 00:11:39,540
And then you know information about the products that they purchased.

179
00:11:39,550 --> 00:11:40,190
All right.

180
00:11:40,630 --> 00:11:49,130
So when you go to server sorry to payments and are going to go and first one it's the user.

181
00:11:49,270 --> 00:11:51,970
Now this one could be an object it could be whatever you want.

182
00:11:51,970 --> 00:11:57,220
In this case I'm just going to create an array and store everything inside of an array.

183
00:11:57,250 --> 00:11:59,980
You can go in a different way right here.

184
00:11:59,980 --> 00:12:04,310
So that default and the default is an empty array than coma.

185
00:12:04,400 --> 00:12:06,990
I'm going to say data open and close.

186
00:12:07,050 --> 00:12:10,080
And again this one is going to be an array.

187
00:12:10,080 --> 00:12:12,570
I'm going to copy and paste right.

188
00:12:12,610 --> 00:12:16,060
And then we have the product information about the product.

189
00:12:16,300 --> 00:12:19,420
So the product again is going to be on a rate and default.

190
00:12:19,420 --> 00:12:24,670
I'm going real simple right here you could add maybe different keys or different types.

191
00:12:24,670 --> 00:12:29,410
And you know in the process whatever it is that you want to process in this case I'm just going very

192
00:12:29,410 --> 00:12:35,430
simple user or user data with an object data with an object and the product with an array of objects.

193
00:12:35,840 --> 00:12:36,480
OK.

194
00:12:37,240 --> 00:12:38,770
Get well it's fine.

195
00:12:38,940 --> 00:12:39,990
So now we have this.

196
00:12:40,020 --> 00:12:43,920
So we need to require payment from the server.

197
00:12:44,070 --> 00:12:51,840
So we need to go at the top and just like here I'm going to say Konst and then payment with a capital

198
00:12:51,840 --> 00:12:55,880
P payment and it's equal.

199
00:12:55,880 --> 00:13:03,240
Require opening close that forward slash and that models and then payments.

200
00:13:04,050 --> 00:13:06,900
All right so now we have access to payments.

201
00:13:06,900 --> 00:13:07,550
Right.

202
00:13:07,560 --> 00:13:10,220
So let's called the bottom.

203
00:13:10,580 --> 00:13:15,800
Now of course right now we are not going to do this because to do something else because we have the

204
00:13:15,800 --> 00:13:23,790
all the information in pieces we didn't have just one object that says Okay here's the user data the

205
00:13:23,790 --> 00:13:25,940
data and the product all in one.

206
00:13:26,010 --> 00:13:26,600
We don't have it.

207
00:13:26,610 --> 00:13:32,170
So we need to kind of create a new object and you know grab it from different places from the history

208
00:13:32,200 --> 00:13:33,120
we get the user data.

209
00:13:33,120 --> 00:13:34,190
I'm sorry for the out.

210
00:13:34,230 --> 00:13:36,430
We get to use our data from history.

211
00:13:36,480 --> 00:13:39,500
We get the history of the transaction which is the products.

212
00:13:39,510 --> 00:13:43,950
And then of course from Pay-Pal we get the data of the paper of the payments.

213
00:13:43,950 --> 00:13:44,560
All right.

214
00:13:44,820 --> 00:13:46,150
So I'm going to go right here.

215
00:13:46,270 --> 00:13:52,940
I'm going to create I'm going to use distressed intersection data I'm going to say transaction data.

216
00:13:53,020 --> 00:13:57,870
Dodd and are going to add the information of the user just add keys to this.

217
00:13:57,870 --> 00:14:05,070
So this one is an object and we need to put the ID of the user which is inside request then user dot

218
00:14:05,160 --> 00:14:06,560
underscore ID.

219
00:14:06,750 --> 00:14:11,330
Remember we get it we are using the app so that's where where are going to be getting this.

220
00:14:11,340 --> 00:14:19,620
So then we have a name same thing it's request that user doesn't and the name what else we have the

221
00:14:19,680 --> 00:14:21,850
last name then.

222
00:14:21,960 --> 00:14:23,350
QUEST user.

223
00:14:23,370 --> 00:14:27,320
And then last name coma and then e-mail.

224
00:14:27,330 --> 00:14:31,070
So we are attaching very basic information about the user.

225
00:14:31,530 --> 00:14:40,290
All right user dot email and like I told before you could get the card detail you know from the US directly

226
00:14:40,530 --> 00:14:42,970
because we have all the information above the user.

227
00:14:43,260 --> 00:14:47,630
Now if you're thinking maybe someone could inject the information well that could happen.

228
00:14:47,640 --> 00:14:53,160
Of course there's always a chance that someone is going to try to break your application.

229
00:14:53,160 --> 00:14:58,740
But the thing is that of course just like always someone at the end will need to check that the payments

230
00:14:58,740 --> 00:15:03,480
inside payment PAME Pay-Pal the payment went through and everything is OK.

231
00:15:03,540 --> 00:15:08,950
And they of course they will contact the guy that it's buying there's check the shipping address.

232
00:15:09,030 --> 00:15:12,900
And then of course make the shipping so there's always someone controlling that.

233
00:15:12,900 --> 00:15:17,590
Everything is OK and there is no you know funky business going on there.

234
00:15:18,090 --> 00:15:18,710
OK.

235
00:15:19,230 --> 00:15:24,690
So now we have the user inside transaction data protection user section data user.

236
00:15:24,720 --> 00:15:25,590
Sorry.

237
00:15:25,710 --> 00:15:30,750
Then of course we need the data of people here are going to go very simple are going to grab whatever

238
00:15:30,810 --> 00:15:36,300
we get back from Pay-Pal say because body and then payment data.

239
00:15:36,390 --> 00:15:36,700
Right.

240
00:15:36,720 --> 00:15:42,280
This is where we have all the information about PayPal and we're going to stored inside data.

241
00:15:42,360 --> 00:15:49,080
This one could be you know payment data and then we need it we need a place where we can store the products.

242
00:15:49,080 --> 00:15:56,210
So I'm going to say transaction data dot product could be products because you know it might be part

243
00:15:56,220 --> 00:15:57,520
plural but that's OK.

244
00:15:57,780 --> 00:15:59,510
And right here you can do whatever you want.

245
00:15:59,670 --> 00:16:03,970
You can have the card detail and push everything to you know the product.

246
00:16:04,050 --> 00:16:08,910
But the thing is again you have a sold key you have a lot of things that you don't really need.

247
00:16:08,910 --> 00:16:10,210
Right right right there.

248
00:16:10,350 --> 00:16:16,050
So I'm going to use the history graph whatever we get inside history when we do it right here and store

249
00:16:16,140 --> 00:16:21,170
the history that contains you know the date of the transaction the name brand and you know a couple

250
00:16:21,170 --> 00:16:21,620
of things.

251
00:16:21,630 --> 00:16:25,160
And of course the transaction of PayPal the key but that's it.

252
00:16:25,170 --> 00:16:26,620
It's the first limb.

253
00:16:26,640 --> 00:16:27,140
All right.

254
00:16:27,200 --> 00:16:28,050
And that's it.

255
00:16:28,050 --> 00:16:35,200
So now we have the user history right here and then we have the payments information right.

256
00:16:35,300 --> 00:16:38,430
So we can store first inside of the user the history.

257
00:16:38,630 --> 00:16:44,120
And after we are done doing this we're going to go to payments and store a new payment.

258
00:16:44,120 --> 00:16:44,760
All right.

259
00:16:45,320 --> 00:16:47,120
So we're going to go right here at the bottom.

260
00:16:47,120 --> 00:16:49,190
Let me see if maybe this section went too long.

261
00:16:49,290 --> 00:16:49,510
OK.

262
00:16:49,520 --> 00:16:50,460
It's already too long.

263
00:16:50,570 --> 00:16:56,680
So on the next one we will start you know going to the database and making all the changes it's going

264
00:16:56,690 --> 00:16:57,400
to be really fun.

265
00:16:57,530 --> 00:16:59,930
So let's go to the next one and finish this.

