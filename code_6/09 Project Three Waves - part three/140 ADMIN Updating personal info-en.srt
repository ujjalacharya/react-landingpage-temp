1
00:00:00,580 --> 00:00:01,080
Right.

2
00:00:01,080 --> 00:00:04,910
So now we're going to be adding the user information which is going to it's going to be where we're

3
00:00:04,950 --> 00:00:11,090
going to be updating the user profile and begin to update the named last name and email then as a bonus

4
00:00:11,130 --> 00:00:17,210
again at a different component to you know reset the passport inside of here of course.

5
00:00:17,210 --> 00:00:17,780
OK.

6
00:00:18,120 --> 00:00:20,750
So let's create a component and we need to create.

7
00:00:20,750 --> 00:00:22,190
Do we need to get two things.

8
00:00:22,200 --> 00:00:24,210
The components we need to render.

9
00:00:24,210 --> 00:00:28,180
And then we need to route on the server where we can handle the request.

10
00:00:28,230 --> 00:00:31,950
But of course let's go first with the actual component.

11
00:00:31,950 --> 00:00:37,880
So we don't have a route I'm going to close everything and open just routes and I'm going to go to a

12
00:00:37,880 --> 00:00:46,060
user and inside of user of course we need to create a component called update profile.

13
00:00:46,190 --> 00:00:47,400
Yes.

14
00:00:47,520 --> 00:00:53,160
Now this update profile that Jay is going to be real simple it's just going to go to a different component

15
00:00:53,190 --> 00:00:55,540
which is going to render the information about the user.

16
00:00:55,680 --> 00:01:00,670
I'm not going to do it here because maybe as a bonus again I'm going to be adding things.

17
00:01:00,720 --> 00:01:04,000
So I went to you know create a clear place for this.

18
00:01:04,020 --> 00:01:08,530
So re-act stateless components just like that.

19
00:01:08,580 --> 00:01:13,320
And there's one update profile could be just user profile.

20
00:01:13,320 --> 00:01:14,020
All right.

21
00:01:14,370 --> 00:01:23,640
We need the user layout right here so import user and then lay out from and then dot forward slash.

22
00:01:23,730 --> 00:01:30,660
And I believe it's going to be oh sorry that that force one more time that that force slash a Josee

23
00:01:30,720 --> 00:01:33,410
and then user cut.

24
00:01:33,540 --> 00:01:39,950
So we need to wrap everything with the user layout right here going to add in each one which says profile.

25
00:01:40,200 --> 00:01:43,350
And then of course we're going to make a reference to our new component.

26
00:01:43,350 --> 00:01:45,880
I'm going to call it up update personal info.

27
00:01:46,260 --> 00:01:56,490
So import update personnel info or info and info and personal with a capital P..

28
00:01:56,520 --> 00:01:57,400
All right.

29
00:01:57,630 --> 00:01:58,780
We don't have this component.

30
00:01:58,790 --> 00:02:08,670
I'm going to go again to user not admin inside user and create a new directory file called update underscore

31
00:02:08,760 --> 00:02:15,800
and do it again update underscore personnel and then info dodginess.

32
00:02:15,990 --> 00:02:23,700
All right so if we can get imported from DOD forward slash and then update personnel and info.

33
00:02:24,090 --> 00:02:26,840
So we're going to make a reference to this component.

34
00:02:26,910 --> 00:02:31,780
Copy and paste and does it now on this one.

35
00:02:31,800 --> 00:02:33,760
This one of course we need to make this.

36
00:02:33,780 --> 00:02:40,170
We need to do handle state so it's a re-act class based component and are going to call it the same

37
00:02:40,260 --> 00:02:41,330
as this update.

38
00:02:41,340 --> 00:02:42,880
Personal info.

39
00:02:43,400 --> 00:02:46,090
OK and this one I'm going to say info.

40
00:02:46,140 --> 00:02:46,870
Whatever.

41
00:02:47,220 --> 00:02:54,690
Now of course we don't have a route for this so I'm going to go to our routes and import and I believe

42
00:02:54,690 --> 00:02:59,310
we can call it a personal info update profile update profile.

43
00:02:59,470 --> 00:02:59,670
Right.

44
00:02:59,700 --> 00:03:09,120
So update profile from date for Slash components for Slash user and then update profile.

45
00:03:09,240 --> 00:03:10,590
Now the route of this.

46
00:03:10,680 --> 00:03:16,770
First I'm going to copy this one and paste it at the bottom and it's going to be inside user this time

47
00:03:16,780 --> 00:03:27,030
not open and then user underscore profile profile and the free go to the route it's user oh so user

48
00:03:27,030 --> 00:03:33,120
profile that took it so can it copy the component and pass it here.

49
00:03:33,180 --> 00:03:35,910
It still update profile and just one true.

50
00:03:35,930 --> 00:03:36,490
All right.

51
00:03:36,660 --> 00:03:42,960
And since it's a user I'm going to chop it and put it with all the rest of the users right.

52
00:03:42,990 --> 00:03:47,490
So now of course we get the get the app and restart server.

53
00:03:48,120 --> 00:03:48,350
All right.

54
00:03:48,360 --> 00:03:50,640
So I go to a user information.

55
00:03:50,730 --> 00:03:51,610
We get it.

56
00:03:51,810 --> 00:03:57,450
Sometimes you get that loading it's because the server is not running again is not giving you any response

57
00:03:57,450 --> 00:04:00,040
back so that's why we get the loading but that's ok.

58
00:04:00,090 --> 00:04:01,890
Sometimes it's a little bit slow.

59
00:04:02,310 --> 00:04:04,600
All right so now we have the profile.

60
00:04:04,830 --> 00:04:06,820
So what do we need to do inside the profile.

61
00:04:06,930 --> 00:04:13,670
Well we need to create a state right here state where we can handle all the forms and everything else.

62
00:04:13,760 --> 00:04:19,700
So right from the start we need to import the form fields because we need to use it and instead of doing

63
00:04:19,700 --> 00:04:25,730
this I want to save some time are going to go to register log in to register and are going to copy this

64
00:04:25,850 --> 00:04:27,770
because it's pretty much the same.

65
00:04:27,770 --> 00:04:29,350
Same same idea.

66
00:04:29,540 --> 00:04:34,450
So going to copy and paste the form fields from you till we are going to use connect.

67
00:04:34,460 --> 00:04:38,410
So I'm going to copy the connect and put it right here at the bottom.

68
00:04:38,420 --> 00:04:39,310
What else do we need.

69
00:04:39,320 --> 00:04:40,970
We need the form actions.

70
00:04:41,000 --> 00:04:42,920
Remember form actions.

71
00:04:42,920 --> 00:04:49,320
So I'm going to copy and paste it at the bottom right and that is it for now.

72
00:04:49,340 --> 00:04:50,160
That is it.

73
00:04:50,180 --> 00:04:55,850
Of course after we create them we need to create this patch for the actions for this and everything

74
00:04:55,850 --> 00:05:03,110
else and we will create a new form action a new function because whenever we we are going to be rendering

75
00:05:03,110 --> 00:05:04,610
just some inputs.

76
00:05:04,820 --> 00:05:10,320
So whenever we enter here we need to fetch information from the user and populate the inputs.

77
00:05:10,330 --> 00:05:12,530
We can do this on other sections.

78
00:05:12,530 --> 00:05:13,540
Not in this project.

79
00:05:13,550 --> 00:05:17,950
So we're going to do it right now so what do we need first.

80
00:05:18,020 --> 00:05:19,830
First what we need is a state.

81
00:05:19,850 --> 00:05:21,330
Again we are using forms.

82
00:05:21,440 --> 00:05:24,580
So I'm going to say state equals open and close.

83
00:05:24,590 --> 00:05:29,880
And again I'm going to go to register and we still have the form are and the force form success.

84
00:05:30,020 --> 00:05:31,460
Then we have some form data.

85
00:05:31,460 --> 00:05:37,160
So I'm going to copy the form data and open and close Dargo.

86
00:05:37,160 --> 00:05:43,760
Now on the form data we have three different elements the name the last name and the email and if we

87
00:05:43,760 --> 00:05:46,650
go to register they are the same here.

88
00:05:46,760 --> 00:05:52,740
So again going to save some time or going to copy this and paste it right here.

89
00:05:53,180 --> 00:05:54,270
And that is it.

90
00:05:54,620 --> 00:05:59,210
We still need some functions from the from here just like the update form.

91
00:05:59,230 --> 00:06:00,900
Remember that function.

92
00:06:00,920 --> 00:06:06,530
So then it copy the update form I'm going to paste it right here and this one is going to be update.

93
00:06:06,590 --> 00:06:08,910
Underscore user.

94
00:06:09,440 --> 00:06:10,130
All right.

95
00:06:10,400 --> 00:06:13,470
Then on the what else do we have the submit form.

96
00:06:13,700 --> 00:06:19,340
So I'm going to copy the submit form and of course we're going to make it very simple can it copy paste

97
00:06:19,340 --> 00:06:23,510
the submit form instead of register right here is going to be update user.

98
00:06:23,540 --> 00:06:25,650
So update user update user.

99
00:06:25,810 --> 00:06:26,900
And there's one for now.

100
00:06:26,900 --> 00:06:28,970
We are not going to dispatch anything.

101
00:06:28,970 --> 00:06:37,000
So I'm just going to say console log data to submit so we can of course make some changes right here.

102
00:06:37,010 --> 00:06:38,600
All right let's get.

103
00:06:38,730 --> 00:06:42,800
So I'm going to go to the actual component right here.

104
00:06:42,870 --> 00:06:44,260
They will return.

105
00:06:44,420 --> 00:06:49,810
And we are going to return a div with the form again on the register.

106
00:06:49,850 --> 00:06:55,100
The form contains an answer made with the Submit submit form handler.

107
00:06:55,220 --> 00:06:58,710
So on safe bet we do the submit form.

108
00:06:58,790 --> 00:06:59,780
All right.

109
00:07:00,350 --> 00:07:08,960
So I can divide the the left and the right so we will use the same thing then register the form block

110
00:07:08,990 --> 00:07:09,570
2.

111
00:07:09,860 --> 00:07:11,720
And you know the blocks inside.

112
00:07:11,870 --> 00:07:17,400
So I'm going to copy this one the form block leaks the first one and I'm going to paste it right here.

113
00:07:17,510 --> 00:07:18,140
Very simple.

114
00:07:18,170 --> 00:07:21,350
Let me select this and make this a little bit nice.

115
00:07:21,620 --> 00:07:22,970
Nicer.

116
00:07:22,970 --> 00:07:23,740
There we go.

117
00:07:23,990 --> 00:07:26,440
So I will of course add a title.

118
00:07:26,540 --> 00:07:36,270
So it's going to be page 2 and then personal information could be personal account information.

119
00:07:36,290 --> 00:07:36,830
All right.

120
00:07:37,070 --> 00:07:43,820
So now we get the name same key and same key for the last name and the last one is going to be you know

121
00:07:43,940 --> 00:07:44,790
the e-mail.

122
00:07:44,930 --> 00:07:47,460
So for this one just going to be adding a dev.

123
00:07:47,690 --> 00:07:49,850
And what we need to do is same thing here.

124
00:07:49,910 --> 00:07:52,440
Just add the form field e-mail.

125
00:07:52,520 --> 00:07:54,530
So it's pretty much like the register.

126
00:07:54,530 --> 00:07:56,390
Same same idea.

127
00:07:56,390 --> 00:07:59,060
So of format selection.

128
00:07:59,180 --> 00:08:00,310
There we go.

129
00:08:00,830 --> 00:08:07,190
What's going happen with it but I'm again saying we will have a success as a form success in our error

130
00:08:07,220 --> 00:08:08,270
if we get an error.

131
00:08:08,450 --> 00:08:16,650
So we're going to copy this just same thing pretty much going to paste it and make it a little bit nicer.

132
00:08:17,060 --> 00:08:17,420
All right.

133
00:08:17,480 --> 00:08:21,910
So we do have one form error if we get an error and it's plit please check your data.

134
00:08:21,950 --> 00:08:22,810
That's OK.

135
00:08:23,030 --> 00:08:29,330
Now I'm going to add the success we didn't have it on the on the register because we were showing a

136
00:08:29,600 --> 00:08:32,640
dialog box but in this one we will show the success.

137
00:08:32,750 --> 00:08:37,420
So it's not state we make reference to that form success.

138
00:08:37,610 --> 00:08:41,710
And if we do have something we're going to do something if not no.

139
00:08:41,840 --> 00:08:42,510
Right.

140
00:08:42,890 --> 00:08:43,710
So the dev.

141
00:08:43,850 --> 00:08:50,640
It's the same no voice are going to attach class name of form success.

142
00:08:50,940 --> 00:08:51,440
Right.

143
00:08:51,540 --> 00:08:56,540
And you know this one is going to say success whatever.

144
00:08:56,640 --> 00:09:05,100
Now instead of create an account you know update abjured personal info whatever.

145
00:09:05,130 --> 00:09:05,910
Very good.

146
00:09:06,240 --> 00:09:09,570
So if you go to our component real simple.

147
00:09:09,570 --> 00:09:13,330
It took us nine minutes to create everything.

148
00:09:13,330 --> 00:09:19,570
Now the only thing we need to do is to of course dispatch an action with all this information but first

149
00:09:19,840 --> 00:09:24,690
I need to prefetching it Prete populate the information about the user inside of here.

150
00:09:24,700 --> 00:09:26,280
Let's do that right now.

151
00:09:26,290 --> 00:09:31,660
All right so if we think about this we don't need to dispatch an action to get the information about

152
00:09:31,660 --> 00:09:32,380
the user.

153
00:09:32,380 --> 00:09:36,040
We've have all everything inside the redux right store.

154
00:09:36,130 --> 00:09:37,660
So we can get it from here.

155
00:09:37,660 --> 00:09:42,890
Now the thing is that we might be using this function just like we did with update or data and is form

156
00:09:42,900 --> 00:09:43,450
valid.

157
00:09:43,510 --> 00:09:44,990
We could use it later.

158
00:09:45,100 --> 00:09:48,690
So on the component that bound are going to say component that Mt..

159
00:09:48,730 --> 00:09:56,860
Open and close and again to create a new virus called new form form data some like that and it's going

160
00:09:56,860 --> 00:10:04,930
to be equal to something and we can create a function inside of utils and forms and form actions that

161
00:10:04,930 --> 00:10:09,610
you know where we can grab the personal information and update state of this form.

162
00:10:09,610 --> 00:10:09,910
Right.

163
00:10:09,940 --> 00:10:11,120
Just like with that before.

164
00:10:11,380 --> 00:10:18,610
So I'm going to call it populate and then fields and not option fields.

165
00:10:18,700 --> 00:10:24,430
Make me the suggestion for this one because we have a populate option fields but this one is for the

166
00:10:24,430 --> 00:10:25,300
selects.

167
00:10:25,300 --> 00:10:31,780
So I don't want the option I just want fields right now again if we think about this what do we need

168
00:10:31,780 --> 00:10:32,990
instead of this function.

169
00:10:33,340 --> 00:10:39,240
We need the state of form data so we can loop that and replace the values and everything else.

170
00:10:39,430 --> 00:10:44,700
And we need the user data so we can you know grab the values and put it right here.

171
00:10:44,800 --> 00:10:45,450
OK.

172
00:10:45,880 --> 00:10:52,120
So I'm going to go and say the first argument there's that state that form data right.

173
00:10:52,180 --> 00:10:54,640
The second one is the user data.

174
00:10:54,940 --> 00:11:03,410
So there's that Propst that user and then that user data all right of course after we get the news the

175
00:11:03,410 --> 00:11:04,950
new state for new form.

176
00:11:04,970 --> 00:11:12,240
You know we get the new form the I'm sorry the OMI this that form the new state of form data.

177
00:11:12,490 --> 00:11:16,190
We want to set the state with whatever we get back from that function.

178
00:11:16,190 --> 00:11:25,160
So this that said state open and close and then we say that form data it's equal to new form data.

179
00:11:25,280 --> 00:11:30,670
I'm going a little bit fast because we kind of did this like five times already throughout the you know

180
00:11:30,730 --> 00:11:32,030
the whole course.

181
00:11:32,030 --> 00:11:35,930
So we did it a lot of times so there's no need to go really slow right here.

182
00:11:35,930 --> 00:11:38,600
So we're going to copy the name of the function.

183
00:11:38,630 --> 00:11:39,650
Going to go at the top.

184
00:11:39,650 --> 00:11:45,740
We need to include it and right here are going to do this and put populate fields and we're going to

185
00:11:45,740 --> 00:11:48,160
go to form actions and create the function.

186
00:11:48,350 --> 00:11:54,560
So we need to export the Konst so export Konst populate fields.

187
00:11:54,680 --> 00:11:58,550
This is just a function that returns something right.

188
00:11:58,550 --> 00:12:05,330
So on this function again we will be receiving the form data form and then data.

189
00:12:05,750 --> 00:12:07,120
I believe it did it just like this.

190
00:12:07,130 --> 00:12:16,280
I'm going to leave it like this doesn't matter right now and then fields right of course coma fields.

191
00:12:16,930 --> 00:12:19,490
Right so now what we need to do.

192
00:12:19,600 --> 00:12:23,690
The only thing we need to do we need to loop this form data right.

193
00:12:23,930 --> 00:12:29,760
And inside of this grab the same key we have in fields and you know replace the values.

194
00:12:29,770 --> 00:12:34,560
So just to show you that before I was doing this and this is actually correct.

195
00:12:34,690 --> 00:12:40,330
But you can do you can just grab the form data loop head without storing it inside of a new marble.

196
00:12:40,370 --> 00:12:41,400
You can totally do this.

197
00:12:41,400 --> 00:12:42,220
It's going to work.

198
00:12:42,220 --> 00:12:44,320
I'm just doing this just to be safe.

199
00:12:44,380 --> 00:12:45,340
So form.

200
00:12:45,420 --> 00:12:58,430
Oh sorry for opening close and then I'm going to say let let key in form data right.

201
00:12:58,600 --> 00:13:04,380
So for every keenly informed data we can grab the key and whatever is that we need to do in this case

202
00:13:04,380 --> 00:13:10,260
that bother you the valid and the touch and we can also grab the message validation message and replace

203
00:13:10,260 --> 00:13:13,980
it with whatever whatever we have in fields and then true or false.

204
00:13:13,980 --> 00:13:14,560
Right.

205
00:13:14,600 --> 00:13:15,620
So.

206
00:13:15,930 --> 00:13:24,080
So we have the form data open and close we pass the key and we enter the first one which is the value.

207
00:13:24,540 --> 00:13:33,150
And this one it's equal to fields and the same key right there we go updated the value are going to

208
00:13:33,160 --> 00:13:36,740
cover this one just here and they form data.

209
00:13:36,750 --> 00:13:40,300
Whoops let me copy the correct way.

210
00:13:40,620 --> 00:13:46,790
So ok then we have the valid and we need to set it to true because now we do have a value.

211
00:13:46,950 --> 00:13:48,030
So true.

212
00:13:48,660 --> 00:13:50,580
What else we need to form data.

213
00:13:50,580 --> 00:13:54,920
Again the key and we need to change the touched at the top.

214
00:13:54,930 --> 00:13:56,280
It's going to be true.

215
00:13:56,850 --> 00:13:59,920
And then of course we need to validate some validation measures message.

216
00:13:59,940 --> 00:14:02,400
So I'm going to copy and paste that.

217
00:14:02,520 --> 00:14:04,240
And we set it to nothing.

218
00:14:04,240 --> 00:14:14,270
And at the end of course we will return form data all right that is it.

219
00:14:14,280 --> 00:14:20,640
If we go back to our application and see if we get it we get an error C-y can out every property user

220
00:14:20,640 --> 00:14:22,460
data of undefined.

221
00:14:22,670 --> 00:14:26,100
This prompts that user and the user data.

222
00:14:26,130 --> 00:14:27,890
Let me just see why

223
00:14:32,000 --> 00:14:35,600
of course it's because I forgot to inject the props.

224
00:14:35,640 --> 00:14:38,340
That's why we are not getting it there.

225
00:14:38,450 --> 00:14:39,800
We have no props.

226
00:14:39,800 --> 00:14:40,130
All right.

227
00:14:40,130 --> 00:14:40,890
So over this.

228
00:14:40,910 --> 00:14:47,510
So I'm going to do maps data prompts and this happens when you go a little bit faster forget things.

229
00:14:47,510 --> 00:14:51,780
So we will enter the user will access the user and then user again.

230
00:14:51,820 --> 00:15:02,030
And we need to pass the connect open and close map state to props and then we pass it to the component.

231
00:15:02,910 --> 00:15:03,380
All right.

232
00:15:03,410 --> 00:15:09,500
So all the time now and we've got to get Francis and we get Jones and then Francis GM and that comes

233
00:15:09,580 --> 00:15:10,170
everything.

234
00:15:10,280 --> 00:15:11,260
It's correct now.

235
00:15:11,270 --> 00:15:13,370
Sorry for this mistake.

236
00:15:13,790 --> 00:15:18,660
So again when you go fast and talking at the same time you of course make mistakes.

237
00:15:18,740 --> 00:15:19,500
That's OK.

238
00:15:20,240 --> 00:15:21,820
So what do we need to do now.

239
00:15:21,980 --> 00:15:27,590
If I make a change I need to dispatch an action that action is going to go to the server and we will

240
00:15:27,590 --> 00:15:28,960
be updating the information.

241
00:15:28,970 --> 00:15:35,420
And when we return we will update the store with the new dig new information inside probs.

242
00:15:35,420 --> 00:15:36,030
All right.

243
00:15:36,190 --> 00:15:36,680
OK.

244
00:15:36,710 --> 00:15:38,750
So of course this went a little bit long.

245
00:15:38,840 --> 00:15:42,290
Let's go to the next one and create the route and the dispatch.

