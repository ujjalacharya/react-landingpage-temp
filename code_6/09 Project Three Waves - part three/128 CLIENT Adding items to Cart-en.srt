1
00:00:00,970 --> 00:00:04,420
OK so let's add products to the cart of the user.

2
00:00:04,660 --> 00:00:09,970
So if we you know think where are we going to be adding products to cards.

3
00:00:10,090 --> 00:00:11,890
We have two different places.

4
00:00:11,890 --> 00:00:15,570
We have the button this button right here on each card.

5
00:00:15,580 --> 00:00:17,680
Remember we have a component for this.

6
00:00:17,680 --> 00:00:22,680
And of course when we enter our new product we have the button to Carto we have two places.

7
00:00:22,840 --> 00:00:27,070
Right now we're going to do the first we're going to do the the the one on the cards and then we're

8
00:00:27,070 --> 00:00:29,530
going to go and do you know the one of the product.

9
00:00:29,530 --> 00:00:34,400
It's pretty much just our dispatch dispatch all of an action.

10
00:00:34,450 --> 00:00:34,800
Right.

11
00:00:34,840 --> 00:00:35,540
OK.

12
00:00:35,930 --> 00:00:37,140
I'm going to close everything.

13
00:00:37,330 --> 00:00:38,110
I don't need it.

14
00:00:38,110 --> 00:00:43,120
Just going to close it right now because it gets a little bit over whelming.

15
00:00:43,340 --> 00:00:44,360
I'm going to go to court.

16
00:00:44,370 --> 00:00:44,740
All right.

17
00:00:44,740 --> 00:00:46,080
That's the first place.

18
00:00:46,180 --> 00:00:51,400
So inside cart I need to bring redux because I need to dispatch an action so I'm going to go at the

19
00:00:51,400 --> 00:00:56,470
top and say import I'm going to do connect just like this.

20
00:00:56,470 --> 00:01:01,430
And from react Rita.

21
00:01:01,730 --> 00:01:03,530
All right.

22
00:01:03,730 --> 00:01:05,010
That's the first thing.

23
00:01:05,020 --> 00:01:08,220
Now we need to import an action called at to cart.

24
00:01:08,350 --> 00:01:09,130
We don't have it.

25
00:01:09,130 --> 00:01:20,100
I'm going to create it right now import at two and then cart from and then that forward slash that that

26
00:01:20,170 --> 00:01:21,150
that forward slash.

27
00:01:21,160 --> 00:01:27,510
And this one will be inside actions and I'm not getting the hour to complete the Riego actions for Slash

28
00:01:27,580 --> 00:01:29,530
and user actions.

29
00:01:29,610 --> 00:01:34,780
Can you store this inside user actions because you know even though it's related to product we are adding

30
00:01:34,870 --> 00:01:36,750
this to the user database.

31
00:01:36,760 --> 00:01:38,590
All right now we are bringing redux.

32
00:01:38,590 --> 00:01:44,520
We need to do the logic right here with CONNECT at the bottom of the hour of here.

33
00:01:44,600 --> 00:01:50,130
So I'm going to go and say connect opening close and then open and close.

34
00:01:50,140 --> 00:01:53,770
Now another thing I'm going to do I'm going to bring map state to prompts.

35
00:01:53,770 --> 00:01:56,880
Maybe you're wondering why bring him upstate props.

36
00:01:57,130 --> 00:02:04,180
Well the problem is that we want to add this to the user only if the user is logged in.

37
00:02:04,180 --> 00:02:09,760
What happens if the user has not indicated and you know this one it's a different component so what

38
00:02:09,760 --> 00:02:14,590
we need to do is to check inside prompts if the user is authenticated.

39
00:02:14,650 --> 00:02:21,590
If not of course we don't add anything so user and of course we need to put maps take to.

40
00:02:21,590 --> 00:02:28,150
So whenever this component loads we have the data of the user inside to state that user that user data.

41
00:02:28,150 --> 00:02:28,760
All right.

42
00:02:29,030 --> 00:02:29,410
OK.

43
00:02:29,620 --> 00:02:30,450
That's good.

44
00:02:30,820 --> 00:02:36,640
So instead of doing this I'm not going to do it right now because we should be getting an error message

45
00:02:36,670 --> 00:02:38,910
if we go right here and do something.

46
00:02:39,250 --> 00:02:39,740
But that's OK.

47
00:02:39,760 --> 00:02:43,490
I'm going to go and bring the action card.

48
00:02:43,600 --> 00:02:44,270
Right.

49
00:02:44,290 --> 00:02:46,330
Are going to go to user actions.

50
00:02:46,840 --> 00:02:50,800
And of course I'm going to add the type now the type.

51
00:02:50,830 --> 00:02:54,810
Again real simple to card user or something like that.

52
00:02:55,180 --> 00:02:59,670
Add to card and then user.

53
00:02:59,680 --> 00:03:03,400
All right let's add two other types.

54
00:03:03,400 --> 00:03:06,700
So export Konst.

55
00:03:07,870 --> 00:03:17,070
And of course add underscore to card user.

56
00:03:17,390 --> 00:03:17,890
OK.

57
00:03:18,070 --> 00:03:18,710
Very good.

58
00:03:18,850 --> 00:03:25,420
Now I get the type so I'm going to go back to user actions and I'm going to go right at the bottom.

59
00:03:25,570 --> 00:03:27,260
They're going to do of course to function.

60
00:03:27,290 --> 00:03:29,820
Now for now we are not going to do anything and the function.

61
00:03:29,830 --> 00:03:32,610
It's so simple it's really really simple.

62
00:03:32,680 --> 00:03:39,250
We just need to request the complicated part and this section is going to be on the server side so function

63
00:03:39,540 --> 00:03:44,610
our two cards are going to call it add to cart just like this.

64
00:03:44,800 --> 00:03:49,390
Open and close and we will be getting an ID which is the ID of the product.

65
00:03:49,390 --> 00:03:50,070
Right.

66
00:03:50,140 --> 00:03:59,620
And then of course we can return open close type with add to cart user and a payload that for now it's

67
00:03:59,620 --> 00:04:01,170
not going to do anything.

68
00:04:01,210 --> 00:04:03,110
We're going to do this in a couple of minutes.

69
00:04:03,880 --> 00:04:04,390
OK.

70
00:04:04,490 --> 00:04:08,850
Let's do the reducer so we can again get that out of the way.

71
00:04:09,080 --> 00:04:15,060
So user we have the coma ATM card user and Ronnie.

72
00:04:15,080 --> 00:04:22,400
Right now the only thing we're going to do is just return the state whenever we get the route done then

73
00:04:22,400 --> 00:04:23,540
we're going to finish this.

74
00:04:23,540 --> 00:04:27,990
So return that that that state.

75
00:04:28,070 --> 00:04:28,740
OK.

76
00:04:29,300 --> 00:04:30,040
Very good.

77
00:04:30,410 --> 00:04:31,570
So now I'm going to go to court.

78
00:04:31,580 --> 00:04:32,890
I'm going to go back to court.

79
00:04:32,900 --> 00:04:35,700
We have this ATM card function right here.

80
00:04:35,800 --> 00:04:37,280
Calls at the.

81
00:04:38,480 --> 00:04:44,280
And what we will need to do whenever is that when we do an enclave right here we want to dispatch an

82
00:04:44,280 --> 00:04:45,300
action right.

83
00:04:45,440 --> 00:04:50,290
And we have it right here in my inside of my button of the card Add to Cart.

84
00:04:50,330 --> 00:04:52,390
We are not going to do a console log anymore.

85
00:04:52,490 --> 00:04:55,270
Now we will dispatch an action that you know.

86
00:04:55,280 --> 00:04:56,990
Right now it's not going to do anything.

87
00:04:56,990 --> 00:05:02,190
Now we need to know if the user wants to add to the card and the user is antiquated.

88
00:05:02,330 --> 00:05:09,770
So first I'm going to check to prop's dot user dot user data remember that we get everything inside

89
00:05:09,780 --> 00:05:12,930
user data and then is ours.

90
00:05:13,160 --> 00:05:15,320
So if the user is out we will do it.

91
00:05:15,350 --> 00:05:20,790
If not we are not going to do anything or are we just going to say you know you need to log in.

92
00:05:20,840 --> 00:05:21,920
So I'm going to do it right here.

93
00:05:21,920 --> 00:05:26,970
You need to log in and right here we will do this.

94
00:05:27,050 --> 00:05:35,630
But Probst that dispatch and we do that at to cart remember that we are getting everything inside probs

95
00:05:35,690 --> 00:05:40,350
and we need to pass the ID so we pass the ID of the product.

96
00:05:41,090 --> 00:05:46,140
Of course if I'm not locked then I'm not going to get anything.

97
00:05:46,220 --> 00:05:48,380
Let me go right here to the console.

98
00:05:48,380 --> 00:05:53,840
If I add the cart nothing happens and if I go to state nothing happens right.

99
00:05:53,870 --> 00:05:56,590
Products to Shaab brands and everything else.

100
00:05:56,600 --> 00:05:58,130
So nothing really happens.

101
00:05:58,400 --> 00:05:59,060
OK.

102
00:05:59,270 --> 00:06:03,940
So of course if I log out and try to add from the cart we get.

103
00:06:03,950 --> 00:06:05,270
You need to log in.

104
00:06:05,690 --> 00:06:09,810
So right here you could show me a pop up or something like that.

105
00:06:09,860 --> 00:06:13,590
I'm not going to really do it because we overdid pop ups but it's very simple.

106
00:06:13,590 --> 00:06:19,610
It just render a different component could be a reusable component that says you need to log in go to

107
00:06:19,640 --> 00:06:21,950
log in and then maybe you can give a link.

108
00:06:21,980 --> 00:06:23,870
You know the usual stuff.

109
00:06:23,870 --> 00:06:26,660
Now the hard part it's going to be on the server.

110
00:06:26,870 --> 00:06:31,590
So let's go let's go to the server and do it.

111
00:06:31,630 --> 00:06:36,610
OK so now we get to do the user you know the card logic on the server.

112
00:06:36,770 --> 00:06:42,770
I can go to my car and I'm going to show you what I get from the final product.

113
00:06:42,790 --> 00:06:49,230
You know the final project because we have a we have a tiny problem that I need to explain with an example.

114
00:06:49,360 --> 00:06:50,980
If not you're not going to get it.

115
00:06:51,010 --> 00:06:56,450
So let's say that I'm a new user and I'm adding an item to the cart.

116
00:06:56,500 --> 00:06:58,050
Now I'm going to go to this.

117
00:06:58,300 --> 00:07:02,500
It's not offenders and Ivan is going to click at court and we get the number one.

118
00:07:02,500 --> 00:07:02,840
OK.

119
00:07:02,870 --> 00:07:09,550
So I'm adding to cart and we get the quantity of one ride and the prize and the total amount and everything

120
00:07:09,550 --> 00:07:10,600
else.

121
00:07:10,630 --> 00:07:12,770
So now I'm going to go and do this fender.

122
00:07:12,970 --> 00:07:14,080
So I'm going to add it.

123
00:07:14,110 --> 00:07:15,560
And now we have two items.

124
00:07:15,580 --> 00:07:20,280
They are two different items ride quantity of one quantity of one.

125
00:07:20,320 --> 00:07:26,100
What happens if I go back to guitars and I want to buy two of these guitars are going to look.

126
00:07:26,140 --> 00:07:30,220
And what we're going to show a different element with the same guitar.

127
00:07:30,430 --> 00:07:31,690
Well not really.

128
00:07:31,690 --> 00:07:32,730
So when I'm going to do.

129
00:07:32,750 --> 00:07:34,750
I'm going to cook it right here.

130
00:07:34,780 --> 00:07:36,690
And we get nothing right here at the top.

131
00:07:36,760 --> 00:07:38,500
But now we get the quantity of two.

132
00:07:38,620 --> 00:07:45,640
So from the server we need to of course enter to the user information on the database check if what

133
00:07:45,640 --> 00:07:46,720
they are trying to add.

134
00:07:46,750 --> 00:07:53,260
It's already on the database and go to this product they have on the cart and change the quantity of

135
00:07:53,320 --> 00:07:55,030
to if of course the product.

136
00:07:55,040 --> 00:07:56,530
It's not duplicate it.

137
00:07:56,530 --> 00:07:59,230
Then we will add a new element to that array.

138
00:07:59,380 --> 00:08:05,300
And if you remember on the user data right here we get the cart.

139
00:08:05,320 --> 00:08:06,760
Let me see if I can find it.

140
00:08:07,560 --> 00:08:11,780
Maybe Of course we didn't have it because it's not you know we didn't have any cards.

141
00:08:12,030 --> 00:08:18,840
So let me go to user model so we have a card and it's a default of an empty array.

142
00:08:19,260 --> 00:08:19,600
All right.

143
00:08:19,620 --> 00:08:27,400
So let's begin with all of this inside of the server and to use this closes and go to the server.

144
00:08:27,580 --> 00:08:30,940
You go to the user part of the file.

145
00:08:31,350 --> 00:08:33,460
And why not here at the bottom.

146
00:08:34,490 --> 00:08:34,710
OK.

147
00:08:34,730 --> 00:08:37,000
So let's begin all of this logic.

148
00:08:37,040 --> 00:08:38,350
So first we need a prompt.

149
00:08:38,390 --> 00:08:38,830
Right.

150
00:08:38,840 --> 00:08:44,720
So app that post open and close because we're going to be passing at least the idea.

151
00:08:44,820 --> 00:08:45,130
All right.

152
00:08:45,170 --> 00:08:55,320
So API for Slash users for Slash add to cart.

153
00:08:55,370 --> 00:08:57,210
This is the route that Acoma.

154
00:08:57,230 --> 00:08:59,290
And again they need to be authenticated.

155
00:08:59,360 --> 00:09:00,690
So this is the second check.

156
00:09:00,830 --> 00:09:02,600
The first one it's this one.

157
00:09:02,660 --> 00:09:08,080
But if they are still not authenticated the you know nothing is going to move forward.

158
00:09:08,630 --> 00:09:15,310
So open and close and we say request and response right now.

159
00:09:15,320 --> 00:09:22,910
Remember that whenever we are passing through the middle we're out with the returns the user.

160
00:09:23,000 --> 00:09:23,290
Right.

161
00:09:23,300 --> 00:09:25,280
All the data of that user.

162
00:09:25,590 --> 00:09:26,040
OK.

163
00:09:26,080 --> 00:09:28,420
That the user that contains this token.

164
00:09:28,420 --> 00:09:32,890
So by default inside the server you know where we are passing out of.

165
00:09:33,020 --> 00:09:37,520
And we go to the Colback right here we can enter the user information right.

166
00:09:37,610 --> 00:09:42,170
Like the user id and everything else and everything else is going air with all the information is going

167
00:09:42,170 --> 00:09:42,890
to be inside.

168
00:09:42,890 --> 00:09:46,610
Request that user just like this.

169
00:09:46,610 --> 00:09:47,660
All right.

170
00:09:47,660 --> 00:09:49,030
So first I want to use.

171
00:09:49,030 --> 00:09:55,340
I went to enter the user data on Mongo the user is trying to do something on their account.

172
00:09:55,430 --> 00:09:59,710
So I'm going to find the user right here I'm going to enter the data of the user.

173
00:09:59,870 --> 00:10:00,460
OK.

174
00:10:00,980 --> 00:10:06,220
So I'm going to say user because we have the model they're going to use find one.

175
00:10:06,380 --> 00:10:07,440
Right.

176
00:10:07,490 --> 00:10:08,980
So what are we going to be fine.

177
00:10:08,990 --> 00:10:13,600
We're going to be finding you know we need to find by ID because we are have the user ID.

178
00:10:13,700 --> 00:10:21,840
So I want to enter to that user id so request that user dot underscore ID.

179
00:10:22,130 --> 00:10:23,270
Right.

180
00:10:23,290 --> 00:10:30,920
I'm going to do koma open and close and then of course run the function error and duck.

181
00:10:31,250 --> 00:10:32,070
OK.

182
00:10:32,660 --> 00:10:38,270
Now the first thing we need to decide if this is the the what the user is trying to add.

183
00:10:38,330 --> 00:10:43,150
It is a duplicated entry inside of that array or not.

184
00:10:43,160 --> 00:10:43,680
All right.

185
00:10:43,760 --> 00:10:50,720
So first I'm going to set Barville of duplicate to false by default.

186
00:10:50,750 --> 00:10:55,210
We don't have a duplicated entry inside of the user card array.

187
00:10:55,210 --> 00:10:55,860
All right.

188
00:10:56,300 --> 00:11:01,190
So now since we get the information of Inside Out of the user information.

189
00:11:01,190 --> 00:11:01,540
Right.

190
00:11:01,570 --> 00:11:06,350
And even though we get it right here from dog whenever we find it one can access both.

191
00:11:06,620 --> 00:11:15,240
I can do Doc Dot card dot for each and I'm going to do for each open and close.

192
00:11:15,290 --> 00:11:21,100
So what we want to do we want to loop all the information that the user has inside the card.

193
00:11:21,150 --> 00:11:21,720
Right.

194
00:11:21,740 --> 00:11:24,960
Could be nothing or could be you know 20 articles.

195
00:11:25,230 --> 00:11:31,320
And if we find one that it's repeated with the one that they are trying to add then we change this duplicated

196
00:11:31,430 --> 00:11:32,100
it to true.

197
00:11:32,180 --> 00:11:34,010
So that field it's duplicated.

198
00:11:34,010 --> 00:11:37,000
And then of course that will decide what we are going to be doing here.

199
00:11:37,200 --> 00:11:42,650
So OK so I'm going to say item and then run a function.

200
00:11:42,920 --> 00:11:47,930
So if opening close and we're going to do something now what you can do as well.

201
00:11:47,930 --> 00:11:49,350
You can check all of this out.

202
00:11:49,490 --> 00:11:51,050
But I'm just making kind of adult check.

203
00:11:51,050 --> 00:11:55,590
I'm entering the user from this find one with the ID.

204
00:11:55,670 --> 00:11:56,360
All right.

205
00:11:56,810 --> 00:12:00,890
So I'm going to enter item and the ID right.

206
00:12:01,010 --> 00:12:01,480
OK.

207
00:12:01,820 --> 00:12:09,670
So then I can say equal equal equal equal equal and then request that query that product ID.

208
00:12:09,870 --> 00:12:10,980
Let me just.

209
00:12:11,300 --> 00:12:15,240
Product ID.

210
00:12:15,470 --> 00:12:21,200
So whenever we get the list of you know the thing that we want to add it's inside the query of product

211
00:12:21,200 --> 00:12:21,560
ID.

212
00:12:21,560 --> 00:12:23,560
This is going to come from the client.

213
00:12:23,600 --> 00:12:29,000
So now we have the idea of the product that they are trying to add and this item id we don't have it

214
00:12:29,060 --> 00:12:31,250
of course and that's why it's a little bit confusing.

215
00:12:31,400 --> 00:12:36,950
Whenever we are adding or we finish adding products inside of the array of the user.

216
00:12:37,160 --> 00:12:39,940
Right here let me just give you an example.

217
00:12:39,990 --> 00:12:44,850
We're going to have many products in our array of products and with the product we will have an ID.

218
00:12:45,050 --> 00:12:49,670
So what we are doing we are entering whatever information they have if they have information they do

219
00:12:49,670 --> 00:12:55,370
have information and we are checking if one of the all the elements they have in the cart contains the

220
00:12:55,370 --> 00:12:58,590
ID of whatever they are trying to update right now.

221
00:12:58,850 --> 00:13:05,260
So if we do find something on that array we're going to send that we can change it to placated to true.

222
00:13:05,850 --> 00:13:06,460
All.

223
00:13:06,500 --> 00:13:08,360
And let me go back on this one.

224
00:13:10,050 --> 00:13:17,040
So after this we know it would be useful to know the application knows that if they are trying to use

225
00:13:17,550 --> 00:13:20,100
to add a duplicate entry or not.

226
00:13:20,100 --> 00:13:25,730
So if we do have a duplicate it going to run some code right.

227
00:13:25,920 --> 00:13:27,930
If of course we have something new.

228
00:13:27,930 --> 00:13:29,620
Maybe they want to add something new.

229
00:13:29,640 --> 00:13:30,090
We're going to do.

230
00:13:30,090 --> 00:13:30,990
Else.

231
00:13:30,990 --> 00:13:32,820
And they're very different operations.

232
00:13:32,890 --> 00:13:39,690
If there is if it's duplicated we need to enter to that ID you know to the same ID enter and modify

233
00:13:39,690 --> 00:13:40,740
the quantity.

234
00:13:40,860 --> 00:13:43,240
If not we're going to push something new to that.

235
00:13:43,260 --> 00:13:43,960
Right.

236
00:13:44,280 --> 00:13:51,650
So when are we going to do the new one then begin to do the duplicated first since we have the user

237
00:13:51,730 --> 00:13:56,090
going to enter user and I'm going to say find one an update.

238
00:13:56,210 --> 00:14:00,350
We've already you know have the user we are already inside the user.

239
00:14:00,490 --> 00:14:07,070
But but we need to do is to update whatever inside the user to open and close.

240
00:14:07,250 --> 00:14:16,630
Can to go here and say underscore ID equals request coma user coma and then underscore ID.

241
00:14:16,630 --> 00:14:23,200
So we are pretty much entering the user data information in a coma and we need to tell what we want

242
00:14:23,210 --> 00:14:26,760
to do and now we need to push something to the right.

243
00:14:26,930 --> 00:14:29,650
So I'm going to say push common.

244
00:14:29,990 --> 00:14:31,490
We need to push an object.

245
00:14:31,760 --> 00:14:33,370
So we're going to push an object.

246
00:14:33,560 --> 00:14:34,670
What are we need to do.

247
00:14:34,670 --> 00:14:36,760
We need to push something inside cart.

248
00:14:36,830 --> 00:14:38,850
It's all in the mix space right here.

249
00:14:38,990 --> 00:14:41,180
We need to push something inside cart.

250
00:14:41,330 --> 00:14:43,040
And then what are we going to be pushing.

251
00:14:43,040 --> 00:14:43,310
All right.

252
00:14:43,340 --> 00:14:47,650
We're going to be pushing the following that that's the logic pretty much.

253
00:14:47,990 --> 00:14:56,070
Now whenever we push something we need you know several things we need the I.D. We need the mongoose

254
00:14:56,260 --> 00:15:01,210
sorry the ID sorry you let me go here and we need the quantity.

255
00:15:01,460 --> 00:15:06,630
So I'm going to say quantity just like this.

256
00:15:06,800 --> 00:15:12,660
And we prefix it to one because you know we are just adding one to the to the right.

257
00:15:12,680 --> 00:15:14,900
You know that item it's unique so far.

258
00:15:14,960 --> 00:15:17,880
Of course if it's duplicated begin to do the code right here.

259
00:15:18,200 --> 00:15:18,670
OK.

260
00:15:18,920 --> 00:15:26,060
And then I get to do coma and I'm going to put the date so date right and the date and right here you

261
00:15:26,060 --> 00:15:32,040
can choose whatever you want are going to do something simple to just put the date with javascript.

262
00:15:32,040 --> 00:15:41,840
Now whenever we push a new item to the cart right whenever we push an item to the cart we want to give

263
00:15:41,840 --> 00:15:49,150
an ID because later we're going to be searching by id and the ID has to be an object ID.

264
00:15:49,180 --> 00:15:52,120
You know the mongoose type object ID.

265
00:15:52,370 --> 00:15:57,470
So I'm going to go right here and say mongoose dot types.

266
00:15:57,470 --> 00:16:02,150
Remember if we overdid this i'm said that this is an object ID.

267
00:16:02,270 --> 00:16:10,590
And of course I'm going to be passing that request that Querrey dot product ID.

268
00:16:10,700 --> 00:16:13,460
So that's going to be the ID.

269
00:16:13,460 --> 00:16:13,830
All right.

270
00:16:13,880 --> 00:16:15,330
And that is that is it for now.

271
00:16:16,080 --> 00:16:19,080
Of course right here I'm going to do coma.

272
00:16:19,450 --> 00:16:24,550
And I want to get the document back you know whatever the day whatever.

273
00:16:24,640 --> 00:16:28,320
After we push this to the database I want to get that document back.

274
00:16:28,470 --> 00:16:32,780
So for it to get it back we need to do new equals true.

275
00:16:32,790 --> 00:16:33,370
All right.

276
00:16:33,450 --> 00:16:36,610
Then I get to do coma and the last part of the code.

277
00:16:36,720 --> 00:16:38,860
It's going to be the callback function.

278
00:16:38,920 --> 00:16:43,970
And what we get when we get it we'll be getting is the error doc.

279
00:16:44,760 --> 00:16:46,670
And then something else we're going to do something else.

280
00:16:46,710 --> 00:16:56,240
So if we do get an hour I'm going to return a response with a Jaison open close saying success falls

281
00:16:59,470 --> 00:17:06,880
falls and then are back and don't worry after we do it no we can see how it works we're going to go

282
00:17:06,880 --> 00:17:08,070
over this again.

283
00:17:08,080 --> 00:17:10,360
Just a quick recap.

284
00:17:10,600 --> 00:17:13,610
Now I'm going to go and say OK if everything goes ok.

285
00:17:13,810 --> 00:17:23,710
I want to send the status of 200 right and I'm going to send Jason back Where'd the dark dot and whatever

286
00:17:23,710 --> 00:17:25,090
we are adding to the cart.

287
00:17:25,120 --> 00:17:27,710
I'm not sending the whole user document.

288
00:17:27,850 --> 00:17:31,690
I'm just saying sending back whatever we get inside court.

289
00:17:31,810 --> 00:17:37,380
And right now we are just storing this the id the quantity and the date.

290
00:17:37,490 --> 00:17:37,830
Right.

291
00:17:37,840 --> 00:17:39,580
That's the only thing we are doing.

292
00:17:39,640 --> 00:17:40,480
All right.

293
00:17:40,570 --> 00:17:42,740
Let me make this a little bit nicer.

294
00:17:43,330 --> 00:17:50,800
So in theory this route should be ready it's actually ready to be used if we want to add one.

295
00:17:50,860 --> 00:17:51,830
Of course we don't.

296
00:17:51,850 --> 00:17:53,380
We don't get the duplicate.

297
00:17:53,800 --> 00:17:56,170
So I'm going to copy the you're.

298
00:17:56,380 --> 00:18:02,080
Going to go to use her actions and right here I'm going to of course you know dispatch do you actually

299
00:18:02,080 --> 00:18:04,660
create an actual request.

300
00:18:04,660 --> 00:18:05,210
All right.

301
00:18:05,500 --> 00:18:15,370
So Konst request equals ASIO's that post open it close and we need to pass the user server just like

302
00:18:15,370 --> 00:18:17,510
this user or server.

303
00:18:17,590 --> 00:18:21,430
And we closed it and we need to do the add to cart.

304
00:18:22,010 --> 00:18:26,230
Let me go to the server and copy the your mail again.

305
00:18:26,230 --> 00:18:28,410
So again it's Add to Cart.

306
00:18:28,420 --> 00:18:28,800
OK.

307
00:18:28,900 --> 00:18:31,600
So back to user actions and to court.

308
00:18:31,600 --> 00:18:35,240
And remember we are passing the Querrey right.

309
00:18:35,260 --> 00:18:36,560
We are passing the query.

310
00:18:36,750 --> 00:18:37,340
OK.

311
00:18:37,720 --> 00:18:38,260
So I'm going to do.

312
00:18:38,260 --> 00:18:39,840
Open it close.

313
00:18:41,650 --> 00:18:46,660
And then Product ID right.

314
00:18:46,660 --> 00:18:53,140
We are not sending this adjacent just us as a query string and we pass the ID that the user is trying

315
00:18:53,140 --> 00:18:53,950
to enter.

316
00:18:54,040 --> 00:19:05,140
And then of course we have then open it close the response and we do response response that data data

317
00:19:05,820 --> 00:19:06,570
right.

318
00:19:06,580 --> 00:19:13,370
So now this whenever we go to the producer we will you know get the information back to the reducers.

319
00:19:13,420 --> 00:19:20,620
Now the reducer needs to grab that information and instead of returning the card we need to go to the

320
00:19:20,620 --> 00:19:21,280
user.

321
00:19:21,300 --> 00:19:24,220
Let's see if I can get it right here.

322
00:19:24,940 --> 00:19:25,780
Now let's look at.

323
00:19:25,930 --> 00:19:33,440
So we need to go to the user data we have on the state of redux enter the user data attach just grab

324
00:19:33,480 --> 00:19:38,870
whatever is inside leave it but modify just the cart ride.

325
00:19:38,890 --> 00:19:44,150
So we're going to use the A-6 going to say user data entering user data.

326
00:19:44,440 --> 00:19:46,040
And remember that we have it right here.

327
00:19:46,150 --> 00:19:46,540
Right.

328
00:19:46,570 --> 00:19:49,780
So we are entering that field and I'm going to do OK.

329
00:19:49,930 --> 00:19:56,170
I want to start inside just leaving aside whatever we have inside state and use our data.

330
00:19:56,170 --> 00:19:56,770
Right.

331
00:19:56,860 --> 00:20:04,360
But I want to enter that card and modify it with whatever we get from the action that payload.

332
00:20:04,540 --> 00:20:10,650
Remember that the server when it returns it returns the all the information that we have inside.

333
00:20:10,870 --> 00:20:14,070
Not just this element that we are pushing right.

334
00:20:14,170 --> 00:20:17,260
It returns all the contents of the card.

335
00:20:17,470 --> 00:20:22,920
So whenever we get to the we do sir we will just modify whatever it's inside the cart.

336
00:20:23,440 --> 00:20:24,320
All right.

337
00:20:24,460 --> 00:20:29,510
So in theory we should be getting something at least or an error or something like that.

338
00:20:29,560 --> 00:20:31,420
So let's go right here.

339
00:20:31,420 --> 00:20:37,890
Going to logout from here going to make this a little bit smaller.

340
00:20:37,990 --> 00:20:43,720
Logan Franz's password 1 2 3 are going to log in.

341
00:20:43,760 --> 00:20:48,980
All right going to go to guitarist and I'm going to add one and notice that we get the number one right

342
00:20:48,980 --> 00:20:49,910
here.

343
00:20:49,910 --> 00:20:56,050
So if we go to the user to the store we can say user data card and it gets updated.

344
00:20:56,180 --> 00:21:01,030
So user data of course user data we go to the card.

345
00:21:01,040 --> 00:21:02,420
And now we have one.

346
00:21:02,560 --> 00:21:04,160
And now what do we get on the card.

347
00:21:04,310 --> 00:21:10,440
It's some small information just the ID of whatever we are adding the quantity and date.

348
00:21:10,520 --> 00:21:15,500
So why we are just adding just three fields and not the whole information of the product.

349
00:21:15,530 --> 00:21:21,910
You know this this model you know the product details could get really long.

350
00:21:22,010 --> 00:21:23,510
Right now it's not that long.

351
00:21:23,810 --> 00:21:30,980
So if we always tried to push a lot of information right here inside of the user data each time we need

352
00:21:30,980 --> 00:21:35,170
to get something from the server is going to get bigger and bigger and bigger.

353
00:21:35,180 --> 00:21:39,300
So the only thing we do is just we add the id the quantity and date.

354
00:21:39,440 --> 00:21:45,290
So later when we go to the user cart right here we don't have the route instead of just getting it from

355
00:21:45,290 --> 00:21:46,120
the user data.

356
00:21:46,220 --> 00:21:52,340
We're going to go to the server and search all the IDs that they have there and fetch it from mongoose.

357
00:21:52,400 --> 00:21:52,640
Right.

358
00:21:52,640 --> 00:21:59,320
Fritsche from the server only when we do this request and not every time remember that we have the AUF

359
00:22:00,080 --> 00:22:01,580
on the top.

360
00:22:01,610 --> 00:22:09,710
So again if we this this needs to be small as we can actually do it it needs to be small.

361
00:22:09,740 --> 00:22:11,740
So what happens if I tried to add a new one.

362
00:22:11,760 --> 00:22:12,750
That's what happens.

363
00:22:12,800 --> 00:22:14,810
I'm going to do this and we get my card.

364
00:22:14,840 --> 00:22:23,780
So now we get to an open user user data card and we get to.

365
00:22:24,100 --> 00:22:24,390
All right.

366
00:22:24,400 --> 00:22:25,670
So everything works.

367
00:22:25,690 --> 00:22:31,790
So let's go to the next one and we're going to do a tiny recap of what we just did here.

368
00:22:32,200 --> 00:22:35,110
And then we can it go to create duplicated.

