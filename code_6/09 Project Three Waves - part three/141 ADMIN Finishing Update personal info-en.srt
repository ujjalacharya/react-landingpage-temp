1
00:00:00,920 --> 00:00:04,740
Right so whenever we submit the form we need to dispatch an X right.

2
00:00:04,820 --> 00:00:05,440
OK.

3
00:00:05,660 --> 00:00:09,770
First we need this route on the server to handle the request.

4
00:00:09,770 --> 00:00:12,980
So I'm going to go to server and going to create that function.

5
00:00:13,010 --> 00:00:16,460
You know that route right now is going to be very very simple.

6
00:00:16,530 --> 00:00:19,680
After doing this this one is piece of cake.

7
00:00:19,970 --> 00:00:27,940
So I'm going to add an apple up the Rigaud app that post and we will be getting the data.

8
00:00:28,100 --> 00:00:39,330
As Jason saw AP forward slash users for Slash and update update person or add up the profile events

9
00:00:40,930 --> 00:00:44,280
we're going to use the oath because they need to be authenticated.

10
00:00:44,600 --> 00:00:46,470
And then of course we run a function.

11
00:00:46,730 --> 00:00:50,320
So request and response.

12
00:00:50,540 --> 00:00:52,270
So we need to go to the user.

13
00:00:52,310 --> 00:00:55,400
So we say user user.

14
00:00:55,490 --> 00:01:03,740
Now again since we are using the ALF we can just find one an update now what we need to find.

15
00:01:03,760 --> 00:01:08,150
It's the user ID so we search by id and we have it inside.

16
00:01:08,150 --> 00:01:13,110
Request that user that comes from the AUF and then underscore ID.

17
00:01:13,400 --> 00:01:15,260
So what are we going to be updating.

18
00:01:15,290 --> 00:01:21,280
So we need to update and for this prematch we need to update everything that is inside the body.

19
00:01:21,320 --> 00:01:22,470
So we do set.

20
00:01:22,640 --> 00:01:24,010
Let me do it like this.

21
00:01:24,080 --> 00:01:31,460
We do a dollar sign and then set and then we say that we want to update whatever key we have inside

22
00:01:31,460 --> 00:01:32,490
the request.

23
00:01:32,490 --> 00:01:38,800
That body which is named last name and forgot the one name last name and email right.

24
00:01:38,810 --> 00:01:43,050
Email your email or get a copy.

25
00:01:43,300 --> 00:01:45,670
So of course we want to get the new data back.

26
00:01:45,670 --> 00:01:49,480
The new state of this all the updates the of the user.

27
00:01:49,540 --> 00:01:51,580
And then of course we say new true.

28
00:01:51,700 --> 00:02:00,490
And then we just run a function the callback function reader is simple error and document.

29
00:02:00,490 --> 00:02:11,540
Now of course if you get an error so error we return response with a J sign saying success then falls

30
00:02:11,620 --> 00:02:15,000
and the actual error you can catch this whatever you want.

31
00:02:15,100 --> 00:02:22,870
And then of course we return a response with a status of 200 and we just send something.

32
00:02:23,080 --> 00:02:25,600
So what are we going to be sending for now.

33
00:02:25,610 --> 00:02:27,050
Nothing just success.

34
00:02:27,220 --> 00:02:28,510
And then true.

35
00:02:29,200 --> 00:02:31,560
Just send success true if everything goes OK.

36
00:02:31,630 --> 00:02:34,740
We should be you know getting the new information.

37
00:02:34,750 --> 00:02:35,760
All right.

38
00:02:36,490 --> 00:02:41,880
So I'm going to go here.

39
00:02:41,910 --> 00:02:42,250
All right.

40
00:02:42,310 --> 00:02:43,520
So everything looks good.

41
00:02:43,930 --> 00:02:46,600
No mistakes hopefully no mistakes.

42
00:02:46,600 --> 00:02:48,930
So now we have a we have a server.

43
00:02:49,060 --> 00:02:50,250
So what we need to do now.

44
00:02:50,290 --> 00:02:56,280
Inside of update personal information we need to create that dispatch you know the action.

45
00:02:56,560 --> 00:02:59,260
So I'm going to call it update user data.

46
00:02:59,260 --> 00:03:06,530
Let's go first to the user reducer the user actions and I'm going to create a type just like always

47
00:03:07,000 --> 00:03:14,100
and this one update data user right.

48
00:03:14,320 --> 00:03:16,540
I'm going to add to the types.

49
00:03:16,780 --> 00:03:26,940
So export Export Konst update data user and then update data and then user.

50
00:03:27,590 --> 00:03:28,180
All right.

51
00:03:28,490 --> 00:03:32,580
I going to go back to user actions and I'm going to do this at the bottom.

52
00:03:32,590 --> 00:03:33,400
Why not.

53
00:03:33,760 --> 00:03:45,340
So we need to export a function called an update user data or update data user whatever we're going

54
00:03:45,340 --> 00:03:47,150
to get a data to.

55
00:03:47,260 --> 00:03:48,330
So mad.

56
00:03:48,670 --> 00:03:50,700
And then we just run a function.

57
00:03:50,770 --> 00:03:58,990
So Konst request equals and then we do X zero's post and we need to pass whatever we get back from the

58
00:03:58,990 --> 00:04:00,740
user server.

59
00:04:01,210 --> 00:04:04,290
I'm sorry whatever we get back in this marvel from user server.

60
00:04:04,510 --> 00:04:05,240
And then the route.

61
00:04:05,260 --> 00:04:11,440
It's update profile and again and going a little bit fast because we kind of did this previously many

62
00:04:11,440 --> 00:04:12,420
many times.

63
00:04:12,700 --> 00:04:17,390
So we do a post to that route and we pass the data to submit.

64
00:04:17,410 --> 00:04:17,970
Right.

65
00:04:17,980 --> 00:04:18,940
All right.

66
00:04:18,940 --> 00:04:21,500
Then of course we get a promise.

67
00:04:21,700 --> 00:04:26,450
So whenever the promise resolves we're going to send the response with.

68
00:04:26,520 --> 00:04:33,030
And in this case you can do this return response that data if you want to safes and code you can delete

69
00:04:33,070 --> 00:04:34,570
this and just return.

70
00:04:34,570 --> 00:04:36,250
This doesn't matter.

71
00:04:36,250 --> 00:04:38,210
It's not completely up to you.

72
00:04:38,310 --> 00:04:38,930
So OK.

73
00:04:38,950 --> 00:04:44,190
So at the end we will return a type and a payload right.

74
00:04:44,350 --> 00:04:48,950
The type it's going to be equal to update data user.

75
00:04:49,150 --> 00:04:50,000
Right.

76
00:04:50,470 --> 00:04:57,710
So update data user and whatever we get back from the request.

77
00:04:57,730 --> 00:04:58,560
All right.

78
00:04:59,050 --> 00:04:59,970
So very good.

79
00:04:59,980 --> 00:05:01,130
Now we do have this.

80
00:05:01,180 --> 00:05:07,050
And of course in this case after we update you can a changed state that everything was a success.

81
00:05:07,060 --> 00:05:09,860
So after a couple of seconds I went to remove that.

82
00:05:10,030 --> 00:05:14,580
So for this one I need to clear whatever is going to set on update daily user.

83
00:05:14,590 --> 00:05:21,110
So we kind of need an export function func shone clear.

84
00:05:21,400 --> 00:05:23,320
Update user.

85
00:05:23,410 --> 00:05:28,090
So we need that in this case so clear update user.

86
00:05:28,090 --> 00:05:35,630
We just get a return type and I'm going to create it right now I'm going to call it clear.

87
00:05:36,010 --> 00:05:43,530
Update user data and the payload payload.

88
00:05:44,440 --> 00:05:45,710
It's nothing.

89
00:05:45,700 --> 00:05:46,580
All right.

90
00:05:46,690 --> 00:05:51,780
We don't have a type I need to add it so clear update user data.

91
00:05:51,890 --> 00:05:53,500
I'm going to go to types.

92
00:05:54,130 --> 00:05:58,300
Export Konst equals to.

93
00:05:58,300 --> 00:06:05,920
I remember that a maybe when we started this project I show you the state of this file which is what

94
00:06:05,920 --> 00:06:07,150
was real slim.

95
00:06:07,180 --> 00:06:12,720
Look at it now read it back and it does good in real life is going to get much much bigger.

96
00:06:12,730 --> 00:06:16,240
So update user data.

97
00:06:16,340 --> 00:06:17,340
All right.

98
00:06:17,710 --> 00:06:18,380
I believe.

99
00:06:18,520 --> 00:06:18,990
Clear.

100
00:06:19,060 --> 00:06:19,980
Update user data.

101
00:06:19,980 --> 00:06:20,920
Very good.

102
00:06:21,250 --> 00:06:21,550
All right.

103
00:06:21,550 --> 00:06:22,800
So we're good to go.

104
00:06:22,840 --> 00:06:24,060
Now we need to go to the.

105
00:06:24,060 --> 00:06:27,090
Of course to use a reducer and do both.

106
00:06:27,100 --> 00:06:31,820
So get a copy of the data user and clear and go to the reducer.

107
00:06:31,930 --> 00:06:35,790
So user readers are going to bring to type.

108
00:06:35,830 --> 00:06:36,560
All right.

109
00:06:36,640 --> 00:06:41,450
So now at the bottom when we copy the first one update data user.

110
00:06:41,800 --> 00:06:48,730
So if the case is that we get an update data user but we're going to be doing is return something.

111
00:06:48,790 --> 00:06:49,510
Right.

112
00:06:49,510 --> 00:06:50,170
All right.

113
00:06:50,170 --> 00:06:52,830
So we will return dot dot dot and the state.

114
00:06:53,080 --> 00:07:00,650
And now again we need to create a key to catch that success so update user and equals to action that

115
00:07:00,650 --> 00:07:01,480
payload.

116
00:07:01,510 --> 00:07:02,090
Right.

117
00:07:02,200 --> 00:07:03,050
Right.

118
00:07:03,070 --> 00:07:06,910
So now we need the clear update user.

119
00:07:07,210 --> 00:07:16,330
So in the case that we get clear of the user data we return that adad stayed coma and we set the update

120
00:07:16,330 --> 00:07:22,570
user to whenever we get on the action that payload.

121
00:07:22,640 --> 00:07:24,230
Very good man.

122
00:07:24,320 --> 00:07:29,480
So if you think about it you know just use one that's ok for now.

123
00:07:30,100 --> 00:07:33,670
All right so let's dispatch in action and see what happens.

124
00:07:33,860 --> 00:07:37,270
So I'm going to go to update personal information.

125
00:07:37,520 --> 00:07:40,340
And of course we need to bring the right here.

126
00:07:40,460 --> 00:07:48,080
We need to bring from the user actions these functions so import and then update.

127
00:07:48,110 --> 00:07:51,570
I'm just going to go to the user actions and copy again.

128
00:07:51,650 --> 00:07:53,980
I don't want any typos right here.

129
00:07:54,470 --> 00:07:58,940
So we bring that one and we need to clear one.

130
00:07:58,940 --> 00:08:03,330
So we call that clear update user right.

131
00:08:03,380 --> 00:08:10,660
So it's from the that for Slashdot that force slash we go to actions and we go to user actions right.

132
00:08:10,670 --> 00:08:11,140
All right.

133
00:08:12,010 --> 00:08:12,830
Looks good.

134
00:08:13,150 --> 00:08:15,020
So and I made a mistake right here.

135
00:08:15,190 --> 00:08:15,680
Update.

136
00:08:15,700 --> 00:08:17,890
Why is that.

137
00:08:17,890 --> 00:08:22,600
So update update user data.

138
00:08:22,760 --> 00:08:23,660
Right.

139
00:08:23,790 --> 00:08:30,570
So now whenever we submit the form we want to go to submit form and on the date that's made whenever

140
00:08:30,570 --> 00:08:33,900
the form is valid we want to of course dispatch an action.

141
00:08:34,020 --> 00:08:35,160
So I'm going to delete this.

142
00:08:35,280 --> 00:08:36,420
I'm not going to test it.

143
00:08:36,450 --> 00:08:44,540
We're going to go because of course you know we did this many many times so there's no need for me to

144
00:08:44,720 --> 00:08:46,510
show the console.

145
00:08:46,550 --> 00:08:49,720
So we are going to do it this patch and we do the update user data.

146
00:08:49,880 --> 00:08:50,860
Right.

147
00:08:50,870 --> 00:08:54,460
We need to pass that data to submit so data to submit.

148
00:08:54,680 --> 00:08:57,240
And of course then we're going to do something.

149
00:08:57,260 --> 00:09:02,490
So then opening close and we run the callback function right.

150
00:09:02,930 --> 00:09:07,930
So what are we going to be doing now is an update going to check if we have an update user inside of

151
00:09:07,940 --> 00:09:13,760
the store when or where the application comes smack from relax and begin to check if we have an update

152
00:09:13,790 --> 00:09:16,180
user of true.

153
00:09:16,220 --> 00:09:17,840
Right here the update user.

154
00:09:17,960 --> 00:09:24,550
So if it's success true of course you're going to say say change to form success to true.

155
00:09:24,650 --> 00:09:30,650
And after maybe two or three to three seconds we can at dispatch to clear up the user and we're going

156
00:09:30,650 --> 00:09:34,480
to set this back to false again because of this.

157
00:09:34,520 --> 00:09:35,490
Precisely.

158
00:09:35,510 --> 00:09:48,830
So first if open close if this not props that user dot and we enter the update user remember we called

159
00:09:48,830 --> 00:09:50,520
this on the user register.

160
00:09:50,540 --> 00:09:54,610
Just going a copy update user and we get a success.

161
00:09:54,620 --> 00:10:01,220
So success will double as then we're going to do something if this happens we can at this not set state

162
00:10:01,700 --> 00:10:06,160
and the state we're going to change to form success to true.

163
00:10:06,710 --> 00:10:15,030
All right then we're going to attach this is a Colback and we're going to do a said time out.

164
00:10:15,040 --> 00:10:22,540
So after two seconds we're going to run a different function that you know clears everything out and

165
00:10:22,540 --> 00:10:23,860
dispatched it clear.

166
00:10:24,040 --> 00:10:32,620
So this that prompts that dispatch and we are going to use the clear update user.

167
00:10:32,620 --> 00:10:33,670
All right.

168
00:10:34,150 --> 00:10:37,910
So clear update user and we don't need a callback right here.

169
00:10:38,260 --> 00:10:44,770
So and again we're going to do that does that said state and begin to change the form success back to

170
00:10:44,770 --> 00:10:45,550
false.

171
00:10:45,550 --> 00:10:52,420
So we can get rid of that you know success message America this should be working.

172
00:10:52,430 --> 00:10:57,390
Hopefully no mistakes I've reloaded just in case I get to do friends.

173
00:10:57,640 --> 00:11:01,280
Jonas's and then update personal information.

174
00:11:01,310 --> 00:11:02,570
We get success.

175
00:11:02,570 --> 00:11:07,750
Now if I overload the information and there was a problem with the server or something like that this

176
00:11:07,850 --> 00:11:09,480
is going to be Jones again.

177
00:11:09,500 --> 00:11:18,300
So I reload and we get Jonas's Francis Xavier just like the no x.

178
00:11:18,380 --> 00:11:20,140
You didn't know.

179
00:11:20,140 --> 00:11:21,240
Can I reload.

180
00:11:21,590 --> 00:11:22,630
And everything is good.

181
00:11:23,690 --> 00:11:25,980
Maybe you don't want to change email but that's OK.

182
00:11:26,110 --> 00:11:27,040
I'm going to change it.

183
00:11:27,130 --> 00:11:29,250
So it's going to be Francis X..

184
00:11:29,710 --> 00:11:32,610
Of course not let me do it here.

185
00:11:32,620 --> 00:11:38,770
Francis X. update are going to reload and everything is cool.

186
00:11:39,020 --> 00:11:46,550
So let me go back on this one and update it back and update the Jones right.

187
00:11:47,170 --> 00:11:49,980
Farver load Jones Xavier and Frances.

188
00:11:50,190 --> 00:11:51,570
Everything was OK.

189
00:11:52,220 --> 00:11:54,510
The State of the file right now because you're done.

190
00:11:54,510 --> 00:11:58,510
Later as a bonus I'm I can add a new component to know reset the passport.

191
00:11:58,530 --> 00:12:03,420
And of course they need to know the current passport because they are they are Lagann so they should

192
00:12:03,420 --> 00:12:04,550
know the password.

193
00:12:04,570 --> 00:12:06,450
It's going to be very very simple.

194
00:12:06,810 --> 00:12:10,930
So let's go to the next one and the next one is going to be site info.

195
00:12:11,100 --> 00:12:16,880
Going to create a new plays on the models where we can store information about the site.

196
00:12:16,890 --> 00:12:23,240
Could be you know a u r l maybe an address or well of course all of this and maybe some other things.

197
00:12:23,340 --> 00:12:28,440
And remember that at home and we are not going to do it right now going to do this as a bonus.

198
00:12:28,440 --> 00:12:34,350
We are rendering this images but we didn't have a place where we control the image and where we control

199
00:12:34,350 --> 00:12:38,620
the you know the title right here title and the button and everything else.

200
00:12:38,880 --> 00:12:46,740
So on that place and that model we can host this kind of information you know the misc information just

201
00:12:46,740 --> 00:12:49,430
like the page inside info.

202
00:12:49,530 --> 00:12:51,970
And maybe the promotions right here.

203
00:12:52,050 --> 00:12:56,120
So let's go to the next one and start with the site Imphal.

