1
00:00:00,970 --> 00:00:03,230
OK so let's complete this.

2
00:00:03,240 --> 00:00:07,900
So now what we need to do is to go to the user and update the user history.

3
00:00:07,940 --> 00:00:12,860
Right so we can enter the user and begin to find it and update it.

4
00:00:12,860 --> 00:00:14,620
So find one an update.

5
00:00:14,630 --> 00:00:15,830
Open and close.

6
00:00:15,980 --> 00:00:19,420
The first thing we need to pass is you know which user.

7
00:00:19,520 --> 00:00:27,020
So underscore ID and we passed the request that user that underscore ID you know we get it from the

8
00:00:27,030 --> 00:00:27,450
OF.

9
00:00:27,470 --> 00:00:34,450
Remember always we get out of the coma and we make this nice.

10
00:00:34,760 --> 00:00:36,860
Then we can tell the find one and update.

11
00:00:36,860 --> 00:00:39,120
What is that we want to update.

12
00:00:39,140 --> 00:00:43,930
So in this case we want to do perform two different actions.

13
00:00:44,000 --> 00:00:47,430
Two things we want to go to the user.

14
00:00:47,750 --> 00:00:49,110
We give you an example.

15
00:00:49,400 --> 00:00:54,670
Go to the cart and delete whatever they have on the card because the purchase is done.

16
00:00:54,860 --> 00:00:56,280
So the card is going to be empty.

17
00:00:56,290 --> 00:00:57,300
Right OK.

18
00:00:57,500 --> 00:01:03,650
And then of course we need to push what whatever we have on the history array and put that push it inside

19
00:01:03,650 --> 00:01:04,340
history.

20
00:01:04,340 --> 00:01:10,490
Now remember that we need to push We don't need to just set because if we push and they have maybe previous

21
00:01:10,490 --> 00:01:14,130
data right there we need to push it and added at the end you know.

22
00:01:14,270 --> 00:01:15,470
All right.

23
00:01:15,470 --> 00:01:21,170
So first we want to push so I'm going to say push call and what is that we want to push.

24
00:01:21,170 --> 00:01:27,380
So we going to go to history and push whatever we get inside the history array.

25
00:01:27,520 --> 00:01:28,110
Right.

26
00:01:28,200 --> 00:01:34,910
That is that then what we want to do we want to grab the card and delete everything on the card.

27
00:01:34,910 --> 00:01:37,000
We want to change it to an empty array.

28
00:01:37,160 --> 00:01:40,690
So in this case what we use is not push is going to be set.

29
00:01:40,940 --> 00:01:46,290
So we are changing the value of the card to an empty array.

30
00:01:46,430 --> 00:01:47,500
Right.

31
00:01:47,510 --> 00:01:50,870
Of course then going to do go under and go to the next one.

32
00:01:50,870 --> 00:01:57,980
And remember that whenever we use update if you want to get the we want to get the of the the updated

33
00:01:58,070 --> 00:02:02,600
document of this user we want to use new equals true.

34
00:02:02,930 --> 00:02:05,510
If not you can get the old one or nothing.

35
00:02:05,900 --> 00:02:12,470
Obviously the old one and I remember now after this happens we run a callback.

36
00:02:12,980 --> 00:02:19,730
So our and then user of course the user it's the updated users state right now after we do this.

37
00:02:19,730 --> 00:02:20,300
Right.

38
00:02:20,710 --> 00:02:21,830
So now what are we going to do.

39
00:02:21,830 --> 00:02:23,940
I'm going to say if if there is an error.

40
00:02:23,960 --> 00:02:25,700
You know the usual stuff.

41
00:02:25,970 --> 00:02:29,830
Let me go right here if there is an error so error.

42
00:02:30,170 --> 00:02:37,730
I want to return a Jaison response response with Jaison we could add the four or four some like that

43
00:02:37,790 --> 00:02:39,280
not for four.

44
00:02:39,980 --> 00:02:43,380
So I'm going to say success and then falls.

45
00:02:43,460 --> 00:02:47,370
And then of course PAHs your usual stuff OK.

46
00:02:47,840 --> 00:02:53,940
Now once we are done updating the user what we need to do is do pretty much the same thing but inside

47
00:02:53,940 --> 00:02:56,780
of the payments document right.

48
00:02:56,790 --> 00:03:03,420
We go to payments grab whatever we have to inside trisection data and you know add a new a new document

49
00:03:03,870 --> 00:03:05,030
to payments.

50
00:03:05,040 --> 00:03:05,710
All right.

51
00:03:05,940 --> 00:03:12,510
So since we have it right here the top called payment we're going to grab it and we're going to go and

52
00:03:12,510 --> 00:03:13,350
say OK.

53
00:03:13,500 --> 00:03:15,600
So I want to create a new payment.

54
00:03:15,600 --> 00:03:22,520
So first we create a new payment Condes payment it calls new payment.

55
00:03:22,790 --> 00:03:29,310
Open and close and then are going to be passing these new payments they're going to be passing what

56
00:03:29,310 --> 00:03:31,460
are we going to be using to make this new payment.

57
00:03:31,590 --> 00:03:33,330
Well the transaction data.

58
00:03:33,600 --> 00:03:35,990
So I'm going to pass that transaction data.

59
00:03:36,030 --> 00:03:37,020
All right.

60
00:03:37,020 --> 00:03:39,410
Now we can enter this new payment.

61
00:03:39,870 --> 00:03:43,740
We're going to do that and I'm going to save it open and close.

62
00:03:43,740 --> 00:03:49,090
So after we save it of course we have that error and that documents.

63
00:03:49,270 --> 00:03:50,420
All right.

64
00:03:50,970 --> 00:03:56,210
Of course if we get an error I'm going to copy this one right here so I can skip the typing.

65
00:03:56,490 --> 00:03:58,570
Return success falls and the are.

66
00:03:58,770 --> 00:03:59,700
All right.

67
00:04:00,000 --> 00:04:03,890
And now we have a problem because of course this information will be getting.

68
00:04:03,900 --> 00:04:11,970
Will will be stored inside of payment's right here inside of payments just like a new a new key with

69
00:04:11,970 --> 00:04:13,000
all the data.

70
00:04:13,080 --> 00:04:15,850
A new document with all the data and that is good.

71
00:04:15,870 --> 00:04:16,700
You know it's going to work.

72
00:04:16,710 --> 00:04:18,490
It's going to work really great.

73
00:04:18,870 --> 00:04:21,380
But we have a tiny problem.

74
00:04:21,570 --> 00:04:29,340
Whenever they make a purchase of a product remember that inside products inside of each product we have

75
00:04:29,340 --> 00:04:38,150
something we have about a key insider database say in how many products of this one we've sold.

76
00:04:38,250 --> 00:04:43,110
And of course they make a purchase we need to add one to that list.

77
00:04:43,110 --> 00:04:48,360
Let me just show you here and go to products and I'm going to say I'm going to grab the last one.

78
00:04:48,360 --> 00:04:51,170
I don't know if we have the sold property.

79
00:04:51,600 --> 00:04:57,000
So whenever they complete a purchase we need to grab all the all the data and you know grab all the

80
00:04:57,000 --> 00:04:59,730
products they are purchasing go.

81
00:04:59,730 --> 00:05:02,810
We need to go to that product specific product.

82
00:05:03,060 --> 00:05:08,910
And you know increment the sold because you know we sold one of this.

83
00:05:08,910 --> 00:05:11,510
Now we have an additional problem.

84
00:05:11,610 --> 00:05:16,070
What happens if the user is buying multiple of the same product.

85
00:05:16,380 --> 00:05:23,490
So instead of adding one you know some of this by one increment by one we need to increment by the quantity

86
00:05:23,610 --> 00:05:25,320
of they are what they are buying.

87
00:05:25,620 --> 00:05:26,100
Right.

88
00:05:26,300 --> 00:05:26,890
Okay.

89
00:05:27,120 --> 00:05:34,600
So again we have a kind of a new problem because what happens if they have more products.

90
00:05:34,700 --> 00:05:38,490
Maybe they are you know make you're buying 10.

91
00:05:38,520 --> 00:05:40,890
So we can not really just do one update.

92
00:05:40,890 --> 00:05:46,980
We cannot do product just like this product that update.

93
00:05:47,460 --> 00:05:51,530
And then you know pass whatever we want because right here we will pass the ID of the product.

94
00:05:51,630 --> 00:05:56,300
But the problem is that we have many ideas and we have many types.

95
00:05:56,300 --> 00:05:58,720
We have but we could have different quantities.

96
00:05:59,010 --> 00:06:05,100
So what are we going to do begin a trigger if we can at this moment have you know triggered this several

97
00:06:05,100 --> 00:06:05,790
times.

98
00:06:05,790 --> 00:06:13,110
So if they have maybe 10 items on the on the cart we're going to run this command with the ID of you

99
00:06:13,110 --> 00:06:14,630
know 10 times.

100
00:06:14,640 --> 00:06:16,900
So again we're just doing a loop.

101
00:06:16,920 --> 00:06:21,040
So let me give you an example so simple we're going to do a for each or something like this.

102
00:06:21,050 --> 00:06:26,270
We're going to grab the every of products we're going to run for each and for each element of course

103
00:06:26,280 --> 00:06:34,770
then we can go to product just like this product dot and then update and then we will pass the ID.

104
00:06:34,770 --> 00:06:39,820
So underscore ID and whatever we have on the element that ID.

105
00:06:39,840 --> 00:06:40,890
All right.

106
00:06:41,520 --> 00:06:42,890
So okay.

107
00:06:43,410 --> 00:06:48,290
So of course if we do this this action takes some time.

108
00:06:48,420 --> 00:06:49,080
Right.

109
00:06:49,140 --> 00:06:54,630
It needs some time to go to mongoose update the element and then comes back.

110
00:06:54,840 --> 00:07:00,660
So whenever we trigger the callback right here you know the callback function at the end when we are

111
00:07:00,660 --> 00:07:04,540
going to get multiple callbacks.

112
00:07:04,980 --> 00:07:10,080
So how can we know whenever we are finished updating all of this.

113
00:07:10,290 --> 00:07:16,550
So we really can't we can't because we have many many options right here.

114
00:07:16,640 --> 00:07:19,620
And then of course we get many callbacks.

115
00:07:20,040 --> 00:07:28,260
So we kind of need a way to of course do all the actions maybe 10 maybe one that doesn't matter.

116
00:07:28,470 --> 00:07:37,420
And then we need to know when all of this actions are done and then run one single callback now for

117
00:07:37,420 --> 00:07:40,760
this what we can do we can use a sink.

118
00:07:40,840 --> 00:07:45,910
So I'm going to go at the top right at the top and I'm going to require something actually it's from

119
00:07:46,480 --> 00:07:48,540
Noad and it's called Eysenck.

120
00:07:48,610 --> 00:07:55,960
So Konst a sink I'm doing this so I can show you in sync we could do something else as well.

121
00:07:56,470 --> 00:08:01,420
But you know this is always ok is going to work very Burguet.

122
00:08:01,780 --> 00:08:11,290
So with async we can trigger we can you know about Dimba create many many requests this case to the

123
00:08:11,290 --> 00:08:12,190
mongoose.

124
00:08:12,310 --> 00:08:15,840
And then we can know when all the transactions are done.

125
00:08:15,850 --> 00:08:21,580
You know when all the requests requests are done right and when they are all done we're going to say

126
00:08:21,620 --> 00:08:25,510
okay then run one single callback Burguet.

127
00:08:25,720 --> 00:08:27,970
So I'm going to call and grab that.

128
00:08:28,450 --> 00:08:31,720
They think they're going to go right here at the bottom.

129
00:08:31,720 --> 00:08:33,630
So how can we use the async.

130
00:08:34,120 --> 00:08:36,480
It's really really simple.

131
00:08:36,520 --> 00:08:37,920
It's not that weird.

132
00:08:38,260 --> 00:08:45,040
So first we need to do is go to a sink and then we use something that calls each of piece.

133
00:08:45,160 --> 00:08:49,370
Now this each of series needs three arguments the product.

134
00:08:49,370 --> 00:08:50,950
This is a loop pretty much does.

135
00:08:50,950 --> 00:08:52,660
This is a for each loop.

136
00:08:52,660 --> 00:08:57,190
So we need we need what we're going to be looping and we don't have it.

137
00:08:57,190 --> 00:09:03,490
So this is going to be I don't know the array the second one it's what we're going to do on this one

138
00:09:03,700 --> 00:09:07,810
which is the second argument in this case we're going to do the update right.

139
00:09:07,810 --> 00:09:12,380
We're going to do something like that going to do the update and then we have a third callback.

140
00:09:12,610 --> 00:09:20,050
So the third callback is going to be what are we going to do after all of this updates are done now.

141
00:09:20,200 --> 00:09:22,960
The first problem is this we don't have an array to loop.

142
00:09:23,170 --> 00:09:29,570
So I'm going to go right here and say OK we're going to create a lead called products right.

143
00:09:29,590 --> 00:09:36,110
Product equals an empty array and are going to enter dock products.

144
00:09:36,220 --> 00:09:39,760
Now why am I entering dock products.

145
00:09:39,760 --> 00:09:46,480
So right here whenever we find an update and we do the you know the payment of say and everything else

146
00:09:46,840 --> 00:09:53,160
we have the key off products on beaches go to payments.

147
00:09:53,160 --> 00:09:54,290
There we go.

148
00:09:54,460 --> 00:10:00,730
So we have product right so we can enter product and begin to search all the elements we have on that

149
00:10:00,730 --> 00:10:01,140
product.

150
00:10:01,150 --> 00:10:02,910
On this particular payment.

151
00:10:03,030 --> 00:10:03,550
Right.

152
00:10:03,640 --> 00:10:05,240
And we can get the data.

153
00:10:05,410 --> 00:10:07,640
And of course we get the idea of that element.

154
00:10:07,750 --> 00:10:12,530
So if we can grab an ID stored on that array and we can get the quantity.

155
00:10:12,550 --> 00:10:13,160
All right.

156
00:10:13,300 --> 00:10:20,260
So we can enter actually product dot product that we're going to run for each open and close now for

157
00:10:20,290 --> 00:10:23,490
each we can grab an item and then we're going to run something.

158
00:10:23,500 --> 00:10:30,700
So what we need from the two for the update to work is the idea of the product are going to be updating

159
00:10:30,990 --> 00:10:41,310
and we are going to be updating the quantities sold by what so product are going to push it I'm going

160
00:10:41,310 --> 00:10:44,720
to push something up let me do it correctly.

161
00:10:45,110 --> 00:10:46,040
You go.

162
00:10:46,070 --> 00:10:47,210
So I'm going to push.

163
00:10:47,330 --> 00:10:52,820
I'm going to push you object so if you have 10 different products we will get inside the Lilly products

164
00:10:52,850 --> 00:10:54,960
array 10 different objects.

165
00:10:54,980 --> 00:10:55,640
Right.

166
00:10:55,670 --> 00:11:00,280
So the first thing we need is the ID so we can know where are going to go to do the update.

167
00:11:00,290 --> 00:11:04,850
So item that ID then we do coma and we need the quantity.

168
00:11:04,850 --> 00:11:10,230
So I'm going to say quantity equals item that quantity right.

169
00:11:10,670 --> 00:11:17,570
So now we get an array of products could be one single object or many different objects with different

170
00:11:17,570 --> 00:11:20,650
products but we have an array we can loop.

171
00:11:20,660 --> 00:11:23,360
So now I'm going to be passing products.

172
00:11:23,360 --> 00:11:23,980
All right.

173
00:11:24,350 --> 00:11:25,450
Now the second callback.

174
00:11:25,480 --> 00:11:27,330
This is the second function.

175
00:11:27,430 --> 00:11:30,630
The second argument is what are we going to be doing with this.

176
00:11:30,650 --> 00:11:37,690
So we're going to get an item and then this one that calls callback can explain this one in a minute.

177
00:11:37,850 --> 00:11:40,790
So we're never we are done doing whatever is that we want to do.

178
00:11:40,910 --> 00:11:42,730
We need to kind of a trigger this.

179
00:11:42,830 --> 00:11:47,150
So this is kind of like we solve reject pretty much the same idea.

180
00:11:47,150 --> 00:11:49,640
So we're going to go here and say OK.

181
00:11:49,820 --> 00:11:58,480
So on each iteration of each product we need to go to the actual product do that and do an update.

182
00:11:58,880 --> 00:12:00,540
So what are we going to be updating.

183
00:12:00,650 --> 00:12:04,940
Well we're going to be updating the ID of whatever we get on the.

184
00:12:05,000 --> 00:12:06,640
This item on this situation.

185
00:12:06,660 --> 00:12:07,110
Right.

186
00:12:07,150 --> 00:12:11,240
Get the item and we grabbed the ID they're going to do coma.

187
00:12:11,540 --> 00:12:13,010
And what are we going to be doing.

188
00:12:13,100 --> 00:12:15,960
Well we need to increment the sold right.

189
00:12:16,040 --> 00:12:16,500
OK.

190
00:12:16,820 --> 00:12:23,850
So are going to do increment open and what are we going to be incrementing the salt.

191
00:12:23,930 --> 00:12:24,540
Right.

192
00:12:24,560 --> 00:12:25,990
So what are we going to do.

193
00:12:26,010 --> 00:12:28,470
We're going to added just one to.

194
00:12:28,580 --> 00:12:30,980
Well no we have the quantity right here.

195
00:12:31,100 --> 00:12:34,330
So we need to grab the item quantity.

196
00:12:34,360 --> 00:12:38,990
We're going to increment by whatever they are buying if they're buying three we're going to increment

197
00:12:39,020 --> 00:12:40,830
by three right.

198
00:12:40,880 --> 00:12:47,930
Make sense then of course we do coma and I'm going to say new falls because I don't need the I don't

199
00:12:47,930 --> 00:12:48,390
need this.

200
00:12:48,410 --> 00:12:51,000
Actually we don't need the new document back.

201
00:12:51,080 --> 00:12:53,200
And then of course we have the Colback right.

202
00:12:53,240 --> 00:12:53,780
OK.

203
00:12:54,020 --> 00:12:57,310
So this Colback is this callback.

204
00:12:57,470 --> 00:13:05,390
So this is the way we get this to tell the async of C-rist saying that you know this action this Colback

205
00:13:05,450 --> 00:13:09,520
right here this one it's done go to the next one.

206
00:13:09,530 --> 00:13:10,200
All right.

207
00:13:10,660 --> 00:13:18,140
And then at the end after all of this are done and all the code callbacks are done each of Sirius is

208
00:13:18,140 --> 00:13:19,320
going to say Okay.

209
00:13:19,340 --> 00:13:22,290
So all my oh my oh my commands are done.

210
00:13:22,300 --> 00:13:23,330
They are all done.

211
00:13:23,330 --> 00:13:29,660
So now I'm going to run this callback that this is the way we get to run different things and trigger

212
00:13:29,720 --> 00:13:33,410
a single callback after they are all done.

213
00:13:33,440 --> 00:13:39,150
So I'm sorry it took this long but I needed to have this environment to play it.

214
00:13:39,170 --> 00:13:41,580
Explain this.

215
00:13:41,660 --> 00:13:43,520
Once you get it it's not you know it's really easy.

216
00:13:43,520 --> 00:13:45,550
It's just like creating a new promise.

217
00:13:45,590 --> 00:13:46,930
That's pretty much it.

218
00:13:47,300 --> 00:13:51,380
So return then if everything goes so it goes bad.

219
00:13:51,380 --> 00:13:57,240
We return a J-Zone response of of course success falls.

220
00:13:57,290 --> 00:14:00,300
And then of course the error OK.

221
00:14:00,650 --> 00:14:03,000
Now if everything goes OK what are we going to do.

222
00:14:03,000 --> 00:14:10,610
We're going to rescind send a response with a status of 200 and then we send a J sign.

223
00:14:11,250 --> 00:14:11,750
OK.

224
00:14:13,130 --> 00:14:16,010
Now what are we going to be sending back to the client.

225
00:14:16,070 --> 00:14:18,570
So I'm going to send success.

226
00:14:18,570 --> 00:14:22,950
True right then I want to carked.

227
00:14:23,300 --> 00:14:30,440
Now whenever we go back to the client we need to go to redux and update the card of the user.

228
00:14:30,560 --> 00:14:35,210
Remember that the cart after we make the purchase we need to delete the card because they don't have

229
00:14:35,270 --> 00:14:36,950
elements on the card anymore.

230
00:14:37,220 --> 00:14:42,740
So I'm going to say card and what you could do you could do user that cart.

231
00:14:42,740 --> 00:14:48,230
Remember that the tab that we are making the update to the user and we are deleting whatever they have

232
00:14:48,230 --> 00:14:50,270
on the card before sending the card to zero.

233
00:14:50,450 --> 00:14:52,050
So we get the user back.

234
00:14:52,190 --> 00:14:56,990
So what we can do we can access user in say a card or we can do this.

235
00:14:57,020 --> 00:14:58,730
You know it's just an empty array.

236
00:14:59,180 --> 00:15:05,030
But you can do it for example if I do it on the card detail remember that we also have a card detail

237
00:15:05,590 --> 00:15:07,830
going to go to state user.

238
00:15:08,000 --> 00:15:11,390
We have a card detail with one because we have one item of the card.

239
00:15:11,450 --> 00:15:13,730
So we need to clear the card detail.

240
00:15:13,730 --> 00:15:21,520
So I'm going to say cart cart detail equals to an empty array and it's going to work as well as user

241
00:15:21,540 --> 00:15:22,500
dog cart.

242
00:15:22,760 --> 00:15:26,090
But in this case of course card detail it's not really inside the user.

243
00:15:26,090 --> 00:15:30,120
So again we are just setting the card detail to nothing.

244
00:15:30,170 --> 00:15:32,870
And this of course will update the state on redux.

245
00:15:32,990 --> 00:15:39,170
And it's going to finally at the end it's going to delete whatever we have here and begin to get it

246
00:15:39,200 --> 00:15:42,280
inside the day my account of the history.

247
00:15:42,410 --> 00:15:43,770
We are not there yet.

248
00:15:44,240 --> 00:15:48,160
So hopefully there are no mistakes again.

249
00:15:48,200 --> 00:15:53,720
You know go to the next section you get to maybe check this a little bit more but not so much if you

250
00:15:53,720 --> 00:15:54,440
get an error.

251
00:15:54,520 --> 00:15:58,740
I would like to tell you the error because you know this is part of what we do.

252
00:15:58,820 --> 00:16:00,440
We get errors the whole time.

253
00:16:00,740 --> 00:16:03,430
So what does the next step in all of this logic.

254
00:16:03,440 --> 00:16:04,430
It's done.

255
00:16:04,430 --> 00:16:08,030
We need to make a request to dispatch an action to.

256
00:16:08,180 --> 00:16:11,060
And then go make a request to this route.

257
00:16:11,060 --> 00:16:13,960
And then of course update the state of the application.

258
00:16:14,360 --> 00:16:16,400
So let's go to the next one and begin with that.

259
00:16:16,400 --> 00:16:20,050
And that is the only thing the last thing we're going to do for my card.

260
00:16:20,050 --> 00:16:21,210
We are pretty much done.

