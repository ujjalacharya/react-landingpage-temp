1
00:00:00,720 --> 00:00:05,970
OK so the next thing we're going to do and it's kind of the complicated thing of this little one is

2
00:00:06,040 --> 00:00:14,760
complicated but we need to do a few things we need to put this patch in action and this action is going

3
00:00:14,760 --> 00:00:17,790
to get all the filters all the things that we need right here.

4
00:00:17,850 --> 00:00:23,250
For example in the end of the top we have the limited escape and everything else we need to put all

5
00:00:23,250 --> 00:00:23,960
together.

6
00:00:24,120 --> 00:00:27,880
We need to go to a new route that the going to be creating inside server.

7
00:00:28,110 --> 00:00:33,900
And of course whenever we get a response we will go to that reducers and then we will feed the list

8
00:00:33,900 --> 00:00:34,500
right here.

9
00:00:34,560 --> 00:00:36,650
So we need to do quite a few things.

10
00:00:36,780 --> 00:00:40,360
So I'm going to promote close everything are going to close everything.

11
00:00:40,410 --> 00:00:40,900
Right.

12
00:00:41,040 --> 00:00:45,680
And I'm going to go back to shop I'm going to open shop because we need it I'm going to go to actions.

13
00:00:45,690 --> 00:00:51,750
I'm going to bring product actions are going to go to the reducer because we can meet product producer

14
00:00:52,050 --> 00:00:54,480
and I'm going to go to the server and need needed.

15
00:00:54,480 --> 00:00:55,060
All right.

16
00:00:55,380 --> 00:00:57,300
So first let's go to the index.

17
00:00:57,510 --> 00:01:03,660
Now what we need to do is to create a couple of actions we need to create actually one action is going

18
00:01:03,660 --> 00:01:06,390
to be called get products to shop.

19
00:01:06,390 --> 00:01:12,210
So I'm going to call it get products to and then shop.

20
00:01:12,750 --> 00:01:13,830
And what happened.

21
00:01:14,020 --> 00:01:17,370
Product products too.

22
00:01:17,440 --> 00:01:20,700
And then shop to get products to shop.

23
00:01:20,700 --> 00:01:24,280
Of course we don't have this inside action so this will fail of course.

24
00:01:24,300 --> 00:01:31,710
I'm going to save it and I'm going to go right here and I'm going to go to products and export function

25
00:01:31,920 --> 00:01:36,600
called get products to shop which is you know going to be just a function.

26
00:01:36,600 --> 00:01:38,450
And for now we are not going to do anything.

27
00:01:38,490 --> 00:01:40,550
Of course we need to create the time for this.

28
00:01:40,620 --> 00:01:45,690
So I'm going to go right here at the top and say Get over it.

29
00:01:45,860 --> 00:01:47,530
It's two.

30
00:01:47,580 --> 00:01:49,240
And then shop.

31
00:01:49,250 --> 00:01:50,210
All right.

32
00:01:50,250 --> 00:01:51,170
We didn't have the.

33
00:01:51,210 --> 00:01:52,150
We need to add it.

34
00:01:52,200 --> 00:02:02,730
So we're going to copy copy that type go to the products section and export Konst get products to shop

35
00:02:02,820 --> 00:02:07,370
and get products to shop.

36
00:02:07,430 --> 00:02:08,290
Very good.

37
00:02:08,370 --> 00:02:10,320
This is done now out of the way.

38
00:02:10,520 --> 00:02:11,350
OK.

39
00:02:11,970 --> 00:02:18,480
Now we need to go to the reducer import the type and for now you're just going to do something simple

40
00:02:18,480 --> 00:02:19,310
case.

41
00:02:19,500 --> 00:02:21,150
We get products to shop.

42
00:02:21,180 --> 00:02:24,260
I want to return opening closed door.

43
00:02:24,370 --> 00:02:26,180
That is going to return to state.

44
00:02:26,190 --> 00:02:27,930
For now she's going to return the same thing.

45
00:02:27,930 --> 00:02:28,450
All right.

46
00:02:28,930 --> 00:02:31,520
So now of course now we have an action right.

47
00:02:31,530 --> 00:02:35,950
It's not doing anything but we do have an action so I'm going to copy this.

48
00:02:36,120 --> 00:02:37,990
And again explain what we can do.

49
00:02:38,010 --> 00:02:43,590
We're going to dispatch in action and this action will contain pretty much everything we are doing right

50
00:02:43,610 --> 00:02:50,580
here because whenever we make a request to the server we need to tell the server OK how many elements

51
00:02:50,580 --> 00:02:54,590
how many results in the database we want to get back from the server.

52
00:02:54,630 --> 00:02:57,110
So we need six for an on each load.

53
00:02:57,130 --> 00:03:02,350
We're going to get 6 so we can add one to three and one two three just like we are getting right here.

54
00:03:02,640 --> 00:03:05,480
And we do it like this one two three and one two three.

55
00:03:05,490 --> 00:03:11,330
And then we just load more than we need to set the skip why we are using a skip because later are we

56
00:03:11,340 --> 00:03:13,520
going to use a load more.

57
00:03:13,530 --> 00:03:21,120
So if we want to get six more we're going to say OK go to the database get the next six starting from

58
00:03:21,120 --> 00:03:21,770
where.

59
00:03:21,880 --> 00:03:22,130
Right.

60
00:03:22,130 --> 00:03:24,650
Just get me all of this but skip the first six.

61
00:03:24,670 --> 00:03:25,060
Right.

62
00:03:25,080 --> 00:03:26,790
Bring me everything from the beginning.

63
00:03:26,910 --> 00:03:31,980
Skip the first six because you already have it and bring the next six.

64
00:03:32,010 --> 00:03:36,750
That's why when you're using the skip and then we just need the filters because whenever we filter something

65
00:03:37,020 --> 00:03:39,350
we need to do some logic on the server telling.

66
00:03:39,570 --> 00:03:42,670
We need to get the next six but use this filters.

67
00:03:42,690 --> 00:03:43,460
All right.

68
00:03:43,860 --> 00:03:48,960
So we need to pass off a sense now whenever the application loads the sexual loads we need to bring

69
00:03:48,960 --> 00:03:53,300
some products by default so we can do it on the component amount.

70
00:03:53,550 --> 00:03:59,850
So I'm going to go here and say this that probs that this patch just goes like this and I'm going to

71
00:03:59,850 --> 00:04:02,250
say get products to shop.

72
00:04:02,400 --> 00:04:04,960
Now of course we need to pass all these arguments.

73
00:04:04,980 --> 00:04:10,340
So I'm going to go right here and I'm going to say OK I want to pass that this state.

74
00:04:10,400 --> 00:04:12,490
That's Kip Coleman.

75
00:04:12,720 --> 00:04:13,850
I went to pass the limit.

76
00:04:13,890 --> 00:04:19,120
So does that state that limit coma.

77
00:04:19,140 --> 00:04:20,460
I went to pass the filters.

78
00:04:20,460 --> 00:04:24,000
Does that state that filters.

79
00:04:24,030 --> 00:04:28,210
So now this function does get perks to shop will be getting all the arguments.

80
00:04:28,230 --> 00:04:30,310
Of course we need to go to get products to shop.

81
00:04:30,480 --> 00:04:37,050
And you know that's going to go to the products action actions that are going to go over here.

82
00:04:37,050 --> 00:04:39,210
Now this one of course will be getting arguments.

83
00:04:39,210 --> 00:04:41,090
First one is the skip.

84
00:04:41,340 --> 00:04:43,110
Second one is the limit.

85
00:04:43,410 --> 00:04:45,410
The third one is the filters.

86
00:04:45,420 --> 00:04:49,090
Now make sure that sometimes we are not going to get get any filters.

87
00:04:49,110 --> 00:04:52,470
So by default I get to make it to nothing.

88
00:04:52,760 --> 00:05:00,400
And later much later and beginning come back to this later we're going to have a previous state just

89
00:05:00,410 --> 00:05:02,420
like this going to get back to this.

90
00:05:02,430 --> 00:05:04,190
For now you just put it right there.

91
00:05:04,200 --> 00:05:07,120
We're not going to really use it right now but put it.

92
00:05:07,190 --> 00:05:08,330
All right.

93
00:05:08,330 --> 00:05:12,760
So I'm going to go right here and say Konst data opening close.

94
00:05:12,920 --> 00:05:20,420
I'm going to say OK I'm going to a fixed object with all of this properties inside and this data is

95
00:05:20,470 --> 00:05:23,630
getting is the one that it's going to be submitted to the server.

96
00:05:23,660 --> 00:05:27,160
Just like a data to submit so we pass the limit.

97
00:05:27,470 --> 00:05:34,260
We pass this TKIP and we pass the filters just like this filters out let me fix it right here.

98
00:05:34,280 --> 00:05:35,960
It's pleural filters.

99
00:05:36,020 --> 00:05:37,160
All right.

100
00:05:37,160 --> 00:05:39,170
Then of course we need to do our request.

101
00:05:39,260 --> 00:05:49,570
So Konst request equals to X Yeo's that post open and close and we make a request to products and server.

102
00:05:49,790 --> 00:05:50,370
Right.

103
00:05:50,570 --> 00:05:54,020
And the route for this is going to be shop.

104
00:05:54,140 --> 00:05:55,190
We don't have this route.

105
00:05:55,190 --> 00:05:56,680
We're going to create it in a minute.

106
00:05:56,870 --> 00:06:02,570
And what we passed is whatever we have inside data with the filters to limit and this cap this could

107
00:06:02,570 --> 00:06:03,650
get much much longer.

108
00:06:03,650 --> 00:06:05,310
But for now it's good.

109
00:06:06,610 --> 00:06:12,410
An now after we get the date of course we will get a promise so we're going to say then open and close

110
00:06:12,860 --> 00:06:15,720
and we will get a response from the server.

111
00:06:15,920 --> 00:06:21,800
So whenever we get a response what we want to do we want to return something now from the server you're

112
00:06:21,800 --> 00:06:28,130
going to get two things we're going to get an object with two things inside a size of how many articles

113
00:06:28,130 --> 00:06:28,850
were received.

114
00:06:28,850 --> 00:06:32,400
And again just like previous state we're going to discuss that later.

115
00:06:32,720 --> 00:06:38,690
And you know the articles the articles that we need some of the articles are going to be inside responds

116
00:06:38,930 --> 00:06:45,050
that data that articles are going to said that on the server and the size is going to be inside responds

117
00:06:45,320 --> 00:06:46,940
that data that size.

118
00:06:47,000 --> 00:06:47,470
OK.

119
00:06:47,690 --> 00:06:53,330
So instead of doing this I'm going to return open and close and I'm going to return to size and the

120
00:06:53,330 --> 00:07:04,460
articles now the size again responds that data dot size and they make a little space and then we get

121
00:07:04,460 --> 00:07:12,530
a response that data dot articles we could set this directly from the from the server.

122
00:07:12,650 --> 00:07:14,930
But again we're going to do several stuff.

123
00:07:14,930 --> 00:07:19,570
This is going to change in the next couple weeks or maybe in the next few minutes.

124
00:07:19,750 --> 00:07:19,860
So.

125
00:07:19,880 --> 00:07:20,120
OK.

126
00:07:20,150 --> 00:07:25,760
So from the server we get something with the size of the articles and something with the actual articles.

127
00:07:25,850 --> 00:07:31,680
So this is what we return from the request of course with redox we need to return something.

128
00:07:31,880 --> 00:07:40,610
So we're going to return pretty close type with the get products to shop around get products to shop

129
00:07:41,270 --> 00:07:45,400
coma and a payload and the payload it's equal to size and articles.

130
00:07:45,410 --> 00:07:45,680
Right.

131
00:07:45,680 --> 00:07:53,260
Whatever we get from the server so request now the server will be getting.

132
00:07:53,630 --> 00:07:54,030
I'm sorry.

133
00:07:54,200 --> 00:07:56,260
The reducer will be getting this.

134
00:07:56,330 --> 00:08:00,530
So we're going to go to that reduce or so inside of the products to shop.

135
00:08:00,590 --> 00:08:02,460
We're going to get now two things.

136
00:08:02,560 --> 00:08:09,240
So I going to say coma and I'm going to make a little bit of space right here so it's a little bit better.

137
00:08:09,320 --> 00:08:13,700
So of course we returned to pretty we just whatever we have in the state and I'm going to create two

138
00:08:13,700 --> 00:08:19,060
keys to shop and to shop cise.

139
00:08:19,150 --> 00:08:22,950
Now the shop size is going to get it's going to be really important later.

140
00:08:22,960 --> 00:08:29,680
So on the shop we will just put whatever we get back from the server inside payload DOD articles.

141
00:08:29,700 --> 00:08:37,180
You know this are the complete articles and to size is going to be size so action that payload data

142
00:08:37,180 --> 00:08:43,660
size and again we will back to that little bit get back to this.

143
00:08:43,660 --> 00:08:44,280
All right.

144
00:08:44,530 --> 00:08:50,500
So now we are pretty much ready for the actions we are making a request to shop to this and we are trying

145
00:08:50,500 --> 00:08:51,160
to get something.

146
00:08:51,160 --> 00:08:52,750
Of course we are not going to get anything.

147
00:08:52,750 --> 00:08:55,980
That's why we get at four or four because the route doesn't exist.

148
00:08:56,110 --> 00:08:58,320
So we are going to go to the server.

149
00:08:58,330 --> 00:08:58,920
All right.

150
00:08:59,230 --> 00:09:01,960
And I'm going to go right here at the top.

151
00:09:02,170 --> 00:09:08,410
So we need to create a new route so app that post because we are listening for a post request and it's

152
00:09:08,440 --> 00:09:17,030
inside API for Slash product for Slash and then shop then a coma request and response.

153
00:09:17,050 --> 00:09:23,580
And this is not a private route right just the public route so request coma and response.

154
00:09:23,730 --> 00:09:28,520
And I'm using a post because we are listening for something for Jason data.

155
00:09:28,770 --> 00:09:29,450
That's OK.

156
00:09:29,470 --> 00:09:31,300
Doesn't matter.

157
00:09:31,360 --> 00:09:34,180
So what are we going to do.

158
00:09:34,180 --> 00:09:38,070
First we need to get all the filters.

159
00:09:38,140 --> 00:09:41,780
You know the data that we're getting from this right here.

160
00:09:41,800 --> 00:09:43,540
The limit the skip and the filters.

161
00:09:43,690 --> 00:09:46,240
So we need to create a set of Barville so we can catch them.

162
00:09:46,500 --> 00:09:52,840
And in the future we might be getting some other things maybe the order it's descending or ascending

163
00:09:53,200 --> 00:09:54,820
maybe we can add it later.

164
00:09:54,820 --> 00:09:59,020
You know we're not going to really do it right now but maybe you want it later you want to filter by

165
00:09:59,020 --> 00:10:03,830
something and you want to or there and it's sending or sending way right.

166
00:10:04,180 --> 00:10:08,350
And the same thing with the ID maybe you want to fetch something and instead of ordering everything

167
00:10:08,350 --> 00:10:09,110
by ID.

168
00:10:09,250 --> 00:10:12,340
You went to or there or by I don't know the price.

169
00:10:12,890 --> 00:10:14,040
Yeah whatever.

170
00:10:14,200 --> 00:10:15,940
So we're going to set that marble right here.

171
00:10:16,030 --> 00:10:17,190
I say let.

172
00:10:17,350 --> 00:10:18,060
Other.

173
00:10:18,310 --> 00:10:20,510
And this is going to look pretty much familiar.

174
00:10:20,540 --> 00:10:22,100
It pretty much the same right here.

175
00:10:22,270 --> 00:10:26,290
Right here we are using queries but now we are using Jason data.

176
00:10:26,290 --> 00:10:34,900
So request that body because we are have to get Jason and then we get the order and if we do have an

177
00:10:34,900 --> 00:10:41,260
order we're going to set this value to whatever we get inside inside the inside the order if not by

178
00:10:41,260 --> 00:10:43,450
default is going to be descending.

179
00:10:43,450 --> 00:10:44,510
Same thing with the sort.

180
00:10:44,510 --> 00:10:57,710
BI So let sort by and sort by it's equal to an exact copy of this request that body dot sort by right

181
00:10:58,220 --> 00:11:01,020
and I make it it made it a capital should be capital.

182
00:11:01,210 --> 00:11:05,940
And of course if you get a sort by the value of this is equal to sort by.

183
00:11:05,980 --> 00:11:12,000
If not we always search by ID and get changed to this.

184
00:11:12,610 --> 00:11:19,060
All right so now we have to sort by then of course we need the real you know the what the arguments

185
00:11:19,110 --> 00:11:19,800
you're getting.

186
00:11:19,810 --> 00:11:21,160
You're really passing.

187
00:11:21,340 --> 00:11:22,990
And there's one we can meet them.

188
00:11:23,150 --> 00:11:26,100
So let me set the limit.

189
00:11:26,170 --> 00:11:29,520
How many articles the server will return.

190
00:11:29,560 --> 00:11:35,770
So if we do have a request we do have a body of limit we are going to return whatever we get from the

191
00:11:35,770 --> 00:11:36,550
limit.

192
00:11:36,970 --> 00:11:41,050
If not we can by default return 100 articles.

193
00:11:41,050 --> 00:11:43,150
Maybe it's too much depends.

194
00:11:43,180 --> 00:11:48,170
And this depends on your application how much articles you want to return.

195
00:11:48,210 --> 00:11:50,710
By default then we have the skip.

196
00:11:50,800 --> 00:12:04,000
So let let skip it calls to and right here on this cap we could do Richard Quest dot body dot skip.

197
00:12:04,020 --> 00:12:04,740
All right.

198
00:12:05,050 --> 00:12:06,470
Now we're going to have a prom.

199
00:12:06,700 --> 00:12:14,680
Remember that for the limit and the skip inside Mungo or Magoo's we need this to be a number just like

200
00:12:14,680 --> 00:12:15,200
this.

201
00:12:15,310 --> 00:12:21,370
So we need to wrap everything in parse and open and close and then we close it.

202
00:12:21,700 --> 00:12:23,400
And the same thing with the skip.

203
00:12:23,560 --> 00:12:25,200
It needs to be a number.

204
00:12:25,490 --> 00:12:28,250
So parse it and we make it a number.

205
00:12:28,540 --> 00:12:29,340
All right.

206
00:12:31,100 --> 00:12:32,420
What do we have next.

207
00:12:32,420 --> 00:12:37,180
We have the filters we have the skill limits we have to skip So now we need the filters.

208
00:12:37,340 --> 00:12:42,740
And this is going to be it's going to be a little bit weird because the filters they come in a kind

209
00:12:42,740 --> 00:12:47,830
of an array with an object with keys and values that are erased.

210
00:12:48,020 --> 00:12:50,840
So we can really pass this to Mungo right.

211
00:12:50,900 --> 00:12:58,130
What we need to do is we need to modify a little bit so find Arkes and this one is going to be equal

212
00:12:58,130 --> 00:12:59,430
to an empty object.

213
00:12:59,600 --> 00:13:03,780
So Mongo is going to accept as an argument to do the filtering.

214
00:13:03,800 --> 00:13:06,350
An object with the keys and the values inside.

215
00:13:06,620 --> 00:13:14,300
So what we need to do first we need to check if from the actual client from the request that we can

216
00:13:14,310 --> 00:13:20,660
be getting if we actually do have some values to filter because maybe brand is going to be an empty

217
00:13:20,660 --> 00:13:21,440
array.

218
00:13:21,440 --> 00:13:23,130
So we're going to check right here.

219
00:13:23,150 --> 00:13:28,760
If it's empty and if it's not empty of course if it's empty we will not add it to the fine arguments.

220
00:13:28,880 --> 00:13:30,080
Kind of makes sense.

221
00:13:30,350 --> 00:13:35,200
So I'm going to say for opening close now I'm going to enter.

222
00:13:35,240 --> 00:13:43,310
Going to say Leti and enter the request a body that filters so request that body that filters.

223
00:13:43,340 --> 00:13:48,430
Now if you don't want to do request a body every time you can create an alias and stored on a marble

224
00:13:49,040 --> 00:13:50,510
you can do that.

225
00:13:50,510 --> 00:13:52,580
This is of course Javascript.

226
00:13:52,730 --> 00:13:55,240
So remember that the key is filters not filter.

227
00:13:55,370 --> 00:13:55,870
Right.

228
00:13:56,030 --> 00:14:00,550
So once we are inside we are looping all the filters we get you know for filters.

229
00:14:00,560 --> 00:14:01,160
All right.

230
00:14:01,580 --> 00:14:09,270
So on each iteration we want to enter the filter and check if they are empty if they are not empty we

231
00:14:09,320 --> 00:14:10,450
are going to do something else.

232
00:14:10,460 --> 00:14:20,990
Of course now I'm going to go right here and say request dot body dot filters and I can enter the key

233
00:14:21,710 --> 00:14:24,080
and how do we check if the Keets empty or not.

234
00:14:24,080 --> 00:14:26,230
You know the array of fetcher.

235
00:14:26,390 --> 00:14:26,950
It's empty.

236
00:14:26,960 --> 00:14:27,770
Empty or not.

237
00:14:27,920 --> 00:14:29,490
We do dot and we do length.

238
00:14:29,540 --> 00:14:30,400
It's just an array.

239
00:14:30,560 --> 00:14:34,550
So we do it lenge backwards.

240
00:14:34,940 --> 00:14:35,540
There we go.

241
00:14:35,690 --> 00:14:42,290
And if it's greater than zero then we move forward and we start adding things to the fine arts.

242
00:14:42,320 --> 00:14:51,200
Now if you remember the filters and let me show you right here the price is a little bit weird because

243
00:14:51,440 --> 00:14:57,120
for the other ones we just get an array with values and we can pass that to a.

244
00:14:57,170 --> 00:15:03,290
You know just get me all the Brant's with you know this array of values but the price is a little bit

245
00:15:03,290 --> 00:15:03,680
different.

246
00:15:03,680 --> 00:15:05,870
We cannot just pass this to Mongo.

247
00:15:05,870 --> 00:15:07,400
We need to say this is the lowest.

248
00:15:07,430 --> 00:15:09,370
And this is the highest number.

249
00:15:09,620 --> 00:15:11,780
So we need to actually set that.

250
00:15:11,960 --> 00:15:17,760
So instead of here are going to say if opening close and else.

251
00:15:18,110 --> 00:15:25,280
So if the key of this one that we're checking right now it's equal to price we're going to do something

252
00:15:25,340 --> 00:15:32,420
if not we're going to go to the default case and the default case would be entering find arcs adding

253
00:15:32,420 --> 00:15:40,370
the key of this loop and saying OK the key of this it's equal to whatever we get from request that body

254
00:15:40,610 --> 00:15:42,040
that filters.

255
00:15:42,440 --> 00:15:48,640
And they know that the key the key of this loop of course which in this case is going to be Brandts.

256
00:15:48,640 --> 00:15:54,020
If it's not empty threats and would if of course they are not empty we are actually filtering right

257
00:15:54,020 --> 00:15:54,970
here.

258
00:15:55,130 --> 00:15:58,600
And of course if we get price we will do pretty much the same thing.

259
00:15:58,670 --> 00:16:04,280
But with something inside it we will enter find arcs at the key with this case price and it's going

260
00:16:04,280 --> 00:16:05,670
to be equal to an object.

261
00:16:05,780 --> 00:16:08,030
So for this one we need to pass an object.

262
00:16:08,500 --> 00:16:09,120
OK.

263
00:16:09,410 --> 00:16:15,590
So how can we tell Mongo inside of an object to look for the greater and the lower then.

264
00:16:15,740 --> 00:16:18,230
So we use a dollar sign and we do GTY.

265
00:16:18,260 --> 00:16:23,950
Now if we do G.T. which is greater it will start checking.

266
00:16:24,320 --> 00:16:29,980
Starting from this number let's say 300 but it's not really 300 it's going to start from the next number.

267
00:16:29,990 --> 00:16:36,260
Three hundred and one and there is a problem because maybe we are we have guitars with the price of

268
00:16:36,260 --> 00:16:39,830
three hundred and Mungo it's not going to be looking for 300.

269
00:16:39,830 --> 00:16:44,080
It's going to start from the next number which 3 0 which is 3 0 0 1.

270
00:16:44,450 --> 00:16:46,480
So how we can fix this.

271
00:16:46,520 --> 00:16:52,790
We use the this the e is greater greater than an E or something like that.

272
00:16:53,300 --> 00:16:54,410
And then we do a.

273
00:16:54,800 --> 00:16:57,750
And right here we need to pass the Greater Than what.

274
00:16:57,760 --> 00:17:04,700
So we have it inside request the body that filters open it close and we pass the first position of the

275
00:17:04,700 --> 00:17:06,750
array which is the starting point.

276
00:17:06,800 --> 00:17:10,710
So we enter the key and we pass the first element on the array.

277
00:17:11,010 --> 00:17:13,980
There are going to do coma and same thing for the lower then.

278
00:17:14,000 --> 00:17:17,300
So it's LTE and we have it.

279
00:17:17,930 --> 00:17:28,880
So request that body that filters we add the key and then I'm going to say OK I won the first position.

280
00:17:28,880 --> 00:17:29,490
All right.

281
00:17:29,740 --> 00:17:33,320
So now I'm going to go right here at bottom and I mean you can really do anything.

282
00:17:33,340 --> 00:17:38,750
I'm just going to send the response of a status of 200.

283
00:17:39,760 --> 00:17:42,720
Of course everything is going to fail but it doesn't matter right now.

284
00:17:42,850 --> 00:17:47,060
I'm going to do console log and begin going to see what we get on the terminal.

285
00:17:47,060 --> 00:17:50,750
So console log find ARX.

286
00:17:50,810 --> 00:17:51,650
All right.

287
00:17:53,810 --> 00:17:54,950
So let me see.

288
00:17:54,980 --> 00:18:00,100
Maybe you are going to get me going to get a nerf from from redux but that's OK.

289
00:18:00,590 --> 00:18:05,590
So right now we are getting something and if we go to the server OK we get nothing.

290
00:18:05,630 --> 00:18:10,840
And that is ok because all the filters are not really applied.

291
00:18:10,850 --> 00:18:13,760
We when we make a check nothing really happens.

292
00:18:13,870 --> 00:18:19,770
And if I go over here nothing really happens because on the our application we are not triggering anything.

293
00:18:20,000 --> 00:18:22,760
After we make a change on the filters but that is OK.

294
00:18:22,860 --> 00:18:26,190
We are getting the actual values on the server.

295
00:18:26,310 --> 00:18:27,160
Are getting this.

296
00:18:27,350 --> 00:18:31,180
And we are filtering the data on server correctly right.

297
00:18:31,190 --> 00:18:34,910
We don't have any value so we will return an empty object.

298
00:18:34,910 --> 00:18:37,250
So there is that we have no filters.

299
00:18:37,250 --> 00:18:37,880
All right.

300
00:18:38,110 --> 00:18:44,090
So now let's let's let's make the actual request this is in part going to go right here.

301
00:18:44,300 --> 00:18:50,550
And since we want to sorry we want to find products are going to say products product.

302
00:18:50,550 --> 00:18:53,720
And remember this product it's a reference to this to the model.

303
00:18:53,750 --> 00:18:54,100
Right.

304
00:18:54,140 --> 00:18:54,710
OK.

305
00:18:55,340 --> 00:18:56,650
So I needed to do this.

306
00:18:56,840 --> 00:19:00,500
So once we enter products we need to find something.

307
00:19:00,680 --> 00:19:03,900
So I'm going to say find opening close.

308
00:19:04,160 --> 00:19:06,060
And what do we need to find.

309
00:19:06,080 --> 00:19:11,270
We need to find to find Ark's passing this object mongoose.

310
00:19:11,270 --> 00:19:17,610
It's going to actually take it that are going to go right here at the bottom.

311
00:19:17,750 --> 00:19:24,590
Remember that we need to populate whenever we get the results we need to change the ID of France and

312
00:19:24,590 --> 00:19:27,320
the idea of would just like with it right here.

313
00:19:27,440 --> 00:19:30,210
So I'm going to copy and paste.

314
00:19:30,230 --> 00:19:31,430
All right.

315
00:19:31,430 --> 00:19:34,680
Next it's going to be the sort we need to decide.

316
00:19:34,910 --> 00:19:40,130
So by and the other side the sort by and the other is going to be descending ascending and begin to

317
00:19:40,130 --> 00:19:41,710
show it by what.

318
00:19:41,720 --> 00:19:45,600
So we're going to go right here at the bottom and we use the sort.

319
00:19:45,980 --> 00:19:48,980
If you asked me Mangu Mongo Indigos I really love them.

320
00:19:48,980 --> 00:19:51,280
They are really really good and easy to use.

321
00:19:51,500 --> 00:19:57,530
So we passed first to sort by as an array and then it takes an array of the order and it's going to

322
00:19:57,530 --> 00:20:01,930
take it remember that we need to use the skip right now.

323
00:20:01,940 --> 00:20:07,640
We are not really skipping because we are pretty much fetching everything all the results from the zero

324
00:20:07,850 --> 00:20:09,860
right from the first article.

325
00:20:09,860 --> 00:20:15,720
So we use skip opening close and we pass skip which is right now is going to be zero later.

326
00:20:15,740 --> 00:20:20,000
We're going to change it of course and we go to the next line of code.

327
00:20:20,210 --> 00:20:24,410
We have a limit how many articles we want to bring in this case default.

328
00:20:24,410 --> 00:20:26,500
We said it's six.

329
00:20:26,720 --> 00:20:33,470
Now the default here the default on the products action right here filters and right here we are saying

330
00:20:33,560 --> 00:20:35,000
that we want to bring sex.

331
00:20:35,000 --> 00:20:36,460
So it's going to preexists.

332
00:20:36,830 --> 00:20:38,950
All right than Dot.

333
00:20:38,970 --> 00:20:43,060
And now we are ready to you know get the information get the data.

334
00:20:43,130 --> 00:20:49,130
So we use that exec open it close and then we run a function.

335
00:20:49,130 --> 00:20:52,890
Let me check if this section went ok with one to luck.

336
00:20:52,940 --> 00:20:55,690
So I need to cut it.

337
00:20:56,150 --> 00:21:02,240
He advised us to record because no less than no greater than 20 minutes.

338
00:21:02,240 --> 00:21:04,000
So again it's slug.

339
00:21:04,130 --> 00:21:09,160
So the only thing we need to do on the next lecture is to you know create the execution of this.

340
00:21:09,200 --> 00:21:12,240
And we turn something back to the client real simple.

341
00:21:12,240 --> 00:21:12,500
All right.

342
00:21:12,500 --> 00:21:14,420
So let's go to the next one and continue this.

