1
00:00:00,850 --> 00:00:04,330
So lets do the update form in the submit form.

2
00:00:04,550 --> 00:00:06,130
The first we think about this.

3
00:00:06,130 --> 00:00:09,440
We've covered this so I'm going to go to the register.

4
00:00:09,580 --> 00:00:11,130
You can go to the log in that's good.

5
00:00:11,320 --> 00:00:13,630
And we have the update form and the submit form.

6
00:00:13,690 --> 00:00:20,470
So I'm going to copy both and of course we're going to make some changes in it copy go back to our products

7
00:00:20,770 --> 00:00:25,010
and are going to go forward to component it now.

8
00:00:25,150 --> 00:00:27,600
All right let's start from the beginning.

9
00:00:27,690 --> 00:00:35,200
The form is just the same same code but from this one the key word would be products because we are

10
00:00:35,470 --> 00:00:37,890
pushing products on the submit form.

11
00:00:37,900 --> 00:00:44,290
Everything else is the same but everything inside form ballot we can delete it because we don't need

12
00:00:44,290 --> 00:00:44,400
it.

13
00:00:44,410 --> 00:00:46,020
We need to do something else.

14
00:00:46,240 --> 00:00:52,720
Right and right here I'm going to say cancel log just the data to submit just like this.

15
00:00:52,720 --> 00:00:53,060
All right.

16
00:00:53,110 --> 00:00:54,070
And that is it.

17
00:00:54,400 --> 00:00:55,600
That's really it.

18
00:00:55,600 --> 00:01:01,450
Now the next thing of course we know Arizona and if I enter something you know maybe a price it works

19
00:01:01,690 --> 00:01:04,400
description it works and everything else works.

20
00:01:04,400 --> 00:01:06,370
Burguet So OK.

21
00:01:06,880 --> 00:01:13,790
So now of course oh yeah I'm going to go to inspect just to make sure I can add the product.

22
00:01:13,810 --> 00:01:15,330
And we should be getting an error.

23
00:01:15,400 --> 00:01:16,820
So we get Please check your data.

24
00:01:16,840 --> 00:01:17,380
That's good.

25
00:01:17,380 --> 00:01:19,090
At least it's validating.

26
00:01:19,120 --> 00:01:21,540
So now we need to whenever it's OK.

27
00:01:21,730 --> 00:01:29,290
We have a VAT form valid a valid form we need to go to the dispatch and action to store that information.

28
00:01:29,320 --> 00:01:35,130
And this one is going to be very simple so we don't have this we are going to create it right now.

29
00:01:35,470 --> 00:01:39,800
So I'm going to call this product you can call this whatever you want.

30
00:01:39,830 --> 00:01:47,000
Add product or write in a copy and same as always.

31
00:01:47,180 --> 00:01:56,150
We will need to go to product actions and at the function and I'm going to go right here an export function

32
00:01:56,330 --> 00:01:58,800
could be a narrow function if you if you wish.

33
00:01:59,180 --> 00:02:03,550
So export function product and this one it's real simple.

34
00:02:03,560 --> 00:02:10,130
We are not doing anything before we go to the server and this function just like with it with maybe

35
00:02:10,140 --> 00:02:11,420
other other functions.

36
00:02:11,420 --> 00:02:15,380
It's really simple we just do the request and send the payload and the type.

37
00:02:15,380 --> 00:02:22,170
So Konst request equals access opening close.

38
00:02:22,260 --> 00:02:23,930
Sorry post.

39
00:02:24,140 --> 00:02:29,910
We passed the only route which is product server just like this.

40
00:02:29,910 --> 00:02:37,620
And if you remember the route article let's just make sure because I remember but it's kind of a blurry

41
00:02:38,190 --> 00:02:39,050
kind of a blur.

42
00:02:39,360 --> 00:02:46,780
So sharp we have articles we have articles by id and we have article right.

43
00:02:46,920 --> 00:02:49,460
And we get the success and we will get that doc back.

44
00:02:49,680 --> 00:02:50,250
All right.

45
00:02:50,340 --> 00:02:59,880
So Paul the actions article that we need to pass the data to submit so data to see if med can it copy

46
00:02:59,940 --> 00:03:01,260
and pass it.

47
00:03:01,350 --> 00:03:04,130
Then of course we do that Dan.

48
00:03:04,140 --> 00:03:09,370
Open and close after a while this gets a little bit boring.

49
00:03:09,420 --> 00:03:16,320
You've been listening listening to me for like I know a day 20 hours 24 hours something like that.

50
00:03:19,120 --> 00:03:25,540
So yeah I know I know this is kind of a boring already so product and we are going to create a type

51
00:03:25,540 --> 00:03:29,520
of course of product and then we send the payload.

52
00:03:29,740 --> 00:03:30,580
Let me do it right.

53
00:03:30,630 --> 00:03:40,380
Koma payload and the payload it's going to be equal to the request payload request.

54
00:03:40,600 --> 00:03:42,800
We don't have the type we need to add it.

55
00:03:42,820 --> 00:03:46,550
So coma and product are going to go to types.

56
00:03:46,690 --> 00:03:47,700
Can you go right here.

57
00:03:47,710 --> 00:03:54,920
Export Konst product equals to product.

58
00:03:55,300 --> 00:03:56,080
Right.

59
00:03:56,110 --> 00:03:56,670
All right.

60
00:03:56,860 --> 00:03:59,680
So now we have the actions right.

61
00:03:59,740 --> 00:04:02,540
We have the types we need to go to the producer.

62
00:04:02,650 --> 00:04:10,300
So I'm going to go to the producer and find it first reducers product producers are going to copy the

63
00:04:10,300 --> 00:04:16,780
type because because we can use it in cold type and then just add the case.

64
00:04:16,780 --> 00:04:27,390
So it's going to be a case of when they do a dry case of ADD product and we make that default.

65
00:04:27,400 --> 00:04:28,290
Correct.

66
00:04:28,300 --> 00:04:30,580
So what we return it's going to be the state.

67
00:04:30,670 --> 00:04:40,180
So we return dot dot dot state state coma and again we need to create a key were we going to be adding

68
00:04:40,180 --> 00:04:40,730
this.

69
00:04:40,840 --> 00:04:47,800
So I'm going to call it out product you could call this maybe admin app product or admin product or

70
00:04:47,800 --> 00:04:49,120
something like that.

71
00:04:49,120 --> 00:04:52,620
So action that payload and that is it.

72
00:04:53,020 --> 00:04:53,810
Okay.

73
00:04:54,190 --> 00:04:58,210
So of course all this circuit is already done.

74
00:04:58,210 --> 00:05:02,610
So what we need to do now is to you know send the product or let's see what happens.

75
00:05:02,830 --> 00:05:08,410
Let's go back to the to the form and first I want to make sure that everything is correct.

76
00:05:08,440 --> 00:05:10,660
We are getting the data to submit.

77
00:05:11,140 --> 00:05:13,990
So I'm going to enter whatever information right now.

78
00:05:14,590 --> 00:05:23,530
All right so whatever information description whatever price brand the shipping available would the

79
00:05:23,530 --> 00:05:25,720
frets and the Polish.

80
00:05:25,780 --> 00:05:28,340
So at product let's see what we get.

81
00:05:28,420 --> 00:05:32,610
So we get it available look at everything looks correct.

82
00:05:32,610 --> 00:05:34,550
We even get the IDs.

83
00:05:34,550 --> 00:05:36,530
So all right let's let's push it.

84
00:05:36,550 --> 00:05:38,090
Let's send it to the server.

85
00:05:38,560 --> 00:05:39,120
OK.

86
00:05:39,640 --> 00:05:43,520
So on this forum first of course we need to dispatch the action.

87
00:05:43,660 --> 00:05:44,800
We have it at the top.

88
00:05:44,800 --> 00:05:48,920
So we do this not perhaps just like this.

89
00:05:49,000 --> 00:05:51,320
We do the dispatch open and close.

90
00:05:51,550 --> 00:05:54,520
We do add product just like this.

91
00:05:54,520 --> 00:06:02,980
And then of course open and we pass the data access if met then we will do something opening close and

92
00:06:02,980 --> 00:06:03,800
we do something.

93
00:06:03,800 --> 00:06:04,390
All right.

94
00:06:04,570 --> 00:06:16,060
So if and else if and else just like we did before after we get now everything gets posted we will get

95
00:06:16,120 --> 00:06:21,860
something that says this that props the products that are products and success.

96
00:06:21,910 --> 00:06:33,090
So I'm going to say this that trops products just like this that product that success.

97
00:06:33,100 --> 00:06:34,230
All right.

98
00:06:34,360 --> 00:06:40,580
And of course if this fails this is get we'll do something if not we will just set the state of something.

99
00:06:40,930 --> 00:06:51,540
So I'm going to say this that said state on the air form error equals to true.

100
00:06:51,540 --> 00:07:00,660
So what I wanted to do I want to show the success message and I want to reset the whole form this is

101
00:07:00,660 --> 00:07:01,880
what I want to do.

102
00:07:02,070 --> 00:07:10,670
So I'm going to call to a function that says these that reset and then fields and then hndler open

103
00:07:10,890 --> 00:07:11,830
and close.

104
00:07:11,910 --> 00:07:13,190
It's just a function.

105
00:07:13,260 --> 00:07:15,840
Now we didn't have this function going to create it right now.

106
00:07:16,140 --> 00:07:18,690
So it's just going to be a function that does something.

107
00:07:18,900 --> 00:07:25,860
And the main purpose of this function is to reset all the fields and show the you know show up message

108
00:07:25,860 --> 00:07:27,970
saying that do everything it's OK.

109
00:07:28,260 --> 00:07:34,470
So first on this one I'm just going to set the state so at least we can get a message saying that everything

110
00:07:34,470 --> 00:07:35,390
was correct.

111
00:07:35,430 --> 00:07:39,420
So I'm going to say form success and then true.

112
00:07:39,420 --> 00:07:42,480
All right let's see what happens.

113
00:07:43,110 --> 00:07:43,890
Let's try again.

114
00:07:43,890 --> 00:07:47,500
Let me make this a little bit smaller so I'm going to add a name.

115
00:07:47,540 --> 00:07:50,720
I going to say the name of the guitar.

116
00:07:51,330 --> 00:07:56,420
I don't know a rocket whatever description blah blah blah blah blah.

117
00:07:56,430 --> 00:07:57,400
The price.

118
00:07:57,420 --> 00:07:58,950
One two three.

119
00:07:58,980 --> 00:08:02,510
The product itself Fender because the name it's kind of weird.

120
00:08:02,520 --> 00:08:06,670
Now let's do an early wall the shipping.

121
00:08:06,930 --> 00:08:07,480
Yeah.

122
00:08:07,650 --> 00:08:10,110
Well no it's a one two three.

123
00:08:10,140 --> 00:08:14,520
One hundred dollars in the 100 billion stock.

124
00:08:14,550 --> 00:08:14,790
Yeah.

125
00:08:14,790 --> 00:08:23,160
Because a cheap guitar with material mahogany of course frets 22 and publish it can it make it public

126
00:08:23,550 --> 00:08:26,720
so I can add the product and we get the success.

127
00:08:26,880 --> 00:08:32,190
And on this tour we get success true and we get the article back.

128
00:08:32,190 --> 00:08:33,740
So let me go right here.

129
00:08:33,750 --> 00:08:41,990
Our product success we get the everything else sold price description and everything else so very good

130
00:08:42,000 --> 00:08:42,830
man.

131
00:08:43,390 --> 00:08:48,650
So let's do the reset field and then I can tell you one more thing about this.

132
00:08:48,660 --> 00:08:55,500
So on the recent feel handler what I want to do I want to enter our state right here are phone data

133
00:08:55,710 --> 00:08:58,690
and we need to reset everything back to zero.

134
00:08:58,860 --> 00:09:04,620
Right reset the ballot reset the values and reset everything else.

135
00:09:04,620 --> 00:09:10,800
So for this since we will perform pretty much the same action on all the forms are going to create again

136
00:09:10,920 --> 00:09:12,590
just a form action.

137
00:09:12,590 --> 00:09:14,080
All right.

138
00:09:14,400 --> 00:09:22,980
So first I'm going to do Konst and new form data and this equals to this function that we will create

139
00:09:23,010 --> 00:09:26,940
in a minute is it called Reset fields.

140
00:09:27,120 --> 00:09:31,820
So this reset fields needs to know what needs to be reset.

141
00:09:31,860 --> 00:09:36,450
So this state and we just pass the form data.

142
00:09:36,560 --> 00:09:37,890
No we don't have this function.

143
00:09:37,890 --> 00:09:44,020
I'm going to include it at the top and I'm going to go to form actions so we can you know create it.

144
00:09:44,100 --> 00:09:50,610
So the reset form data reset fields or Kopete we set we call fields that reset feels.

145
00:09:50,610 --> 00:09:53,180
So the reset field is going to be very simple.

146
00:09:53,250 --> 00:09:57,860
We need to do a couple things but it's just pure logic.

147
00:09:57,870 --> 00:10:05,730
Konst reset fields equals that form data data just like this.

148
00:10:05,730 --> 00:10:08,210
And then we just run a function.

149
00:10:08,220 --> 00:10:13,080
Now I'm going to add one more thing because we might be needing this later just like we did with the

150
00:10:13,080 --> 00:10:13,940
other ones.

151
00:10:14,010 --> 00:10:18,050
I'm going to add the stack and I forgot to do it right here.

152
00:10:18,180 --> 00:10:23,680
So it's products products products and then products.

153
00:10:24,030 --> 00:10:24,770
All right.

154
00:10:25,170 --> 00:10:32,880
I'm going to go to form actions and the name and the name the form name form name we are not going to

155
00:10:32,880 --> 00:10:43,310
really use it but maybe in the future we will use this right so instead of here we get different data

156
00:10:43,580 --> 00:10:51,440
just like we did before I will create a new form data ECOs to dot dot dot and whatever we get inside

157
00:10:51,440 --> 00:10:59,840
form data you know as usual then what we need to do we need to enter the form data loop everything and

158
00:10:59,840 --> 00:11:04,900
reset the Valot the value the touch and the validation message.

159
00:11:04,910 --> 00:11:18,110
So for opening close and then let me an new form data because we made a copy of this we can enter that

160
00:11:18,110 --> 00:11:20,930
new form data and get a copy.

161
00:11:21,000 --> 00:11:22,890
We'll make it right.

162
00:11:23,070 --> 00:11:23,500
Right.

163
00:11:23,510 --> 00:11:29,360
The new form data we're going to enter the whatever key we are in and they're going to enter the value

164
00:11:30,050 --> 00:11:32,480
and the value right now is going to be nothing.

165
00:11:32,480 --> 00:11:33,820
Later we are going to make a change here.

166
00:11:33,830 --> 00:11:35,110
But for now it's OK.

167
00:11:35,510 --> 00:11:41,210
Then of course I'm going to cover this and we're going to do it doesn't begin to change the ballot to

168
00:11:41,270 --> 00:11:42,970
cole falls.

169
00:11:43,160 --> 00:11:44,110
Right.

170
00:11:44,210 --> 00:11:48,440
Then we have the new form day to make it right ballot.

171
00:11:48,830 --> 00:11:56,780
We need to modify the touched so we can say touched equals falls and then we have the validation message.

172
00:11:57,020 --> 00:12:01,800
So you form data and valley Dacian message just like this.

173
00:12:01,820 --> 00:12:05,520
Let me just make sure I wrote this correctly.

174
00:12:05,840 --> 00:12:09,690
Validation message where I get validation message.

175
00:12:09,710 --> 00:12:10,890
It's nothing.

176
00:12:11,180 --> 00:12:16,430
Right and the only thing we do know right now is to return whatever we have the new form data which

177
00:12:16,430 --> 00:12:21,740
is the new state are going to say return new form data that is it.

178
00:12:21,740 --> 00:12:25,020
So it's going to go back to ad products.

179
00:12:25,700 --> 00:12:30,380
And I'm going to go to the reset fill hands are now inside form data.

180
00:12:30,470 --> 00:12:34,610
We will get the news tape with pretty much everything we set.

181
00:12:34,640 --> 00:12:40,940
So form data equals to whatever we get back from the function and that's it.

182
00:12:40,940 --> 00:12:50,720
Now we want to do I want to get rid of that from success after a set time out so set time out and we

183
00:12:50,720 --> 00:12:54,330
just run a function and I'm going to run it after four years.

184
00:12:54,470 --> 00:13:01,560
After three seconds just before during I'm going to show the message for three seconds then it's out.

185
00:13:01,940 --> 00:13:07,110
So opening close forms success false.

186
00:13:07,300 --> 00:13:10,060
But now we're going to get one more problem with this.

187
00:13:10,060 --> 00:13:11,540
I'm going to tell you in a minute.

188
00:13:12,010 --> 00:13:14,120
But first let's see if everything is OK.

189
00:13:14,290 --> 00:13:17,940
The product name I don't know man.

190
00:13:18,760 --> 00:13:20,930
I don't know.

191
00:13:21,040 --> 00:13:25,160
Over over tech I believe that is a brand.

192
00:13:25,180 --> 00:13:30,100
So for that price it's $400.

193
00:13:30,630 --> 00:13:33,140
It's an Sharpeville whatever.

194
00:13:33,400 --> 00:13:34,370
Yes.

195
00:13:34,660 --> 00:13:38,850
No mouse would 22.

196
00:13:39,210 --> 00:13:40,410
And it's public.

197
00:13:40,420 --> 00:13:41,130
All right.

198
00:13:41,570 --> 00:13:48,620
So going at the product and we get the success and understate what do we get we just get the products

199
00:13:48,620 --> 00:13:53,630
access and everything else and noticed that we are not sending images to the server.

200
00:13:53,850 --> 00:14:00,820
And it's big as we are passing you know it's adding the information me just make sure overtight get

201
00:14:01,240 --> 00:14:07,270
we are just adding the information to the server and with an empty images and this and sold as well.

202
00:14:07,290 --> 00:14:09,860
This is because they are not required.

203
00:14:10,150 --> 00:14:10,920
Brian.

204
00:14:11,220 --> 00:14:11,650
OK.

205
00:14:11,880 --> 00:14:15,250
And the image you know we could have no images of the product.

206
00:14:15,270 --> 00:14:16,440
So that is OK.

207
00:14:16,830 --> 00:14:19,680
So we were able to you know add the information.

208
00:14:19,680 --> 00:14:25,890
In theory if we go to guitars we get it you know we have the rocket and the overtasked So we're adding

209
00:14:25,890 --> 00:14:29,290
the information correctly and the message goes away.

210
00:14:29,300 --> 00:14:31,520
Now we are.

211
00:14:31,560 --> 00:14:33,400
Let me just give you the scenario.

212
00:14:33,570 --> 00:14:36,110
We are just adding the information right.

213
00:14:36,120 --> 00:14:39,750
And everything goes to the server and comes back whenever it comes back.

214
00:14:39,750 --> 00:14:44,980
We are doing we are going to the reducer and adding a new key called a product.

215
00:14:45,030 --> 00:14:47,170
Now after a while we reset the form.

216
00:14:47,190 --> 00:14:54,220
You know after we add a new product we set the form but on the state we still get you know the product

217
00:14:54,260 --> 00:14:56,040
success an article.

218
00:14:56,550 --> 00:15:00,590
And the thing is that that information is just there.

219
00:15:00,900 --> 00:15:04,870
Even if we go to a different route that article stays there.

220
00:15:04,980 --> 00:15:07,010
So sometimes not every time.

221
00:15:07,050 --> 00:15:12,180
And we can add that in the past I didn't do it much often right here because a lot of work extra work

222
00:15:12,180 --> 00:15:18,570
for something so simple and but in real life you should very mind that when you leave this component

223
00:15:18,930 --> 00:15:24,210
this information you have right here which is going to be the product actually you don't need it.

224
00:15:24,270 --> 00:15:26,410
So you need to reset it.

225
00:15:26,430 --> 00:15:32,280
So for this what you will need to do is to create a clearer state right a clear state of product.

226
00:15:32,640 --> 00:15:41,190
So what you can do is just create a new a new new function right here call your product something like

227
00:15:41,190 --> 00:15:42,770
that doesn't matter.

228
00:15:42,770 --> 00:15:49,050
Call your product and you're going to do it really fast going to go to product actions can attach right

229
00:15:49,050 --> 00:15:53,060
here export function clear product.

230
00:15:53,130 --> 00:15:59,570
Open it close and the only thing that you return is that same password the same type.

231
00:15:59,580 --> 00:16:01,420
We need to actually change it.

232
00:16:01,620 --> 00:16:05,650
Clear product.

233
00:16:05,870 --> 00:16:07,330
And of course we need to add it.

234
00:16:07,330 --> 00:16:11,720
That's why I'm telling you I don't do this much on the practice project it's because we had a lot of

235
00:16:11,720 --> 00:16:21,180
work for something so simple so export Konst clear product and then clear product something like that.

236
00:16:22,150 --> 00:16:28,360
So inside action actions that whenever you this this action which is the clear product you're just sending

237
00:16:28,360 --> 00:16:31,840
a type with a clear product and nothing inside.

238
00:16:31,840 --> 00:16:36,370
This could be an empty array or an empty object or whatever is that you're actually using.

239
00:16:36,370 --> 00:16:37,020
Right.

240
00:16:37,270 --> 00:16:39,110
So then on that we do sir.

241
00:16:39,810 --> 00:16:48,970
You go here of course we need to add the type you go here below the product so you can clearly see that

242
00:16:48,970 --> 00:16:52,880
we have an ad and we have a clear and you just returned to same thing.

243
00:16:53,290 --> 00:16:59,130
But the next whenever you trigger the dispatch that action a product will be changed to nothing.

244
00:16:59,290 --> 00:17:03,410
And this could happen on the sense that timeout that we are doing right here.

245
00:17:03,490 --> 00:17:10,190
Let that just copy the name a function could happen in the said time out of me find it right here.

246
00:17:10,210 --> 00:17:14,650
You could dispatch an action or you can do it when the component amounts.

247
00:17:14,650 --> 00:17:15,720
You can do that.

248
00:17:16,150 --> 00:17:19,390
So I'm going to we're going to do it right here.

249
00:17:19,840 --> 00:17:25,020
So whenever we said the state I'm going into a coma and I'm going to dispatch the action.

250
00:17:25,300 --> 00:17:32,680
So this that prompts dot this patch opening close and we just clear the product.

251
00:17:32,680 --> 00:17:40,550
And this is going to happen after the three seconds so if I enter or whatever again or another name

252
00:17:40,550 --> 00:17:43,610
I don't know I'm looking something in my office.

253
00:17:43,610 --> 00:17:49,780
The metal metal math this is a pedal.

254
00:17:49,860 --> 00:17:57,030
So whatever the price four hundred they brand the shipping.

255
00:17:57,060 --> 00:18:00,620
Yeah whatever mahogany.

256
00:18:01,340 --> 00:18:02,950
And then public.

257
00:18:03,290 --> 00:18:06,810
We're going to see it right here at product that is OK.

258
00:18:07,760 --> 00:18:10,180
And then after a second you know we just remove it.

259
00:18:10,280 --> 00:18:12,790
So if we go back we do have that key but it's empty.

260
00:18:12,790 --> 00:18:13,990
We don't have anything.

261
00:18:14,000 --> 00:18:16,690
So you're ready to enter a new product again.

262
00:18:16,760 --> 00:18:24,320
In this case right here on our product we don't we need to clear it because there's no reference to

263
00:18:24,320 --> 00:18:25,230
that product.

264
00:18:25,370 --> 00:18:27,210
Whenever the application loads.

265
00:18:27,230 --> 00:18:27,530
Right.

266
00:18:27,530 --> 00:18:32,320
So the next time you enter to the same route there's no reference to this state of product.

267
00:18:32,330 --> 00:18:38,660
We are not really using it but maybe if you want to output something from the our product right here

268
00:18:39,260 --> 00:18:42,530
you might be need to store it and then show it and then query it.

269
00:18:42,530 --> 00:18:44,410
So that's where you need to do it.

270
00:18:44,540 --> 00:18:53,090
But the best example I can give you is the guitars if you go to a new page what say new route going

271
00:18:53,200 --> 00:18:53,940
to go here.

272
00:18:53,960 --> 00:18:54,550
Right.

273
00:18:54,590 --> 00:18:58,400
So the state owned redux of this new page is going to be right there.

274
00:18:58,400 --> 00:19:02,010
So we are fetching everything and storing and relax and everything else.

275
00:19:02,030 --> 00:19:06,080
Now if you move out if you go outside the component let's say two guitars.

276
00:19:06,080 --> 00:19:11,560
Again that stayed inside redux steaks the same with information about this.

277
00:19:11,690 --> 00:19:17,510
So if you enter to a new one the server is going to try to fetch the information and you will see the

278
00:19:17,510 --> 00:19:22,770
information of the previous state until the next state kicks in.

279
00:19:23,060 --> 00:19:29,540
So that is a problem in that case you will need to clear the state and just like we did here you could

280
00:19:29,540 --> 00:19:35,510
do a clear product just like with this with it we do it with a single function and then a single type

281
00:19:35,830 --> 00:19:36,490
where you could do.

282
00:19:36,490 --> 00:19:43,230
For example if you don't want to write one clear for every action that this patch is to create maybe

283
00:19:43,250 --> 00:19:50,060
a common function where you can receive some arguments as props and just return the type that you're

284
00:19:50,060 --> 00:19:54,090
passing in props and the payload of whatever it is that you want to do.

285
00:19:54,150 --> 00:19:56,820
Maybe set it to an empty IRA or something like that.

286
00:19:56,870 --> 00:20:00,950
So you just create create one common clear that actually you can do it.

287
00:20:00,950 --> 00:20:05,630
It's simple it's just a function that takes a switch with some arguments and return something.

288
00:20:05,750 --> 00:20:07,890
If the if it matches the type.

289
00:20:07,970 --> 00:20:08,860
Right.

290
00:20:09,290 --> 00:20:09,930
OK.

291
00:20:10,460 --> 00:20:13,950
So that is going to save it and we are pretty much done with this.

292
00:20:14,000 --> 00:20:14,620
We are done.

293
00:20:14,660 --> 00:20:16,670
We are able to post information.

294
00:20:16,730 --> 00:20:17,850
Go to guitars.

295
00:20:18,020 --> 00:20:20,680
We get the metal MUF everything is good.

296
00:20:20,850 --> 00:20:24,680
So now comes the fun part.

297
00:20:24,680 --> 00:20:26,540
We need to do an upload.

298
00:20:26,540 --> 00:20:33,020
We need to create a nap load and we will use a service and we're going to use cloud Inari because it's

299
00:20:33,020 --> 00:20:36,150
so simple right it's very simple to use.

300
00:20:36,290 --> 00:20:42,040
And of course like it's all before and a bonus section will do with a do it with matter which is the

301
00:20:42,520 --> 00:20:47,440
in Cavitt in house hosting upload uploading function.

302
00:20:47,450 --> 00:20:48,610
We get from node.

303
00:20:48,950 --> 00:20:50,340
You know it's a kind of a helper.

304
00:20:50,480 --> 00:20:55,300
So we use it to up to store images on the server.

305
00:20:55,700 --> 00:20:59,080
Like I told before I don't really like it with node applications.

306
00:20:59,210 --> 00:21:02,410
If you are using P2P or an Apache server that is OK.

307
00:21:02,480 --> 00:21:03,310
You know that is OK.

308
00:21:03,380 --> 00:21:09,380
But for this one from node I would not recommend to store the images right here and you could do it

309
00:21:09,380 --> 00:21:13,570
with firebase you get a storage service just like with it before it.

310
00:21:13,580 --> 00:21:14,570
Same idea.

311
00:21:14,570 --> 00:21:14,960
All right.

312
00:21:14,960 --> 00:21:18,270
So let's go to the next section and start with the file upload.

