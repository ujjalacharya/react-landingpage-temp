1
00:00:00,730 --> 00:00:02,980
All right so now let's create the layout for this.

2
00:00:02,980 --> 00:00:05,400
You know the route and the component and everything else.

3
00:00:05,480 --> 00:00:12,580
So inside the we said user and recent past edgiest So react re-act class based components.

4
00:00:12,670 --> 00:00:13,360
Right.

5
00:00:13,420 --> 00:00:19,750
And I'm going to call this reset pass because the other one was we said user right now I'm going to

6
00:00:19,750 --> 00:00:23,070
be using a lot of things from you reset user.

7
00:00:23,170 --> 00:00:24,510
So not this one.

8
00:00:24,520 --> 00:00:25,940
Let me bring it right here.

9
00:00:26,080 --> 00:00:28,020
I'm going to put it all right.

10
00:00:28,300 --> 00:00:29,710
So I'm going to go at the top.

11
00:00:29,710 --> 00:00:31,100
We are still going to use actio.

12
00:00:31,120 --> 00:00:38,540
We are still going to use you know this one the form action so I'm going to copy and paste.

13
00:00:38,790 --> 00:00:44,950
All right now we're going to use one more thing but I'm going to add it at the end or maybe I did right

14
00:00:44,950 --> 00:00:51,910
now I'm going to go to the register file and at the top we can see that we have a dialog so we can do

15
00:00:51,910 --> 00:00:55,620
pretty much the same thing if we are able to reset the pass successfully.

16
00:00:55,630 --> 00:01:02,170
We will see us show a dialog to the user asking the user to log in.

17
00:01:02,500 --> 00:01:03,080
OK.

18
00:01:03,310 --> 00:01:08,420
So now we have the recent past I'm going to say we said pass and we're going to go two routes.

19
00:01:08,410 --> 00:01:16,660
So I'm going to go to routes and include this at the top so I'm going to bring it import reset pass

20
00:01:17,650 --> 00:01:24,810
from that forward slash components forward slash reset user and this one it's not an index.

21
00:01:24,820 --> 00:01:27,220
So we need just pacify this.

22
00:01:27,220 --> 00:01:30,350
Of course I'm going to go right here at the bottom.

23
00:01:30,460 --> 00:01:31,540
Let me do this.

24
00:01:32,020 --> 00:01:34,950
So we're going to copy paste.

25
00:01:35,050 --> 00:01:41,830
Now this route it's a little bit different than the user because the reset passport has a token.

26
00:01:41,830 --> 00:01:44,290
Remember we need to catch the I.D..

27
00:01:44,410 --> 00:01:49,120
So first I'm going to say that we're going to use the recent pass component and this one instead of

28
00:01:49,180 --> 00:01:55,240
user is going to be passport and then always lash Collen and then tokin.

29
00:01:55,240 --> 00:02:00,880
So this is an I.D. right just like the product detail and the I.D. you get the token.

30
00:02:00,880 --> 00:02:02,820
And we pass it to that component.

31
00:02:02,970 --> 00:02:03,600
Right.

32
00:02:03,910 --> 00:02:04,510
OK.

33
00:02:04,900 --> 00:02:09,690
So in theory we should be getting something so we get reset pass.

34
00:02:09,700 --> 00:02:10,540
Very good.

35
00:02:10,570 --> 00:02:13,760
Let's go back to the reset pass component.

36
00:02:14,050 --> 00:02:20,590
Now we need to do a lot of things just like we did with the index of the recent user I'm going to go

37
00:02:20,590 --> 00:02:21,640
to register.

38
00:02:21,820 --> 00:02:24,930
I'm going to do this pretty much same thing we did before.

39
00:02:24,940 --> 00:02:27,860
We're back to the boring part.

40
00:02:27,940 --> 00:02:29,210
All right.

41
00:02:29,680 --> 00:02:30,820
So form data now.

42
00:02:30,850 --> 00:02:38,050
We will use the use the passport and the Confirm passport and on the register component we we have this

43
00:02:38,260 --> 00:02:45,340
we have the passport and the confirmed confirmed passports are going to copy this state right and paste

44
00:02:45,330 --> 00:02:45,530
it.

45
00:02:45,530 --> 00:02:46,320
That's it.

46
00:02:46,420 --> 00:02:49,080
Everything else just the same right.

47
00:02:49,490 --> 00:02:52,070
So OK so I'm going to go at the bottom.

48
00:02:52,420 --> 00:02:53,410
Save it.

49
00:02:53,410 --> 00:02:57,130
We do need again the update form and the submit form.

50
00:02:57,210 --> 00:03:00,590
So I'm going to copy and of course modify this up.

51
00:03:00,610 --> 00:03:08,340
I mean a mistake when we copy again there we go update form going to go to reset pass pasted.

52
00:03:08,650 --> 00:03:11,530
And I'm going to call this a reset pass.

53
00:03:11,530 --> 00:03:13,910
Why not reset pass.

54
00:03:13,900 --> 00:03:18,280
Same thing for the other room for the submit form submit form.

55
00:03:18,290 --> 00:03:25,500
Of course we delete everything inside data is met and then console log data is made.

56
00:03:25,570 --> 00:03:26,170
Right.

57
00:03:26,440 --> 00:03:27,290
OK.

58
00:03:28,090 --> 00:03:31,310
So right so we get to go now.

59
00:03:31,780 --> 00:03:35,870
One more thing right here we get the reset passport and the token.

60
00:03:35,890 --> 00:03:37,880
So we need a way to catch the token.

61
00:03:38,020 --> 00:03:44,080
So we could do this inside the component that Mount for example can it open and close.

62
00:03:44,080 --> 00:03:48,940
Now how can we get the token Konst reset token.

63
00:03:49,110 --> 00:03:58,800
And we have access of course to this that prompts that match that Rams programs dot and we call this

64
00:03:58,860 --> 00:03:59,370
token.

65
00:03:59,370 --> 00:04:05,730
So we need to make a reference to whatever we are using the word token matches the word token right

66
00:04:05,730 --> 00:04:06,870
here.

67
00:04:06,870 --> 00:04:11,610
All right so now what you want to do I want to store it inside of the stage so I'm going to go at the

68
00:04:11,610 --> 00:04:12,260
top.

69
00:04:12,420 --> 00:04:17,280
I'm going to say reset and then token.

70
00:04:17,290 --> 00:04:17,800
All right.

71
00:04:18,130 --> 00:04:24,100
So we have a token a form error a form a success and it can add one more.

72
00:04:24,340 --> 00:04:29,640
It's going to be form error and then message.

73
00:04:30,170 --> 00:04:31,980
And this one is going to be empty.

74
00:04:32,050 --> 00:04:33,980
You could do this at the end.

75
00:04:34,390 --> 00:04:34,840
All right.

76
00:04:35,910 --> 00:04:41,040
Now the form success instead of false I'm going to change it to an empty string.

77
00:04:41,830 --> 00:04:45,340
All right let's look at we we're going to get good to go.

78
00:04:45,340 --> 00:04:45,590
All right.

79
00:04:45,610 --> 00:04:49,280
So we pretty much have everything we need now whenever we get the token.

80
00:04:49,300 --> 00:04:55,990
I want to set the new state of this so I'm going to go right here at the bottom and say this state said

81
00:04:56,020 --> 00:05:01,800
stayed open and close and we do reset token we are pretty much using the same.

82
00:05:01,960 --> 00:05:03,970
So it will pass.

83
00:05:04,000 --> 00:05:04,720
Right.

84
00:05:04,900 --> 00:05:10,340
So now let's bring the you know the container for this class name.

85
00:05:10,660 --> 00:05:18,490
It's going to be container so we can center everything container and I'm going to add on page one right

86
00:05:18,490 --> 00:05:20,170
here outside of this.

87
00:05:20,260 --> 00:05:27,290
I'm going to just copy the form and then bring in H2 just like we are doing on the register.

88
00:05:27,370 --> 00:05:30,170
So I get a copy going to close the form.

89
00:05:30,340 --> 00:05:31,380
Right.

90
00:05:31,600 --> 00:05:39,460
And the H-2 will be you know reset password reset password.

91
00:05:39,460 --> 00:05:40,450
All right.

92
00:05:40,690 --> 00:05:47,830
Now if you remember on the register we were using the reset password in the left and to confirm the

93
00:05:47,830 --> 00:05:49,860
password in the left and in the right.

94
00:05:50,050 --> 00:05:51,710
The confirmed password.

95
00:05:51,880 --> 00:05:53,620
So we do have this in the register.

96
00:05:53,620 --> 00:05:56,380
And again it's just to save time I'm going to copy that.

97
00:05:56,380 --> 00:05:59,630
BLOCK Foreign block to verify password.

98
00:05:59,640 --> 00:06:00,120
All right.

99
00:06:00,160 --> 00:06:04,270
Get a copy and paste again.

100
00:06:04,280 --> 00:06:05,620
We are saving a lot of time.

101
00:06:07,590 --> 00:06:07,940
All right.

102
00:06:07,980 --> 00:06:10,410
So enter password and confer password.

103
00:06:10,530 --> 00:06:13,230
We need the buttons and the errors and everything else.

104
00:06:13,260 --> 00:06:23,970
So I'm going to go to register again and copy this and paste it at the bottom right and ugly put the

105
00:06:23,970 --> 00:06:26,270
copy copy the it did as well.

106
00:06:27,130 --> 00:06:29,010
All right I know it looks ugly.

107
00:06:29,020 --> 00:06:30,490
I'm going to format.

108
00:06:31,120 --> 00:06:31,430
All right.

109
00:06:31,510 --> 00:06:34,930
So form our label please check your data.

110
00:06:34,930 --> 00:06:40,630
Now what I want to do if something goes bad I want to show the message I get back from the server.

111
00:06:40,630 --> 00:06:43,420
That's why I'm adding a form error message.

112
00:06:43,420 --> 00:06:50,140
So I'm going to say if something goes back does that state that form error message whatever message

113
00:06:50,140 --> 00:06:51,330
we attach we're going to show it.

114
00:06:51,370 --> 00:06:54,060
If not we're going to show an empty stream.

115
00:06:54,070 --> 00:06:54,910
All right.

116
00:06:54,970 --> 00:06:59,900
Now instead of creating an account it's going to be reset password.

117
00:07:01,060 --> 00:07:01,730
All right.

118
00:07:02,240 --> 00:07:03,390
So it looks good.

119
00:07:03,760 --> 00:07:04,580
Right.

120
00:07:05,080 --> 00:07:06,370
So now what do we need to do.

121
00:07:06,640 --> 00:07:15,160
Whenever we add passport and let's see if this works I'm going to say for a password password again

122
00:07:15,640 --> 00:07:23,500
password 1 2 3 and then password 1 2 3 I'm going to check the cons. remember we are doing a console

123
00:07:23,500 --> 00:07:27,890
log for the data to submit and we get passport 1 2 3.

124
00:07:27,890 --> 00:07:35,150
All right so now we know we get a passport when we need to do whenever we send a request to a magical

125
00:07:35,150 --> 00:07:35,970
place.

126
00:07:36,020 --> 00:07:40,220
We need to send the new password that the user is entering and the token.

127
00:07:40,310 --> 00:07:43,310
And at this point we don't have information about the user.

128
00:07:43,310 --> 00:07:46,290
We don't have a user ID or e-mail or anything.

129
00:07:46,310 --> 00:07:47,890
We just have a token.

130
00:07:47,900 --> 00:07:53,570
So what we do we just go to the database and we find the user by that token they are providing right

131
00:07:53,570 --> 00:07:53,980
here.

132
00:07:53,990 --> 00:07:56,850
That of course comes from the e-mail.

133
00:07:56,870 --> 00:07:57,440
All right.

134
00:07:57,680 --> 00:07:59,340
So let's do that right now.

135
00:07:59,900 --> 00:08:02,920
So I'm going to go to the server to same spot.

136
00:08:02,930 --> 00:08:08,070
Then the you know the reset user right here and I'm going to say app.

137
00:08:08,090 --> 00:08:10,600
I'm going to post open clocks.

138
00:08:10,670 --> 00:08:12,230
Right.

139
00:08:12,520 --> 00:08:12,960
All right.

140
00:08:13,130 --> 00:08:21,500
So there you are Elford this begin to say that it's for slashed API for Slash users forward slash and

141
00:08:21,500 --> 00:08:25,460
then reset password makes sense.

142
00:08:25,810 --> 00:08:26,370
OK.

143
00:08:26,490 --> 00:08:31,730
So again we don't have the middle where the off nor the admin.

144
00:08:31,890 --> 00:08:37,680
So it's request and response we get so what.

145
00:08:37,710 --> 00:08:39,100
What do we need to do right now.

146
00:08:39,100 --> 00:08:42,620
First we need to find the user by that token.

147
00:08:42,700 --> 00:08:43,330
Right.

148
00:08:43,390 --> 00:08:48,400
So I'm going to say user dot and then we do find one same thing we did before.

149
00:08:48,400 --> 00:08:50,440
Find one now.

150
00:08:50,560 --> 00:08:54,650
Next it's going to be the arguments what are we going to be finding.

151
00:08:54,670 --> 00:08:58,370
So we need to find a user by their reset token.

152
00:08:58,510 --> 00:09:00,300
Remember this token.

153
00:09:00,610 --> 00:09:02,300
Now the.

154
00:09:02,350 --> 00:09:03,110
Right here.

155
00:09:03,130 --> 00:09:06,220
Me just copy because I don't remember it's reset token.

156
00:09:06,220 --> 00:09:06,720
All right.

157
00:09:06,940 --> 00:09:11,500
So we're going to say that the reset token should be equal.

158
00:09:11,620 --> 00:09:13,530
Let me copied it right.

159
00:09:13,630 --> 00:09:14,790
There we go.

160
00:09:15,010 --> 00:09:22,270
So that the reset token should be equal to whatever we get from the request that body and that reset

161
00:09:22,270 --> 00:09:24,020
token that the user is passing.

162
00:09:24,190 --> 00:09:24,560
Right.

163
00:09:24,580 --> 00:09:28,180
That one we are getting right here from the programs.

164
00:09:28,240 --> 00:09:32,560
All right of course we're going to be passing this right.

165
00:09:32,790 --> 00:09:33,030
OK.

166
00:09:33,040 --> 00:09:37,270
So I'm going to close it of course I'm going to put a coma right now.

167
00:09:37,410 --> 00:09:38,180
I'm going to say OK.

168
00:09:38,230 --> 00:09:44,950
So we want to find a user that contains this token and we want to find it.

169
00:09:44,950 --> 00:09:46,690
We want to return something.

170
00:09:46,690 --> 00:09:54,630
Only if the date it's not greater than the you know the thing we did right here the end of the day.

171
00:09:54,880 --> 00:09:55,750
All right.

172
00:09:55,750 --> 00:09:58,160
So we can it did this with a greater number.

173
00:09:58,300 --> 00:10:06,520
So I'm going to say that the recent token and then the XP expiration should not be greater.

174
00:10:06,610 --> 00:10:10,840
So GTP greater or equal than today.

175
00:10:11,110 --> 00:10:14,630
Now I'm going to create a viral today of course as rivals doesn't exist.

176
00:10:14,770 --> 00:10:20,940
So I'm going to say var today equals going to bring moment again opening close.

177
00:10:21,130 --> 00:10:23,730
I'm not sure I've imported this at the top.

178
00:10:24,250 --> 00:10:28,830
So it's moments that dot start.

179
00:10:29,170 --> 00:10:30,000
I didn't.

180
00:10:30,000 --> 00:10:31,940
That's why I'm not giving me anything.

181
00:10:32,230 --> 00:10:33,740
So it's going to be start.

182
00:10:33,940 --> 00:10:42,240
Then off and this is when you know when the autocomplete get to gets really useful.

183
00:10:42,290 --> 00:10:47,570
So day and then we get the value and then off.

184
00:10:47,610 --> 00:10:48,120
All right.

185
00:10:48,150 --> 00:10:50,400
So I don't have a moment at the top.

186
00:10:50,400 --> 00:10:55,290
I'm going to import it and I get a copy from here so I'm going to go.

187
00:10:55,320 --> 00:10:58,060
I guess I don't we don't yeah we don't.

188
00:10:58,060 --> 00:10:59,000
There we go.

189
00:10:59,310 --> 00:11:00,480
In to go back to the user.

190
00:11:00,480 --> 00:11:02,420
So for that.

191
00:11:02,780 --> 00:11:05,030
So now we're going to get the value of today.

192
00:11:05,060 --> 00:11:05,490
Right.

193
00:11:05,510 --> 00:11:06,840
The start of today.

194
00:11:06,920 --> 00:11:13,550
Now of course if the start of the day it's greater than the values we have right here nothing is going

195
00:11:13,550 --> 00:11:16,640
to be returned and everything is going to fail.

196
00:11:16,790 --> 00:11:17,250
Right.

197
00:11:17,290 --> 00:11:17,860
OK.

198
00:11:18,260 --> 00:11:25,210
So then we do coma opening close and we return our response on this response we will have an error and

199
00:11:25,220 --> 00:11:31,790
a user right now of course if we have no user it's because the token it's incorrect or it's you know

200
00:11:32,180 --> 00:11:32,910
expired.

201
00:11:33,080 --> 00:11:34,240
It expired.

202
00:11:34,280 --> 00:11:41,720
So you're going to say if no user begin a return our response and let me make this bigger because it's

203
00:11:41,720 --> 00:11:42,850
going to get bigger.

204
00:11:43,310 --> 00:11:52,900
So we're going to send a response a Jason opening close so we send that Gudel success false coma and

205
00:11:52,900 --> 00:11:54,380
again to be attaching a message.

206
00:11:54,380 --> 00:12:05,440
So message and it could say Sorry token bad generate a new one.

207
00:12:05,450 --> 00:12:06,030
All right.

208
00:12:06,200 --> 00:12:07,470
Let's get.

209
00:12:07,490 --> 00:12:09,390
Of course if everything goes OK.

210
00:12:09,560 --> 00:12:11,470
There are a couple of things we need to do.

211
00:12:11,630 --> 00:12:13,310
We need to reset the password.

212
00:12:13,310 --> 00:12:14,240
I'm sorry.

213
00:12:14,360 --> 00:12:18,040
We need to of course reset the password and we need to reset the token.

214
00:12:18,050 --> 00:12:19,390
Back to nothing.

215
00:12:19,520 --> 00:12:19,920
Right.

216
00:12:19,990 --> 00:12:22,090
We could of course also reset the date.

217
00:12:22,100 --> 00:12:23,420
Why not.

218
00:12:23,420 --> 00:12:30,770
So remember that whenever you go to a user right here you go inside user and you make some changes on

219
00:12:30,770 --> 00:12:32,330
the pre save.

220
00:12:32,360 --> 00:12:34,450
Right here we have a presale.

221
00:12:34,460 --> 00:12:39,320
So whenever we do something we save we change something it's going to do the user that we're going to

222
00:12:39,320 --> 00:12:42,060
do that you start that safe ride remember.

223
00:12:42,080 --> 00:12:50,020
So right here we get the modified passport says we are modifying the old password with the new passport

224
00:12:50,170 --> 00:12:52,030
is going to go and enter here.

225
00:12:52,070 --> 00:12:54,780
Of course it's not going to not do anything.

226
00:12:54,780 --> 00:12:55,350
All right.

227
00:12:55,530 --> 00:13:03,100
I just wanted to you know mind we Firfir for this so user dot password.

228
00:13:03,650 --> 00:13:09,500
So the user password entering the user we get back from find one entering the passport and say that

229
00:13:09,500 --> 00:13:11,750
now the passport it's changed.

230
00:13:11,780 --> 00:13:16,410
It's equal to request that body that passport.

231
00:13:17,770 --> 00:13:23,010
I'm going to say OK so now of course we have a new passport and set that token.

232
00:13:23,120 --> 00:13:27,830
So I'm going to go to the reset token and now say it's equal to nothing.

233
00:13:27,830 --> 00:13:29,500
And we could do the same thing with the date.

234
00:13:29,510 --> 00:13:34,540
Why not user dot reset token XP.

235
00:13:34,670 --> 00:13:37,280
It's equal to nothing.

236
00:13:37,340 --> 00:13:38,050
All right.

237
00:13:38,150 --> 00:13:41,900
Now we need to save the save of course the new state of the user.

238
00:13:41,960 --> 00:13:46,140
So I'm going to go to user go to save open and close.

239
00:13:46,250 --> 00:13:54,090
We will get an error and a document if everything goes OK of course or if go goes back goes back.

240
00:13:54,290 --> 00:14:00,370
So if opening close if we do get an hour we can send a different kind of response.

241
00:14:00,770 --> 00:14:09,380
So we turn you know same old same old thing response that Jaison when me do that returned correctly

242
00:14:09,550 --> 00:14:10,920
returned Jaison.

243
00:14:11,180 --> 00:14:16,120
We do success then false and then we send the error back.

244
00:14:16,120 --> 00:14:17,520
All right.

245
00:14:17,650 --> 00:14:29,170
Right of course if everything goes OK we will return our response with the status status of 200.

246
00:14:30,110 --> 00:14:35,050
And Jason now I just added I just realized I'm adding this status.

247
00:14:35,060 --> 00:14:37,380
But you know pretty much the same thing if I do this.

248
00:14:37,610 --> 00:14:40,880
I should be doing something like that like 400 or something like that.

249
00:14:40,910 --> 00:14:42,130
That's OK.

250
00:14:42,140 --> 00:14:42,410
All right.

251
00:14:42,440 --> 00:14:47,420
So success then it's going to be true.

252
00:14:48,200 --> 00:14:49,060
Right.

253
00:14:49,100 --> 00:14:50,410
So let's go over this again.

254
00:14:50,540 --> 00:14:53,900
We're going to get this route and we're going to get the token and the passport.

255
00:14:53,960 --> 00:14:54,770
Right.

256
00:14:54,860 --> 00:15:00,110
So we're going to find a user by the token they have on the you're out and if the token expired we will

257
00:15:00,110 --> 00:15:06,500
not return any users because it will not find one if it's finding a user which is which means that the

258
00:15:06,500 --> 00:15:08,730
token is correct and it is still active.

259
00:15:08,750 --> 00:15:15,860
The token we can go to the user and of course if no user we send the message if not of course we said

260
00:15:15,860 --> 00:15:21,350
the new passport is going to go to that Preece safe inside the model and we're going to reset the token

261
00:15:21,360 --> 00:15:24,960
and the expiration the expiration date of the token.

262
00:15:25,040 --> 00:15:30,060
And then of course we just save it and then it's going to go of course to the presale.

263
00:15:30,590 --> 00:15:31,310
All right.

264
00:15:31,660 --> 00:15:35,840
If everything goes OK we send the success true if not success false.

265
00:15:35,960 --> 00:15:38,560
So now the next thing is going to be testing the route.

