1
00:00:00,970 --> 00:00:08,560
So right here we have a component that returns some h h d m l code than just an H one tack Burguet.

2
00:00:08,620 --> 00:00:13,620
So in fact this again looks like HD mail but it's javascript It's j as sex.

3
00:00:13,750 --> 00:00:17,800
So behind the scenes react is kind of doing something else.

4
00:00:18,010 --> 00:00:24,190
I'm going to delete this deleted and I'm going to call react and react has a method that is going to

5
00:00:24,190 --> 00:00:30,540
be called create element and this create element of course is going to create an element.

6
00:00:30,690 --> 00:00:32,460
Is going to take a few arguments.

7
00:00:32,530 --> 00:00:38,290
The first one is going to be which element we want to create can open and close and I'm going to say

8
00:00:38,360 --> 00:00:39,270
H-1.

9
00:00:39,460 --> 00:00:44,120
Now if I save it and go to the browser of course nothing is going to happen right here.

10
00:00:44,230 --> 00:00:51,130
But if I go to elements to the body and right here inside the body inside the route we're going to have

11
00:00:51,430 --> 00:00:52,530
our elements.

12
00:00:52,660 --> 00:00:58,150
So this create element it's creating it and appending it to the body to the root.

13
00:00:58,390 --> 00:01:03,550
So again this screed element is going to take a few arguments we can pass some options.

14
00:01:03,550 --> 00:01:06,430
So the second argument is going to be the options.

15
00:01:06,460 --> 00:01:07,270
So if we pass.

16
00:01:07,280 --> 00:01:10,540
No of course you're not going to put any options.

17
00:01:10,630 --> 00:01:15,850
But what we can do we can pass an object and this object is going to take some arguments.

18
00:01:15,850 --> 00:01:19,300
Now for example let's say that I want to add a class to that.

19
00:01:19,300 --> 00:01:26,350
H-1 are going to be using class and then name just like this class name and this class name is going

20
00:01:26,350 --> 00:01:28,810
to be equal to the class.

21
00:01:28,810 --> 00:01:35,860
So if I save it and go to the browser you're going to get one class of title and something weird is

22
00:01:35,860 --> 00:01:36,390
going on.

23
00:01:36,400 --> 00:01:42,770
Notice that it's put in class but here where you're using class name you get to see why in a minute.

24
00:01:42,850 --> 00:01:44,340
Let me make this bigger.

25
00:01:44,740 --> 00:01:45,290
So OK.

26
00:01:45,310 --> 00:01:51,820
The second thing is going to be the arguments that we're going to put as an attribute to that H1 tag.

27
00:01:52,030 --> 00:01:53,660
You can put whatever you want.

28
00:01:54,130 --> 00:01:54,490
OK.

29
00:01:54,520 --> 00:01:59,200
So the third argument is what's going to be inside the elements.

30
00:01:59,200 --> 00:02:02,690
So we were use in Hello world.

31
00:02:02,710 --> 00:02:04,710
So I'm going to say hello world.

32
00:02:04,990 --> 00:02:07,970
Now if I go to the application we get the whole world.

33
00:02:08,110 --> 00:02:13,030
So the third argument is going to be whatever we have inside the H-1 tag.

34
00:02:13,030 --> 00:02:16,150
Now what happens if I want to put dev.

35
00:02:16,240 --> 00:02:20,350
I want to add an element inside the contents of H-1.

36
00:02:20,560 --> 00:02:23,030
Well we cannot do we cannot do this.

37
00:02:23,050 --> 00:02:28,010
We cannot just say something like this if I do that.

38
00:02:28,300 --> 00:02:29,620
Hello world.

39
00:02:29,700 --> 00:02:30,890
It's not going to worked.

40
00:02:33,080 --> 00:02:37,190
So it's parsing everything and converting everything to text.

41
00:02:37,190 --> 00:02:43,640
So if you want to pass a real elements what we do we just concatenated with the same method I'm going

42
00:02:43,640 --> 00:02:53,590
to go right here and say react react darte create element and I'm going to create a div just a div.

43
00:02:53,790 --> 00:02:55,020
Sorry.

44
00:02:56,020 --> 00:02:59,230
And if we go right here or go to the root.

45
00:02:59,290 --> 00:03:01,580
Oh I made a mistake.

46
00:03:01,610 --> 00:03:04,960
It's not kind react it's going to be react.

47
00:03:04,970 --> 00:03:05,850
There we go.

48
00:03:06,290 --> 00:03:12,800
So we reloaded again of course we get nothing but inside the H-1 tag we have a Deppe So we are concatenating

49
00:03:12,860 --> 00:03:16,510
the same method inside the same method.

50
00:03:16,730 --> 00:03:24,380
So of course this is not really a very fun way to create some major D.M. That's why we use the On the

51
00:03:24,380 --> 00:03:26,580
one it's humanly readable.

52
00:03:26,600 --> 00:03:33,080
So I'm going to go back to the other one whole overreact but know that behind the scenes react is kind

53
00:03:33,080 --> 00:03:36,110
of a doing that re-act create element.

54
00:03:36,550 --> 00:03:38,890
So OK let's keep moving forward.

55
00:03:39,350 --> 00:03:44,980
OK so now we need to talk about about some gotchas that we have with this GSX.

56
00:03:45,170 --> 00:03:47,230
So right here are a component.

57
00:03:47,240 --> 00:03:50,420
It's just returning a single statement.

58
00:03:50,420 --> 00:03:53,330
So whenever we return a single thing it's going to work.

59
00:03:53,330 --> 00:03:54,950
We do it like this and works.

60
00:03:55,130 --> 00:04:01,540
But what happens if I want to add a div that say whatever hey I can reload the application.

61
00:04:01,640 --> 00:04:07,660
And it's of course failed to compile whenever we turn something inside of nothing we can.

62
00:04:07,670 --> 00:04:14,450
We need to pass only a single argument so to fix this I'm going to go round here put everything inside

63
00:04:14,450 --> 00:04:15,190
this.

64
00:04:15,210 --> 00:04:19,060
This the C going to go right here and just paste it.

65
00:04:19,150 --> 00:04:19,940
OK.

66
00:04:20,480 --> 00:04:25,820
Now if I save it and reload the application again we have failed to compile.

67
00:04:25,820 --> 00:04:27,300
It's not going to work.

68
00:04:27,320 --> 00:04:33,080
So he's going to say adjusting GSX elements must be wrapped in an inclosing tack.

69
00:04:33,530 --> 00:04:39,860
Kind of confusing but makes sense whenever we pass something inside we turn whether we have an inside

70
00:04:40,240 --> 00:04:41,270
of a parentheses.

71
00:04:41,390 --> 00:04:42,950
We cannot do it like this.

72
00:04:42,950 --> 00:04:45,860
We need to pass only a single argument.

73
00:04:46,280 --> 00:04:53,190
So we going to put everything inside an element it's going to copy and put it inside diff tag.

74
00:04:53,450 --> 00:04:59,790
So now instead of saying a 10 instead of returning to different elements you're returning one.

75
00:04:59,810 --> 00:05:01,560
And inside we have the children.

76
00:05:01,580 --> 00:05:07,220
So if I save this and go right here to the application we get hello react and hey.

77
00:05:07,250 --> 00:05:08,420
So it's working.

78
00:05:08,420 --> 00:05:15,110
Remember that you need only you need one in closing elements and then inside you can put whatever you

79
00:05:15,110 --> 00:05:15,440
want.

80
00:05:15,440 --> 00:05:17,880
You can have a thousand dips right here.

81
00:05:17,900 --> 00:05:21,710
It doesn't matter as long as you put them inside of a div.

82
00:05:21,770 --> 00:05:23,050
It's going to work.

83
00:05:23,510 --> 00:05:29,000
So the thing that we need to talk about is that the class name and class.

84
00:05:29,030 --> 00:05:36,380
So if I go right here and add a class to the elements it's going to say new elements something like

85
00:05:36,380 --> 00:05:38,720
this going to save it.

86
00:05:38,720 --> 00:05:42,680
And of course it's not it's going to work but it's going to give you an error message.

87
00:05:42,750 --> 00:05:45,570
It says embodied Dom property class.

88
00:05:45,710 --> 00:05:47,500
Did you mean class name.

89
00:05:47,630 --> 00:05:51,810
Well again all the error messages inside re-act are pretty clear.

90
00:05:52,010 --> 00:05:58,220
So class this keyboard does class remember that we are using javascript right here.

91
00:05:58,220 --> 00:06:01,190
This code is javascript not h tim L.

92
00:06:01,190 --> 00:06:04,660
So this class is a reserved word.

93
00:06:04,700 --> 00:06:09,850
We're going to be talking more about classes in the next few lectures but we cannot use class.

94
00:06:09,890 --> 00:06:12,090
That's why we use class name.

95
00:06:12,200 --> 00:06:15,690
So class name is going to be equal to class.

96
00:06:15,740 --> 00:06:23,030
So whenever this GSX gets compiled by re-act is going to be converted converted to class.

97
00:06:23,030 --> 00:06:29,780
So if I reload the page and go to elements we get the class inside the new elements right here.

98
00:06:29,780 --> 00:06:31,000
And of course we are.

99
00:06:31,000 --> 00:06:34,670
We are not getting an error message so everything works.

100
00:06:34,670 --> 00:06:41,160
I know that this is kind of a pain in the butt because now we need to change that class to class name.

101
00:06:41,210 --> 00:06:43,930
We are not going to use class inside OSX.

102
00:06:43,940 --> 00:06:45,290
So again it's kind of a pain.

103
00:06:45,320 --> 00:06:47,960
But but you're going to get used to it don't worry.

104
00:06:47,990 --> 00:06:50,090
OK let's go to the next section.

