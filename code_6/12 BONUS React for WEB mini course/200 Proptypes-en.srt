1
00:00:00,820 --> 00:00:01,270
Right.

2
00:00:01,270 --> 00:00:03,880
So now we're going to be talking about Prop types.

3
00:00:03,880 --> 00:00:09,950
So prop times prop types was a built in ability of react for type checking.

4
00:00:10,060 --> 00:00:14,530
It was included by default on earlier versions of react.

5
00:00:14,530 --> 00:00:19,900
But now just like transition's group we need to install the add on and we're going to be using the same

6
00:00:19,900 --> 00:00:21,490
templates and transitions.

7
00:00:21,610 --> 00:00:27,250
If you didn't download it just download the main template and begin to be adding a route right now.

8
00:00:27,250 --> 00:00:33,170
So before I start I start explaining to you what what to do with properties what we can do.

9
00:00:33,290 --> 00:00:38,380
And if you express that you might never use prompt types in your life and your re-act application is

10
00:00:38,380 --> 00:00:40,000
going to work just fine.

11
00:00:40,030 --> 00:00:44,430
No it could I just could have skipped this prompt types from the course.

12
00:00:44,620 --> 00:00:50,140
But you know in the future you might stumble with prop types and you're not going to know what to do

13
00:00:50,140 --> 00:00:51,370
with prompt types.

14
00:00:51,370 --> 00:00:53,970
So again if you want you can skip it.

15
00:00:54,100 --> 00:01:00,170
Or maybe you can just stay and at least know what prompts what Prop types is all about.

16
00:01:00,250 --> 00:01:01,060
OK that's good.

17
00:01:01,060 --> 00:01:03,250
So let's start with Propp types.

18
00:01:03,250 --> 00:01:06,490
First we need to create around to use this.

19
00:01:06,490 --> 00:01:10,270
So I'm going to create a class based component and a child component.

20
00:01:10,270 --> 00:01:12,910
So first I'm going to go right here to components.

21
00:01:12,940 --> 00:01:17,890
I'm going to create a new file that is going to be called user digests and then I'm going to create

22
00:01:17,890 --> 00:01:19,200
a new file again.

23
00:01:19,310 --> 00:01:25,960
It is going to be called user underscore template make sense resemble.

24
00:01:26,050 --> 00:01:30,150
So inside the user it's going to be a class based component.

25
00:01:30,310 --> 00:01:38,560
And just for you to know I'm using B as code and I install I'm using a template or here is going to

26
00:01:38,560 --> 00:01:46,910
be called reactive Yes code snippets and right here for example if I do re-act which are just the letter

27
00:01:46,960 --> 00:01:55,260
are re-act class component RCC is going to create a class based component for you.

28
00:01:55,410 --> 00:01:57,190
It's not going to be using this right now.

29
00:01:57,190 --> 00:02:01,060
You will need only to install it or you can just create a class based component.

30
00:02:01,060 --> 00:02:02,100
It doesn't matter.

31
00:02:02,140 --> 00:02:08,680
So I'm going to say user and of course this one is going to be called user and this one this class based

32
00:02:08,680 --> 00:02:14,630
component is going to have a state of something going to be adding something inside here in a minute.

33
00:02:14,950 --> 00:02:20,400
And of course this one is going to be called is going to be calling child component.

34
00:02:20,500 --> 00:02:25,690
From now on they're going to do anything just going to say component whatever and are going to add the

35
00:02:25,690 --> 00:02:27,370
route of this.

36
00:02:27,370 --> 00:02:30,580
So first I need to import I'm going to say import.

37
00:02:30,840 --> 00:02:38,600
And it's going to be called user from and then dot forward slash components for Slash and user.

38
00:02:39,130 --> 00:02:46,840
And again to create the route copy the Prete the previous one page then at the bottom say user and right

39
00:02:46,840 --> 00:02:47,980
here for the name.

40
00:02:47,980 --> 00:02:54,550
I'm going to say Propp types and then user are going to create the route.

41
00:02:55,340 --> 00:03:00,840
So can it be user and then prob time user.

42
00:03:00,870 --> 00:03:01,500
Oh sorry.

43
00:03:01,520 --> 00:03:05,140
It's going to be just user OK.

44
00:03:05,260 --> 00:03:07,330
Salmiya below the page.

45
00:03:07,340 --> 00:03:10,750
You know we get to user and we get components so it's working.

46
00:03:10,750 --> 00:03:11,470
That's good.

47
00:03:11,740 --> 00:03:14,900
So now this one you're going to create a component right here.

48
00:03:15,040 --> 00:03:16,660
So I got to do it right now.

49
00:03:16,840 --> 00:03:19,890
The component was called user template.

50
00:03:19,960 --> 00:03:22,090
So I'm just going to call it that way.

51
00:03:22,090 --> 00:03:26,150
It's going to be called user and then template.

52
00:03:26,350 --> 00:03:27,740
And then just close it.

53
00:03:28,130 --> 00:03:28,410
OK.

54
00:03:28,450 --> 00:03:35,620
So now we need to create a component first then go to import it is going to be called user template

55
00:03:36,220 --> 00:03:38,280
and then from.

56
00:03:38,500 --> 00:03:41,490
And we didn't have it to do it right here.

57
00:03:42,070 --> 00:03:46,100
So it's going to be DOD force slash component.

58
00:03:46,210 --> 00:03:47,980
Dot dot for Slash.

59
00:03:48,250 --> 00:03:51,340
And it's going to be called user template.

60
00:03:51,820 --> 00:03:54,560
So this user template it's not doing anything.

61
00:03:54,610 --> 00:04:00,680
And again with the with the code snippets we can do re-act stateless components and it's going to create

62
00:04:00,730 --> 00:04:05,310
for us real simple user template.

63
00:04:06,240 --> 00:04:06,740
Okay.

64
00:04:06,760 --> 00:04:14,960
And then just user template and then template whatever OK and we are getting templates so this is working.

65
00:04:14,980 --> 00:04:22,270
We are just loading this user component this class component and calling that the user template component.

66
00:04:22,300 --> 00:04:28,920
So with prop types what we need to do what we can do with Prop types is just type checking.

67
00:04:28,930 --> 00:04:33,100
We can type we can check if we have the correct information.

68
00:04:33,250 --> 00:04:35,280
I'm going to give you a practical example of course.

69
00:04:35,350 --> 00:04:38,880
But before using prop types we need to install it.

70
00:04:38,920 --> 00:04:46,750
So I'm going to go to the terminal right here going to kill it and I'm going to do and PM install and

71
00:04:46,780 --> 00:04:50,200
it's going to be Propp heaven or score

72
00:04:52,790 --> 00:04:54,600
Ivan types prop types.

73
00:04:54,600 --> 00:04:57,010
Let me make this bigger crop tops.

74
00:04:57,040 --> 00:04:59,620
And then of course mine is mine is safe.

75
00:04:59,620 --> 00:05:00,870
It's going to take a second.

76
00:05:00,880 --> 00:05:02,130
It's not that big.

77
00:05:05,180 --> 00:05:06,660
Would be almost done.

78
00:05:06,790 --> 00:05:08,530
OK.

79
00:05:09,310 --> 00:05:11,590
It's taking longer than expected.

80
00:05:12,010 --> 00:05:15,740
So I'm going to say NPM start to start the application again.

81
00:05:16,150 --> 00:05:17,870
I'm going to go back.

82
00:05:18,400 --> 00:05:21,050
You know it's a it's still loading.

83
00:05:21,280 --> 00:05:23,560
So everything goes ok.

84
00:05:23,590 --> 00:05:24,460
Works OK.

85
00:05:24,700 --> 00:05:32,580
So now this component is user component is going to have a state with some fields inside and the going

86
00:05:32,580 --> 00:05:35,030
to be passing as props.

87
00:05:35,050 --> 00:05:38,830
The state of this component to the user template component.

88
00:05:38,970 --> 00:05:44,030
So going to create some dummy data going to say name it is going to be called to Francis.

89
00:05:44,230 --> 00:05:49,710
And you know last name of course it's going to be Jones.

90
00:05:50,380 --> 00:05:55,280
And for now just the age and the age he's going to be 25.

91
00:05:55,330 --> 00:05:55,970
That's good.

92
00:05:56,080 --> 00:06:02,560
So I just have some dumb user data and I'm going to be passing all of the state to the child component

93
00:06:03,100 --> 00:06:09,030
so I don't know if I mentioned this but if we want to past the whole state of this component to the

94
00:06:09,280 --> 00:06:16,690
components we can do dot dot dot this dot state that is going to be passing everything all state as

95
00:06:16,690 --> 00:06:18,130
props.

96
00:06:18,390 --> 00:06:21,820
So now we need to import the Propp types going to go right here.

97
00:06:21,830 --> 00:06:30,250
The bottom is going to say inport and is going to be prob. types Propp types and then from and then

98
00:06:30,490 --> 00:06:36,330
promp types drop on the core and Piven and then types.

99
00:06:36,340 --> 00:06:38,100
And am I making a mistake.

100
00:06:38,140 --> 00:06:39,970
It should be on the other components.

101
00:06:39,970 --> 00:06:44,370
I'm going to copy it and put it inside user template.

102
00:06:44,920 --> 00:06:50,060
So now OK this component is passing the state to the char component.

103
00:06:50,230 --> 00:06:57,200
In theory if I do props right here and do console log and then the probs I should be getting the prompts.

104
00:06:57,220 --> 00:07:03,150
So I'm going to say console log and then prop's just like that.

105
00:07:03,500 --> 00:07:06,310
And you know we get Francis last name and age.

106
00:07:06,330 --> 00:07:06,680
That's.

107
00:07:06,760 --> 00:07:07,410
You know it's working.

108
00:07:07,410 --> 00:07:09,150
We know how to do this.

109
00:07:09,160 --> 00:07:15,780
So now this component is going to be using Propp types to check the information we get and props.

110
00:07:15,970 --> 00:07:21,460
So to use that just after the component the actual components we need to make a reference to the name

111
00:07:21,460 --> 00:07:22,250
of the component.

112
00:07:22,270 --> 00:07:23,940
In this case is user template.

113
00:07:24,160 --> 00:07:26,080
And then we say Propp type.

114
00:07:26,320 --> 00:07:30,020
OK Propp types on the like this right.

115
00:07:30,200 --> 00:07:31,430
It's one.

116
00:07:31,480 --> 00:07:31,840
OK.

117
00:07:31,900 --> 00:07:32,580
Prop types

118
00:07:35,330 --> 00:07:39,620
just like that it's going to be equal and it's going to be equal to an object.

119
00:07:39,690 --> 00:07:41,940
Now right here we're going to be checking things.

120
00:07:42,020 --> 00:07:48,410
For example this prop's is going to be receiving name OK and the name is going to be a string and it's

121
00:07:48,410 --> 00:07:49,580
going to be Frances.

122
00:07:49,700 --> 00:07:56,650
So I'm going to make reference to that name promp and I'm going to invoke Propp types right here and

123
00:07:56,650 --> 00:08:01,330
then we're going to say Dot and this one is going to be equal to string.

124
00:08:01,340 --> 00:08:04,470
Now if we reload the page nothing happens.

125
00:08:04,550 --> 00:08:09,440
But if I go back to user and grab this Francis and change it to a number.

126
00:08:09,440 --> 00:08:12,710
So this name it's not a string anymore it's going to be a boolean.

127
00:08:12,800 --> 00:08:18,320
And if we go right here to the browser you're getting an error message is going to say fail Propp type

128
00:08:18,460 --> 00:08:24,250
invalid Propp type name of type number supplied to user template expected string.

129
00:08:24,260 --> 00:08:29,870
And this is the keyboard expected string but we're getting we are we are getting a number.

130
00:08:30,080 --> 00:08:34,200
So that is a problem that that's how we can use Propp types.

131
00:08:34,250 --> 00:08:40,410
We use it to check to check that we're receiving the correct information inside prompts.

132
00:08:40,460 --> 00:08:42,000
That's the whole idea.

133
00:08:42,140 --> 00:08:43,880
The application is still going to work.

134
00:08:43,880 --> 00:08:47,030
Everything is going to work just fine if you don't have any other errors.

135
00:08:47,030 --> 00:08:49,700
The only thing that does it's going to give you a warning.

136
00:08:49,910 --> 00:08:55,220
And why use this maybe in the future you make an application and someone else is going to grab that

137
00:08:55,220 --> 00:08:58,970
application and do some work on top.

138
00:08:59,300 --> 00:09:05,390
So maybe you have some information that it's kind of a case sensitive and should not be change or you

139
00:09:05,390 --> 00:09:10,940
need to make sure that that information has the correct type.

140
00:09:10,940 --> 00:09:13,080
So we all use prop types.

141
00:09:13,430 --> 00:09:14,080
OK let's.

142
00:09:14,120 --> 00:09:19,670
Let's check the other ones because we have a lot of information we could have functions we could have

143
00:09:19,670 --> 00:09:24,070
a race we could have objects and of course we have a way to check it.

144
00:09:24,080 --> 00:09:26,860
So the first one is going to be a string of just going to change it back.

145
00:09:27,080 --> 00:09:30,830
If I reload the application you know we are not getting any warnings.

146
00:09:31,040 --> 00:09:33,690
The next one is going to be again just a string.

147
00:09:33,800 --> 00:09:40,830
So just to complete the example going to the coma and I'm going to say last name and same thing prob

148
00:09:40,850 --> 00:09:46,430
types dot string and you know it's going to pass.

149
00:09:46,560 --> 00:09:48,210
Got the next one.

150
00:09:48,410 --> 00:09:50,840
It's going to be the age right here.

151
00:09:50,840 --> 00:09:53,830
The age so the age is a number it's going to different.

152
00:09:53,990 --> 00:09:54,900
So we're going to do.

153
00:09:54,930 --> 00:10:02,390
Koma are going to say age is going to be equal to prompt Times Dot and it's going to be a number.

154
00:10:02,810 --> 00:10:05,530
So if we check it it passes.

155
00:10:05,570 --> 00:10:08,490
If I change it to whatever.

156
00:10:08,540 --> 00:10:10,040
No just a string.

157
00:10:11,610 --> 00:10:12,760
It's not going to pass.

158
00:10:12,780 --> 00:10:13,870
It's going to give you a warning.

159
00:10:13,950 --> 00:10:14,970
Let's get.

160
00:10:15,000 --> 00:10:17,240
So there's a lot of things that we need to check.

161
00:10:17,460 --> 00:10:20,150
So we need to add more information right here.

162
00:10:20,160 --> 00:10:24,920
For example we can check a race are going to say hobbies just like that.

163
00:10:24,990 --> 00:10:31,330
And then of course an array and hobbies are going to be rond than coma and jump.

164
00:10:31,380 --> 00:10:35,130
Let's get to check it going to go back to user template.

165
00:10:35,370 --> 00:10:39,040
And of course we need to we need to make to make reference to that.

166
00:10:39,120 --> 00:10:45,580
Going to be hobby's is going to be equal to prop types just like that and then dot.

167
00:10:45,720 --> 00:10:49,550
And how do we check if it's an array of simple array.

168
00:10:49,550 --> 00:10:51,960
If we reloaded it passes good.

169
00:10:52,040 --> 00:10:53,530
So it's working.

170
00:10:53,550 --> 00:10:55,200
So what else what else we can check.

171
00:10:55,320 --> 00:11:00,080
We can check booleans are going to say I don't know Spanish than Koehn.

172
00:11:00,120 --> 00:11:01,270
And it's going to be false.

173
00:11:01,270 --> 00:11:06,660
So Francis knows how to speak English only not a spanish.

174
00:11:06,810 --> 00:11:17,220
So in a coma and are going to say in Spanish Spanish or go and again is going to be Propp types dot

175
00:11:17,490 --> 00:11:24,060
and of course to check for booleans is going to be Boole b o l real simple.

176
00:11:24,120 --> 00:11:30,180
And it seems like even a mistake it's capital P reload.

177
00:11:30,210 --> 00:11:36,900
You know we are not getting any errors and warnings it's passing what else we could use a function going

178
00:11:37,020 --> 00:11:39,590
to do a coma and going to write a function.

179
00:11:39,600 --> 00:11:45,780
It's going to be message something like that whatever it's going to be you know function.

180
00:11:45,780 --> 00:11:50,610
So we're going to create a function and then this function is going to a log.

181
00:11:50,790 --> 00:11:52,920
Hey whatever.

182
00:11:52,920 --> 00:11:55,100
So this one is going to be passed as a function.

183
00:11:55,170 --> 00:11:57,400
How do we check if we have a function.

184
00:11:57,570 --> 00:11:57,850
OK.

185
00:11:57,870 --> 00:12:00,980
First we need to make a reference to that to that function.

186
00:12:00,990 --> 00:12:06,150
That's going to be called message and this function is going to be Propp types.

187
00:12:06,150 --> 00:12:15,830
Again prop types dot and check if it's a function we check we check func and reload the page it passes.

188
00:12:15,840 --> 00:12:16,730
That's good.

189
00:12:16,980 --> 00:12:18,900
So what else we can check.

190
00:12:18,920 --> 00:12:21,340
Objects of course to do coma.

191
00:12:21,510 --> 00:12:28,980
And I get into car that can and are going to be adding an object and it's going to be brand of four

192
00:12:30,210 --> 00:12:35,900
and then coma and the model is going to be of focus just like that.

193
00:12:36,100 --> 00:12:42,880
So right here inside the car we have an object to check that we can do car of course and again prop

194
00:12:42,880 --> 00:12:49,290
types or go prop types.

195
00:12:49,330 --> 00:12:53,690
Doug Dant and to check if it's an object we can say object.

196
00:12:54,060 --> 00:12:57,760
And if we reloaded it passes let's get know.

197
00:12:57,980 --> 00:13:03,000
There's a lot of more things that we can do with Prop types more complicated things.

198
00:13:03,040 --> 00:13:04,800
So let's get a possible deal.

199
00:13:04,840 --> 00:13:07,260
And we're going to be checking the other ones.

200
00:13:08,080 --> 00:13:14,130
OK so we have a few more we can we can use we can make use of one off.

201
00:13:14,240 --> 00:13:15,990
I'm going to I'm going to write and run here.

202
00:13:16,000 --> 00:13:21,810
Just going to delete the name the prompt type strings because we cannot check for one thing twice.

203
00:13:21,840 --> 00:13:24,910
I cannot do we cannot do name and then check the name again.

204
00:13:24,960 --> 00:13:26,290
We can get an error message.

205
00:13:26,500 --> 00:13:32,110
So right here inside name what we can do we can make use of Propp types are going to give you a practical

206
00:13:32,110 --> 00:13:39,400
example because it's kind of weird and it's going to be one off and one off it's going to it's going

207
00:13:39,400 --> 00:13:42,530
to make is going to use an array.

208
00:13:42,730 --> 00:13:44,460
So pretty much what went off.

209
00:13:44,470 --> 00:13:49,860
We can check if the this about the value of name Francis or something else.

210
00:13:49,990 --> 00:13:55,910
So if I say Francis is going to be is going to pass because we have Francis as name.

211
00:13:55,930 --> 00:14:03,070
And if we have Steve for example is going to pass because we have Francis and if I change it to Steve

212
00:14:03,130 --> 00:14:05,620
it's still going to pass because we have Steve.

213
00:14:05,770 --> 00:14:10,370
But if we have something else different than Frances or Steve it's not going to pass.

214
00:14:10,510 --> 00:14:11,930
So right here it's passing.

215
00:14:12,010 --> 00:14:17,710
So if I do Jane some like that and reload the application it's not going to pass.

216
00:14:17,710 --> 00:14:19,700
It's going to give you a warning for this.

217
00:14:19,940 --> 00:14:20,390
OK.

218
00:14:20,470 --> 00:14:21,310
Let's get.

219
00:14:21,310 --> 00:14:22,930
So there's one more thing that we can do.

220
00:14:23,020 --> 00:14:27,720
We can do we can check for several things inside the same property.

221
00:14:27,880 --> 00:14:30,990
So right here I'm going to make use of prop types again.

222
00:14:31,030 --> 00:14:36,660
It's going to be Propp types Dot and I are going to be using one off type.

223
00:14:36,660 --> 00:14:42,700
So with one of type we can check for several things is going to be is going to be using an array just

224
00:14:42,700 --> 00:14:44,260
like here it's just an array.

225
00:14:44,440 --> 00:14:46,570
And we can check for four different things.

226
00:14:46,570 --> 00:14:51,360
For example I want to check if this is a prop types and is a string.

227
00:14:51,490 --> 00:14:58,060
So if a string is going to pass if I reload the application it passes if it's a number I'm going to

228
00:14:58,060 --> 00:15:06,890
say Propp types and then dot and number and if I write a number inside user is going to pass anyways

229
00:15:06,920 --> 00:15:08,730
because it is allowed.

230
00:15:08,990 --> 00:15:10,450
No no warning.

231
00:15:10,700 --> 00:15:19,610
And of course we can use something more more complicated like prop types and one off.

232
00:15:19,610 --> 00:15:22,120
And again you know same example before.

233
00:15:22,240 --> 00:15:30,120
Even Ray and it's going to be Francis or Steve just like that they're going to change it to I don't

234
00:15:30,250 --> 00:15:36,640
know Francis or the application it passes.

235
00:15:36,920 --> 00:15:43,700
And if I change it to Jane of course it's not going to pass because we have this but since Prop type

236
00:15:43,760 --> 00:15:46,900
String it's valid is it still going to pass.

237
00:15:46,910 --> 00:15:48,110
You know we're not getting an answer.

238
00:15:48,110 --> 00:15:54,940
Our message if one of this matches the criteria of what we are getting it's going to pass around.

239
00:15:54,980 --> 00:15:56,070
Remember that.

240
00:15:56,370 --> 00:15:56,650
OK.

241
00:15:56,660 --> 00:16:03,340
So we can we have more more more things we can check if you're getting on a rate of something.

242
00:16:03,500 --> 00:16:06,530
I'm going to go to hobbies I'm going to just delete this.

243
00:16:06,580 --> 00:16:15,740
I'm going to say Propp types that dot and Auray off so Araik off is going to be checking what with what

244
00:16:15,800 --> 00:16:18,900
kind of information you have inside this array.

245
00:16:19,010 --> 00:16:27,560
So we have strings we can be checking if you have strings going to say Propp types dot and a string.

246
00:16:27,590 --> 00:16:30,320
And of course it's going to pass because we have strings.

247
00:16:30,320 --> 00:16:37,790
But if I change it to number for example or boolean whenever it's going to put numbers is not going

248
00:16:37,790 --> 00:16:40,970
to pass because we are expecting a string.

249
00:16:40,990 --> 00:16:46,580
You know there's a lot of things we can do if we can check if something it's required going to go wrong

250
00:16:46,580 --> 00:16:46,950
here.

251
00:16:46,970 --> 00:16:56,750
But on the bottom we're going to say Mother and Mother and then prop types dot and then required just

252
00:16:56,750 --> 00:16:57,230
like that.

253
00:16:57,270 --> 00:16:58,110
Oh sorry.

254
00:16:58,380 --> 00:17:00,080
It's required.

255
00:17:00,770 --> 00:17:06,380
So this one is going to be checking that we have the motter right here mother is in Balad must be a

256
00:17:06,380 --> 00:17:09,360
function of the properties but received on the find.

257
00:17:09,450 --> 00:17:14,220
This means that motter mother it doesn't exist and it's required.

258
00:17:14,340 --> 00:17:14,720
OK.

259
00:17:14,930 --> 00:17:16,280
So that's good right here.

260
00:17:16,300 --> 00:17:22,160
I'm getting something different from Hovis is giving me the error message because you're expecting a

261
00:17:22,160 --> 00:17:22,850
string.

262
00:17:23,030 --> 00:17:29,200
So I'm going to change it to string and begin to get the message from Mother.

263
00:17:29,210 --> 00:17:37,210
Now if I do coma and say Mother and then I don't know Martha something like that.

264
00:17:37,310 --> 00:17:38,820
It should be.

265
00:17:39,170 --> 00:17:39,800
Oh I'm sorry.

266
00:17:39,830 --> 00:17:41,340
I made a mistake.

267
00:17:41,800 --> 00:17:43,580
I'm going to say I'm going to delete this.

268
00:17:43,580 --> 00:17:49,920
I'm going to mistake I just omitted to do something right here inside monitor a mother.

269
00:17:49,930 --> 00:17:54,120
We are we are just checking the prop types and we want to check if it's string.

270
00:17:54,260 --> 00:17:56,220
And this one is going to be required.

271
00:17:56,240 --> 00:17:59,950
We always need to do it at the end of something.

272
00:17:59,960 --> 00:18:02,060
So first it's going to load.

273
00:18:02,060 --> 00:18:03,230
You know it's going to pass.

274
00:18:03,230 --> 00:18:03,860
Sorry for that.

275
00:18:03,860 --> 00:18:05,430
Forgot to put this.

276
00:18:05,700 --> 00:18:07,100
There there's one more thing we can do.

277
00:18:07,100 --> 00:18:08,830
It's a little bit complicated.

278
00:18:08,870 --> 00:18:10,700
So we're going to go to the next video.

279
00:18:10,700 --> 00:18:14,900
It's going to be really short and we're going to be moving forward with the next topic.

