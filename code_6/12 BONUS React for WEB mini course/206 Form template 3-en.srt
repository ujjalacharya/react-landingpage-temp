1
00:00:00,480 --> 00:00:03,680
OK so let's finish this this first.

2
00:00:03,900 --> 00:00:09,700
So here we have the new stage in this new state equals to all of the inputs.

3
00:00:09,700 --> 00:00:16,880
No the whole state now and you might be thinking why updating the whole state.

4
00:00:17,160 --> 00:00:19,470
So right here we go to user the top.

5
00:00:19,470 --> 00:00:21,130
We have one key.

6
00:00:21,150 --> 00:00:23,100
It's going to be equal to form data.

7
00:00:23,310 --> 00:00:28,500
And inside we have all the information about the inputs and what we are updating what we're going to

8
00:00:28,500 --> 00:00:29,030
be at.

9
00:00:29,030 --> 00:00:31,890
Dating is going to be all the information.

10
00:00:31,980 --> 00:00:37,160
Again it's one key one value which is calls form data.

11
00:00:37,320 --> 00:00:44,400
The thing is that inside form fields we cannot access you stayed that form data or that name and then

12
00:00:44,400 --> 00:00:50,240
just update one value inside this because the application will not take it.

13
00:00:50,250 --> 00:00:51,890
You know we not render.

14
00:00:52,050 --> 00:00:55,430
So what we need to do is we need to pass the whole new state.

15
00:00:55,440 --> 00:01:02,400
You know the value of this form data key but to pass that we need to pass all if not it's just going

16
00:01:02,400 --> 00:01:08,280
to be updating the value and form data is going to be equal to value and not name and last name and

17
00:01:08,280 --> 00:01:09,070
everything else.

18
00:01:09,240 --> 00:01:12,220
So that's why we need to pass the whole object.

19
00:01:12,240 --> 00:01:16,800
They're going to go back to form fields and we know that whenever we type something you're getting the

20
00:01:16,800 --> 00:01:17,450
new state.

21
00:01:17,460 --> 00:01:21,100
In this case if I type an h an H.

22
00:01:21,390 --> 00:01:24,560
Right here we get the name and the values going to be h.

23
00:01:24,640 --> 00:01:24,950
OK.

24
00:01:24,960 --> 00:01:31,200
So we have the new state so we need to pass this new state to the user component so we can update the

25
00:01:31,200 --> 00:01:32,480
state right here.

26
00:01:32,910 --> 00:01:40,050
If you remember we have a function called change and this change receives an arguments of a value whatever

27
00:01:40,050 --> 00:01:44,420
Marmol and then it's going to be calling to a new function call update form.

28
00:01:44,500 --> 00:01:47,640
And is going to pass that argument that we are getting.

29
00:01:47,660 --> 00:01:48,320
OK.

30
00:01:48,620 --> 00:01:55,100
So I get to go back to form Phil's going to delete this and since we're passing as Probst called change

31
00:01:55,200 --> 00:02:00,660
what we can do we can access prompts and we have that function available and it's going to be called

32
00:02:00,660 --> 00:02:06,600
of course it's going to be called Change open and close and we're going to be passing as an argument

33
00:02:06,690 --> 00:02:07,880
the state.

34
00:02:08,150 --> 00:02:08,780
OK.

35
00:02:09,330 --> 00:02:11,970
So now this change is going to get triggered.

36
00:02:12,120 --> 00:02:17,880
And this is going to receive the new state as an argument and it's going to be running this update form

37
00:02:17,970 --> 00:02:22,980
and it's going to pass the new state and right here inside update that form we are getting that argument

38
00:02:23,040 --> 00:02:24,400
and we are doing the cons..

39
00:02:24,420 --> 00:02:29,140
So pretty much we are doing the same thing we are we're doing right here doing the council lock.

40
00:02:29,340 --> 00:02:35,930
So if I go right here and type a G we get name a last name and name is going to have value.

41
00:02:36,290 --> 00:02:36,770
OK.

42
00:02:36,930 --> 00:02:43,290
But now we are inside the user component and we have access to update the state of this one.

43
00:02:43,290 --> 00:02:44,880
So what are we going to do here.

44
00:02:44,960 --> 00:02:47,770
And the lead This is going to be doing this.

45
00:02:47,790 --> 00:02:49,120
That said state.

46
00:02:49,170 --> 00:02:56,520
Does that set stayed open and close and begin going to say that form data is going to be equal to the

47
00:02:56,520 --> 00:03:05,070
new state can save it going to go right here and now if we type something since it's going to be updating

48
00:03:05,070 --> 00:03:11,000
the state whenever we trigger on change we should be able to get the values right here.

49
00:03:11,020 --> 00:03:15,060
Going to say F R and C as Frances.

50
00:03:15,090 --> 00:03:15,970
So this is working.

51
00:03:15,990 --> 00:03:20,960
It's updating the input with whatever value we have inside form data.

52
00:03:21,000 --> 00:03:22,260
And the same thing right here.

53
00:03:22,260 --> 00:03:23,520
Last name.

54
00:03:23,640 --> 00:03:24,050
Good.

55
00:03:24,120 --> 00:03:27,450
So you know this one works.

56
00:03:27,450 --> 00:03:33,360
Now the thing now the problem is that if we want to submit something we want to submit the form.

57
00:03:33,360 --> 00:03:40,530
We just need the name of the key and just devalue everything else for us.

58
00:03:40,530 --> 00:03:41,600
It's going to be relevant.

59
00:03:41,610 --> 00:03:43,920
You know we we cannot use it.

60
00:03:44,100 --> 00:03:49,370
So we need a way to loop through all the continents and just get the key and the value.

61
00:03:49,470 --> 00:03:49,990
OK.

62
00:03:50,280 --> 00:03:53,070
So right here we have this submit form.

63
00:03:53,070 --> 00:03:54,960
We don't have a function that does that.

64
00:03:55,050 --> 00:04:01,860
So we get it created right now going to say serve med form is going to be equal to an event opening

65
00:04:01,860 --> 00:04:04,090
close and of course we run a function.

66
00:04:04,410 --> 00:04:13,770
Now we pass the event as an argument and submit form needs to do just like we did before events prevent

67
00:04:13,920 --> 00:04:15,770
and then default.

68
00:04:16,320 --> 00:04:16,650
All right.

69
00:04:16,650 --> 00:04:20,690
So this is going to stop the form for from Mitton.

70
00:04:21,000 --> 00:04:28,560
So now what we need to do we need to loop the current state and get the name of the key and just to

71
00:04:28,570 --> 00:04:31,190
bother you this portion of code.

72
00:04:31,560 --> 00:04:32,190
Okay.

73
00:04:32,280 --> 00:04:37,820
So first I'm going to create a viable that it's going to store all of this.

74
00:04:37,830 --> 00:04:44,440
So I'm going to say data to see if med makes sense it's going to be equal to open and close.

75
00:04:44,660 --> 00:04:45,250
Okay.

76
00:04:45,570 --> 00:04:50,700
So now we need to loop the information that we have and create this data to submit.

77
00:04:50,970 --> 00:04:58,120
So I'm going to create a for open close and then just rerun the for now the 4 needs.

78
00:04:58,260 --> 00:05:06,180
The key is going to say let key and remember that key is going to be equal to last name and name I'm

79
00:05:06,360 --> 00:05:07,140
good.

80
00:05:07,710 --> 00:05:14,310
And then of course we need to do space and in and we say this that state and since we want to look at

81
00:05:14,330 --> 00:05:19,380
the state of form data we say form data.

82
00:05:19,950 --> 00:05:25,500
So now on each iteration on each iteration it's going to be access and the key.

83
00:05:25,620 --> 00:05:32,370
So I'm going to say OK so what I want to do I want to create inside data is have made a key that is

84
00:05:32,370 --> 00:05:38,090
going to be equal to the key on the first iteration the is going to be equal to name.

85
00:05:38,100 --> 00:05:44,590
So now data is made is going to have a key of name something like that simple like that.

86
00:05:44,590 --> 00:05:48,300
And now the value of name is going to be equal to this.

87
00:05:48,360 --> 00:05:54,790
That state DOT formed data then we pass the key that in this case its name.

88
00:05:54,870 --> 00:05:56,790
And then we passed the value.

89
00:05:56,790 --> 00:06:01,410
So in the first iteration this one is going to be equal to whatever value we have.

90
00:06:01,740 --> 00:06:02,360
All right.

91
00:06:02,430 --> 00:06:07,200
And then on the next iteration is going to say last name is going to be equal to whatever.

92
00:06:07,200 --> 00:06:08,170
All right.

93
00:06:08,280 --> 00:06:09,350
So I'm going to delete this.

94
00:06:09,360 --> 00:06:10,550
You don't need it.

95
00:06:10,960 --> 00:06:13,510
Me make this a little bit better.

96
00:06:13,940 --> 00:06:14,380
OK.

97
00:06:14,430 --> 00:06:16,330
So this is pretty much done now.

98
00:06:16,380 --> 00:06:25,550
If I do a console log do console not log opening close and I console the data to SIFF med.

99
00:06:25,760 --> 00:06:31,370
We're going to get the information we need to make a network request are going to type Francis are going

100
00:06:31,370 --> 00:06:36,130
to type Jones whatever and I'm going to do med.

101
00:06:36,360 --> 00:06:43,620
Ok we get name Francis and last name of med so we have all the data we need to make an ad for request.

102
00:06:43,620 --> 00:06:49,830
And now in the future if you want to add more inputs what you need to do is just copy one to one of

103
00:06:49,830 --> 00:06:53,670
the one of one of the ones we have right here.

104
00:06:53,750 --> 00:07:00,300
The koma do something else something some something like that something is going to be unempowered you

105
00:07:00,300 --> 00:07:07,020
know something we just need to change something simple right here and then something whatever doesn't

106
00:07:07,020 --> 00:07:07,600
matter.

107
00:07:07,890 --> 00:07:12,200
And the template that the function is going to pick this up and it's going to be rendering.

108
00:07:12,210 --> 00:07:19,140
So if we type Francis then Jones then else and we submit the form.

109
00:07:19,200 --> 00:07:20,970
You know we get it we get that.

110
00:07:20,970 --> 00:07:23,210
So this is ready to submit.

111
00:07:23,220 --> 00:07:29,160
So now inside the you know the submit form we can make a network request just like we did before with

112
00:07:29,210 --> 00:07:31,990
Acciona than posed.

113
00:07:32,100 --> 00:07:37,480
And the your well then coma and then we pass this data to submit.

114
00:07:37,890 --> 00:07:43,440
And that's that's all you need is going to do a network request and post the values you have inside

115
00:07:43,440 --> 00:07:44,670
data databases of mid.

116
00:07:44,720 --> 00:07:48,320
Of course we don't have x years we are going to do something else right here in a minute.

117
00:07:48,720 --> 00:07:50,070
OK so everything is ready.

118
00:07:50,130 --> 00:07:50,990
We're going to do.

119
00:07:51,030 --> 00:07:58,320
Quick you know conclusion of all of this because I need you to make sure that you know what we are doing

120
00:07:58,380 --> 00:08:03,070
that kind of make sense to you and then we're going to be doing validations.

121
00:08:03,090 --> 00:08:08,940
And of course this form data all of this rules are going to be going to be changing a little bit.

122
00:08:08,940 --> 00:08:10,500
We're going to be extend this.

123
00:08:10,620 --> 00:08:13,830
So again it's going to be getting a little bit more confused.

124
00:08:13,950 --> 00:08:20,020
So we're going to do a little recap and all the all of this logic right here.

125
00:08:20,580 --> 00:08:24,410
OK so let's review let's recap what we have so far.

126
00:08:24,420 --> 00:08:29,820
So first we have a component that it should be rendering a form element some form elements just like

127
00:08:29,820 --> 00:08:30,740
this.

128
00:08:30,810 --> 00:08:37,950
We have a state with like of non-indexed like a manifest of the inputs that we want to create the first

129
00:08:37,980 --> 00:08:41,550
input is going to be a name and it's going to be a type of input.

130
00:08:41,670 --> 00:08:46,270
And the second one it's a last name and it's going to be a type of input.

131
00:08:46,410 --> 00:08:46,930
OK.

132
00:08:47,190 --> 00:08:54,540
So then we run a component we make we call to a component called form fields and we pass the information

133
00:08:54,560 --> 00:08:58,480
you know the state of form data which is all of us.

134
00:08:58,590 --> 00:08:59,110
OK.

135
00:08:59,310 --> 00:09:05,570
So that form fields is going to be entering right here and it's going to be calling render fields.

136
00:09:05,730 --> 00:09:11,610
Now this component this form fields is going to be receiving some props you know with all of this data

137
00:09:11,610 --> 00:09:12,520
we have on top.

138
00:09:12,600 --> 00:09:13,230
OK.

139
00:09:13,440 --> 00:09:17,130
So the first function that is going to be running it's render fields.

140
00:09:17,170 --> 00:09:24,180
Now for you if you notice inside here the this object is not good to us because we need to create one

141
00:09:24,270 --> 00:09:28,960
input for each of the elements we have inside form data.

142
00:09:29,160 --> 00:09:34,260
So this function is creating a new type of array we are restructuring everything.

143
00:09:34,410 --> 00:09:37,030
So we can lump the information.

144
00:09:37,260 --> 00:09:40,190
So for each elements we are grabbing this.

145
00:09:40,230 --> 00:09:43,390
And we are pushing inside form data array.

146
00:09:43,410 --> 00:09:47,800
So now we get the information on a different manner.

147
00:09:47,970 --> 00:09:52,210
So we get four Morais save it.

148
00:09:52,350 --> 00:09:58,320
So now we get just like this an array of objects with an idea of name and then settings is going to

149
00:09:58,320 --> 00:10:02,980
be you know the actual information on each key.

150
00:10:03,340 --> 00:10:08,650
So once we have this form array is going to be looping this form array.

151
00:10:08,650 --> 00:10:13,360
And for each element we have inside form data on you know name and last name.

152
00:10:13,360 --> 00:10:20,980
In this case it's going to be calling to render templates to render one input and it's going to be passing

153
00:10:20,980 --> 00:10:23,560
the item on each iteration.

154
00:10:23,950 --> 00:10:29,980
So this read the job of this rendered templates is going to be checking what type of element we have

155
00:10:29,980 --> 00:10:36,830
on each iteration and it's going to be checking the input the type of element which in this case input.

156
00:10:37,090 --> 00:10:40,120
And if we have an input it's going to render one template.

157
00:10:40,210 --> 00:10:44,020
And if you have something as an input is going to render a different template.

158
00:10:44,050 --> 00:10:45,870
So far we have only one.

159
00:10:46,270 --> 00:10:46,560
OK.

160
00:10:46,600 --> 00:10:52,910
So render templates is going to pass the all the information about that item.

161
00:10:52,910 --> 00:10:56,620
So render template is going to be going right here is going to grab that data.

162
00:10:56,620 --> 00:11:01,790
You know all the information about that is going to be checking what type of element we have right here.

163
00:11:01,790 --> 00:11:07,900
Values element in if the case is impot is going to be returning this template.

164
00:11:08,020 --> 00:11:15,580
So in conclusion if you have 100 types 100 100 values right here you know different inputs if you have

165
00:11:15,580 --> 00:11:16,630
100.

166
00:11:16,630 --> 00:11:22,900
This function is going to run a 100 times one for each element on that list.

167
00:11:22,900 --> 00:11:26,290
So now it's going to be returning this template.

168
00:11:26,290 --> 00:11:31,900
Now this template checks if we have a label and if we do is going to put it and then it's going to be

169
00:11:31,900 --> 00:11:33,080
rendering an.

170
00:11:33,100 --> 00:11:35,680
Because the case is impot of course.

171
00:11:35,680 --> 00:11:43,060
Now inside config on the manifest inside config we have all the configuration about that type of input

172
00:11:43,060 --> 00:11:43,990
which is the name.

173
00:11:44,020 --> 00:11:46,510
You know they type text and a placeholder.

174
00:11:46,630 --> 00:11:52,840
So it's including all of that config values that is going to be adding a value which is going to be

175
00:11:52,900 --> 00:11:59,160
equal to this value but at the beginning it's going to be empty of course.

176
00:11:59,290 --> 00:12:03,360
And then of course it's going to be adding those elements inside the screen.

177
00:12:03,350 --> 00:12:04,000
Good.

178
00:12:04,380 --> 00:12:05,550
So now what do we need to do.

179
00:12:05,590 --> 00:12:11,700
Of course what it does is to trigger a function every time that we need to change that we change something.

180
00:12:11,800 --> 00:12:13,970
So we can update the state.

181
00:12:14,290 --> 00:12:16,600
So we have this function on change.

182
00:12:16,600 --> 00:12:22,240
Now the on change handler is going to be running a function and it's going to passing is going to be

183
00:12:22,240 --> 00:12:28,660
passing the event type that contains the information of that input of the values that we're typing right

184
00:12:28,660 --> 00:12:32,910
here and it's going to be passing the ID of the element.

185
00:12:32,920 --> 00:12:40,280
Now this is going to be equal to the this part of the code to the key of whatever we want to be updating.

186
00:12:40,630 --> 00:12:42,710
Let's say that we want to update name.

187
00:12:42,790 --> 00:12:45,920
So this data ID is going to be equal name.

188
00:12:46,100 --> 00:12:46,570
OK.

189
00:12:46,750 --> 00:12:55,150
So the job of change handler is going to be entering creating data Barville of new state that it's a

190
00:12:55,150 --> 00:12:59,340
copy just a duplicate of prompts that form data.

191
00:12:59,350 --> 00:13:06,130
And at this point if nothing gets entered right here form data is going to be equal to all of this not

192
00:13:06,130 --> 00:13:08,850
just the input to all of this.

193
00:13:08,890 --> 00:13:14,830
So then we access since we have the ID which is in this case let's assume that we are changing this

194
00:13:14,830 --> 00:13:22,150
one equals to name we access that new state name and we access the value and we change it with the one

195
00:13:22,150 --> 00:13:24,600
that we are typing right here.

196
00:13:24,600 --> 00:13:25,260
OK.

197
00:13:25,600 --> 00:13:32,720
And every time we change something we type something is going to be calling a function that calls change.

198
00:13:32,740 --> 00:13:35,450
Now we passed this function inside probs.

199
00:13:35,530 --> 00:13:41,410
If we go to user whenever we both form fields we have a function called change.

200
00:13:41,440 --> 00:13:47,820
This change is going to be running a function and now this function is going to be expecting the new

201
00:13:47,830 --> 00:13:48,270
state.

202
00:13:48,280 --> 00:13:54,400
You know whatever we are just updating right here inside this marvel and right here we call it change

203
00:13:54,580 --> 00:13:56,210
and we pass an argument.

204
00:13:56,230 --> 00:14:03,440
We pass the whole list of all the elements you know but the updated version.

205
00:14:03,490 --> 00:14:03,980
So OK.

206
00:14:04,000 --> 00:14:10,180
So inside user this function is going to receive that and it's going to be calling a function and it's

207
00:14:10,180 --> 00:14:12,390
going to pass those arguments.

208
00:14:12,450 --> 00:14:18,850
Now update form the job of update form is getting that new state and it's going to be doing this said

209
00:14:18,850 --> 00:14:24,590
state and now is going to update to the new state with the correct values.

210
00:14:25,000 --> 00:14:25,460
OK.

211
00:14:25,570 --> 00:14:34,270
And at the end whenever we submit the form we create a viral that contains only the name and the key

212
00:14:34,360 --> 00:14:41,860
which is going to be only with the ballot you know because of course we cannot post this to the server.

213
00:14:41,860 --> 00:14:45,600
We just need that name of the key and this valley right here.

214
00:14:45,820 --> 00:14:51,610
So what we do right here we create a for loop that is going to be getting the key in this case on the

215
00:14:51,610 --> 00:14:57,520
first loop is going to be name and on the second is going to be last name and to each key is going to

216
00:14:57,520 --> 00:15:04,360
be adding the value that we have on the state and this is going to generate an object with what we want

217
00:15:04,360 --> 00:15:06,920
to post to the server.

218
00:15:07,300 --> 00:15:07,550
OK.

219
00:15:07,570 --> 00:15:11,000
So this is pretty much all the logic we have so far.

220
00:15:11,320 --> 00:15:18,760
So and again just like I told before this works good if we add more inputs is going to be adding all

221
00:15:18,760 --> 00:15:20,680
the inputs of medically.

222
00:15:20,800 --> 00:15:26,260
Now the only thing right now is that you know we could have more we could have different inputs.

223
00:15:26,470 --> 00:15:29,710
So we're going to be adding a couple of more it's going to be real real simple.

224
00:15:29,710 --> 00:15:35,950
It's going to short we're going to be adding a text area and we're going to be adding a select select

225
00:15:35,970 --> 00:15:38,400
and put with options inside.

226
00:15:38,440 --> 00:15:39,580
We're going to be doing that.

227
00:15:39,670 --> 00:15:45,070
And then what we're going to do we are going to be adding validation to this because validation it's

228
00:15:45,160 --> 00:15:46,410
really important.

229
00:15:46,570 --> 00:15:48,440
Well let's do that right now.

