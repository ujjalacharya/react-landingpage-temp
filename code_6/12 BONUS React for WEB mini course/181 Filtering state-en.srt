1
00:00:01,130 --> 00:00:01,580
Right.

2
00:00:01,580 --> 00:00:04,850
So now we're going to be filtering the news on the U.S. has been a mistake.

3
00:00:04,880 --> 00:00:07,820
I put font style in cinema instead of from family.

4
00:00:07,940 --> 00:00:09,670
So now we are using botto.

5
00:00:09,680 --> 00:00:10,710
That's good.

6
00:00:10,780 --> 00:00:11,340
OK.

7
00:00:11,390 --> 00:00:14,570
So we are not going to go we're not going to go back to styles.

8
00:00:14,810 --> 00:00:20,880
So OK so now that we know props we could take a different approach with Hetter.

9
00:00:21,170 --> 00:00:27,950
So with prompts we can share functions values or objects or whatever and you know we can share them

10
00:00:27,950 --> 00:00:30,860
with chyle components just like we are doing with news.

11
00:00:30,910 --> 00:00:37,860
We're just passing the whole list of news and then the job of that users is just rendering the news.

12
00:00:38,210 --> 00:00:41,230
So now I'm going to just start doing something and then I'm going to.

13
00:00:41,250 --> 00:00:47,180
You can see why I'm going to create a function to go to the index that is going to create a function

14
00:00:47,450 --> 00:00:50,710
that I'm going to be sharing to a child component.

15
00:00:50,750 --> 00:00:52,520
In this case the better.

16
00:00:52,640 --> 00:00:56,960
So I'm going to say I'm going to create a function that is going to be called Get keyboard something

17
00:00:56,960 --> 00:01:03,500
like that it's going to be equal to a fat R-OH function then open it close and you know which is passive

18
00:01:03,500 --> 00:01:04,460
function.

19
00:01:04,460 --> 00:01:09,770
So this one when when it's going to get triggered it's going to just cancel log key.

20
00:01:09,800 --> 00:01:13,730
You know just a text it's going to say hey something real simple.

21
00:01:13,730 --> 00:01:17,980
So now I'm going to go to Hetter and get a pass this function as props.

22
00:01:18,110 --> 00:01:18,620
OK.

23
00:01:19,010 --> 00:01:23,520
So the name for this is going to be keyboard's is going to be equal to.

24
00:01:23,690 --> 00:01:30,190
And of course we say this because we mean declasse and then we pass get keyboard.

25
00:01:30,920 --> 00:01:34,540
So now this function is going to be available inside Hetter.

26
00:01:34,610 --> 00:01:35,440
In theory.

27
00:01:35,460 --> 00:01:35,920
OK.

28
00:01:36,200 --> 00:01:41,930
So I'm going to go right here and I'm going to do console log and remember that whenever we pass something

29
00:01:42,050 --> 00:01:43,740
through props.

30
00:01:43,820 --> 00:01:46,620
If you're using a class it's going to be available inside.

31
00:01:46,850 --> 00:01:51,960
Inside this that props that keyboards in this case.

32
00:01:52,610 --> 00:01:55,900
So if we reload You know we are getting the console log.

33
00:01:55,950 --> 00:01:59,750
Hey it's telling us that we have a function that does this.

34
00:01:59,810 --> 00:02:05,180
So we are successfully sharing a function between parent component and child component.

35
00:02:05,540 --> 00:02:08,430
So what is the point of doing all of this now.

36
00:02:08,450 --> 00:02:13,550
In theory if we have this function available we can call it from within whatever.

37
00:02:13,580 --> 00:02:17,530
You know our code and we can trigger at this function we can do that.

38
00:02:17,870 --> 00:02:19,200
So instead of doing that.

39
00:02:19,250 --> 00:02:21,930
What I'm going to do I'm going to copy this.

40
00:02:22,030 --> 00:02:25,980
They're going to delete the console log and I'm going to go right here to the On Change.

41
00:02:26,030 --> 00:02:33,380
So every time we input a text instead of triggering the input change handler I went to trigger that

42
00:02:33,380 --> 00:02:37,950
prompts you know the this that prompts keyword that function that we have available.

43
00:02:38,000 --> 00:02:39,410
In theory it should be working.

44
00:02:39,410 --> 00:02:41,970
We should be getting counsel luck hey.

45
00:02:42,230 --> 00:02:42,710
OK.

46
00:02:42,800 --> 00:02:45,520
So going to type something and you know we are getting it.

47
00:02:45,710 --> 00:02:47,410
We get like hey.

48
00:02:47,600 --> 00:02:53,630
So OK if we think about this we are just triggering a function that we have on the parent component

49
00:02:53,960 --> 00:02:56,820
from within the child component.

50
00:02:56,840 --> 00:02:58,970
So what is the point of doing all of this.

51
00:02:59,000 --> 00:03:06,760
Why are we using a function in a class we could just make this smaller and create a functional component.

52
00:03:07,070 --> 00:03:10,020
So you know right here we do the onchange.

53
00:03:10,160 --> 00:03:14,980
It runs this function but we need to pass the events we need to catch the events.

54
00:03:15,170 --> 00:03:20,240
So if I go right here and say event and then do the cancel log.

55
00:03:20,240 --> 00:03:28,550
But instead of you know doing the consulate Hey I call the event I say event that target that value

56
00:03:29,240 --> 00:03:32,710
theory again we should be getting the value of what we are entering.

57
00:03:32,870 --> 00:03:35,380
So if I say Frances we get it.

58
00:03:35,390 --> 00:03:37,880
So it's still working.

59
00:03:38,030 --> 00:03:40,740
So again there is no need to do this.

60
00:03:40,820 --> 00:03:44,130
If I combine all this out you know I just can't comment all.

61
00:03:44,240 --> 00:03:45,270
And we tried again.

62
00:03:45,300 --> 00:03:46,310
It's still working.

63
00:03:46,400 --> 00:03:51,680
So there's no need to use the state and this is what and what I've told you before that if you can avoid

64
00:03:51,680 --> 00:03:55,210
using states start using class based components.

65
00:03:55,430 --> 00:03:59,460
You know you should avoid it avoid this and use a functional components.

66
00:03:59,750 --> 00:04:02,640
So we can change this back to a functional component.

67
00:04:02,790 --> 00:04:05,660
I'm going to do this because we're not going to need it.

68
00:04:05,660 --> 00:04:09,250
I'm going to delay this again because we are not going to need it.

69
00:04:09,260 --> 00:04:14,440
I'm going to say Konst and I'm going to just refactor this to a functional component.

70
00:04:14,450 --> 00:04:15,790
It's going to be Hetter.

71
00:04:16,160 --> 00:04:23,200
And then of course it's going to be equal to a function and this function is going to receive some props.

72
00:04:23,220 --> 00:04:28,010
You know the props that keyboards now says you're using a functional component there there's no need

73
00:04:28,010 --> 00:04:29,300
to use the render.

74
00:04:29,300 --> 00:04:33,430
We don't need it since we're not using component right here.

75
00:04:33,460 --> 00:04:35,260
There's no need to bring it.

76
00:04:35,530 --> 00:04:39,460
And right here we are making we are making a reference to this and we didn't have this.

77
00:04:39,470 --> 00:04:44,810
We're not using a class based component so we can say only prompts.

78
00:04:45,200 --> 00:04:46,040
Let's see if it's working.

79
00:04:46,040 --> 00:04:47,980
At least we are not getting any errors.

80
00:04:48,020 --> 00:04:51,650
So if I type Francis you know it works.

81
00:04:51,890 --> 00:04:58,270
So now again you should always take five minutes when you're whenever you're building your own application.

82
00:04:58,370 --> 00:05:04,470
Take five minutes and think you're really need a functional component or a class based component.

83
00:05:04,500 --> 00:05:10,620
Now again if you decide to use a class based component because you like it more that's fine.

84
00:05:10,650 --> 00:05:11,530
You can use it.

85
00:05:11,550 --> 00:05:12,550
It's still going to work.

86
00:05:12,570 --> 00:05:14,450
No one is going to say anything to you.

87
00:05:14,460 --> 00:05:15,660
It's still going to work.

88
00:05:15,870 --> 00:05:22,890
But you know we're using less code and you're using less logic and not using state twice.

89
00:05:22,920 --> 00:05:25,210
Now we are using state only once.

90
00:05:25,380 --> 00:05:26,480
So you know less code.

91
00:05:26,520 --> 00:05:31,110
It's going to be a better performing application.

92
00:05:31,430 --> 00:05:34,690
OK so now we need to do more things we need to.

93
00:05:34,870 --> 00:05:37,540
The idea of doing all of this or.

94
00:05:38,050 --> 00:05:44,010
This refactor is to get the keyboards inside the state of the main app.

95
00:05:44,100 --> 00:05:48,020
We're going to get the keywords right here are we going to store a new state.

96
00:05:48,120 --> 00:05:50,980
So let's do that right now.

97
00:05:51,070 --> 00:05:52,690
OK so let's filter the news.

98
00:05:52,760 --> 00:05:55,600
I'm going to tell you what's the logic with this.

99
00:05:55,600 --> 00:06:01,020
So where we are getting the keywords right here whenever the user enters something on the impot.

100
00:06:01,180 --> 00:06:02,660
So we are catching that.

101
00:06:02,710 --> 00:06:04,630
That keyboard if Icesave react.

102
00:06:04,630 --> 00:06:06,790
For example we can catch react.

103
00:06:07,000 --> 00:06:11,120
So we're going to grab that keyboard begin to filter the news Jason.

104
00:06:11,140 --> 00:06:17,530
All the news and we can it just get all the news with the with the title react.

105
00:06:17,570 --> 00:06:22,240
We're going to search the title and if we can find a match between the keyboard and something.

106
00:06:22,240 --> 00:06:24,190
Some want some keywords in the title.

107
00:06:24,250 --> 00:06:28,290
We can never return the whole news and we can store them in a new array.

108
00:06:28,420 --> 00:06:33,460
So in theory if we type react we'll loop all the news is going to find the second one it's going to

109
00:06:33,460 --> 00:06:35,030
store it on an array.

110
00:06:35,270 --> 00:06:37,740
It's going to find the second one is going to pass through.

111
00:06:37,900 --> 00:06:41,920
And it can store it in array and then it's going to be done with that loop.

112
00:06:42,130 --> 00:06:47,250
And at the end we can have only one tray with only two use.

113
00:06:47,500 --> 00:06:48,280
So OK.

114
00:06:48,850 --> 00:06:49,950
So I'm going to delete them.

115
00:06:49,960 --> 00:06:51,930
Just common this is going to use it later.

116
00:06:52,180 --> 00:06:54,470
So we have access to the keyboards good.

117
00:06:54,760 --> 00:07:00,880
So now we need to create something a function or whatever that is going to loop all the news and it's

118
00:07:00,880 --> 00:07:03,600
going to just grab the noose with the keyboards.

119
00:07:03,670 --> 00:07:04,510
OK.

120
00:07:04,540 --> 00:07:07,820
So I'm going to say let creative are all there's going to be let.

121
00:07:07,900 --> 00:07:11,580
And I'm going to call this filtered something like that.

122
00:07:12,010 --> 00:07:18,480
So this viral is going to filter the news and we can use an E-6 helper that is going to be called Filcher.

123
00:07:18,700 --> 00:07:26,530
So we're going to say this that state that news just like that can to grab this state of news with all

124
00:07:26,530 --> 00:07:29,970
the news and then we're going to use the helper filter.

125
00:07:30,130 --> 00:07:31,060
This is not react.

126
00:07:31,060 --> 00:07:32,740
This is ESX.

127
00:07:32,740 --> 00:07:39,360
So this filter is going to be running a function and this on each iteration is going to pass an item.

128
00:07:39,400 --> 00:07:45,250
This is just like doing the map is going to run the loop and on each iteration is going to pass each

129
00:07:45,340 --> 00:07:51,910
news just like we did with the Newsless item right here with the map and find it right here.

130
00:07:51,910 --> 00:07:54,370
Same idea same idea.

131
00:07:54,370 --> 00:07:56,070
So going to go back to the.

132
00:07:56,200 --> 00:08:01,780
Now what we need to do on each iteration we're going to be doing some checking right here we're going

133
00:08:01,780 --> 00:08:08,070
to be checking if the the title of each item we have a match for the keyword.

134
00:08:08,170 --> 00:08:08,730
OK.

135
00:08:09,100 --> 00:08:13,180
So this is again just raw javascript I'm going to save return.

136
00:08:13,180 --> 00:08:18,720
We always need to use the keyword return whenever we use filter just like we did with the map.

137
00:08:19,000 --> 00:08:26,380
So first we can access the item which is each new then we're going to say title dot begin access to

138
00:08:26,380 --> 00:08:27,040
title.

139
00:08:27,220 --> 00:08:32,170
And now again we're going to be using a raw javascript you to check the index off.

140
00:08:32,230 --> 00:08:36,160
So the index off is going to be the event targeted value.

141
00:08:36,160 --> 00:08:37,890
So I'm going to go right here at the top.

142
00:08:38,020 --> 00:08:44,980
I'm going to create a new Farmall that is going to be called Lead keyboard like that a lot keyboard

143
00:08:45,070 --> 00:08:46,780
is going to be equal to event.

144
00:08:46,840 --> 00:08:53,770
The target value which is the actual keyword and then going to past keyword.

145
00:08:53,770 --> 00:08:56,340
So this is going to enter that use.

146
00:08:56,680 --> 00:08:58,780
For example on the first iteration it's going to enter.

147
00:08:58,770 --> 00:09:02,240
This is going to enter the title right here.

148
00:09:02,320 --> 00:09:03,770
It's going to check the whole string.

149
00:09:03,790 --> 00:09:06,600
It's going to check if the keyword that we are typing.

150
00:09:06,610 --> 00:09:10,190
If there is some match with any of the awards we have right here.

151
00:09:10,360 --> 00:09:15,550
So if we type ESX we're going to find a match right here is going to be returning true and it's going

152
00:09:15,550 --> 00:09:17,430
to return the whole news.

153
00:09:17,440 --> 00:09:18,110
OK.

154
00:09:18,610 --> 00:09:23,900
So we have the index off the keyboard and we need to specify that this is true.

155
00:09:24,100 --> 00:09:27,860
So if this is true it's going to return that news real simple.

156
00:09:27,870 --> 00:09:28,470
OK.

157
00:09:28,840 --> 00:09:30,840
So I'm going to go and cancel log.

158
00:09:30,890 --> 00:09:37,770
This will this filter just to check that we're getting the logic with the right way.

159
00:09:38,200 --> 00:09:38,550
OK.

160
00:09:38,590 --> 00:09:40,470
So I'm going to go to the main application.

161
00:09:40,810 --> 00:09:48,240
I'm going to type E and noticed that we are already getting three and it means that it's not finding

162
00:09:48,900 --> 00:09:53,700
we have one title and that you know you're not getting an E letter that's good.

163
00:09:53,940 --> 00:09:58,990
So noticed that there is right here I'm using caps.

164
00:09:59,670 --> 00:10:07,740
We didn't have it's for example when we match it right here in the off it's not going to match it between

165
00:10:08,160 --> 00:10:12,870
lower case and upper case if it's uppercase is going to match this lower case.

166
00:10:12,870 --> 00:10:14,100
It's not going to match.

167
00:10:14,100 --> 00:10:15,220
Let me give you an example.

168
00:10:15,330 --> 00:10:22,140
If I say E-6 with capitals we're getting one match which is Title 6.

169
00:10:22,170 --> 00:10:24,300
And this is the match upgrade of eval.

170
00:10:24,300 --> 00:10:28,450
So we're filtering the news and we are bringing the only news where we get.

171
00:10:28,490 --> 00:10:29,950
Yes six on the title.

172
00:10:29,970 --> 00:10:35,610
Now if I do six of course that's happening not happening it's not finding that one.

173
00:10:35,670 --> 00:10:38,180
Of course we will need to do more logic right here.

174
00:10:38,190 --> 00:10:39,910
You know we can do that later.

175
00:10:39,930 --> 00:10:41,740
Maybe so OK.

176
00:10:41,940 --> 00:10:43,750
So we're getting the filtered news.

177
00:10:43,950 --> 00:10:46,180
That is the main point of all of this.

178
00:10:46,500 --> 00:10:53,460
So now since we have the filtered news we need a way to tell the news list to render the filtered news

179
00:10:53,610 --> 00:10:56,540
instead of the of all news.

180
00:10:56,550 --> 00:10:59,970
So what I'm going to do I'm going to go right here at the top I'm going to get to I'm going to put a

181
00:10:59,970 --> 00:11:02,360
coma and I'm going to create a new state.

182
00:11:02,370 --> 00:11:07,890
It's going to be filtered and filter at the beginning when the application starts it's going to be empty

183
00:11:07,980 --> 00:11:10,520
of course because we don't have a filter.

184
00:11:11,170 --> 00:11:17,370
It's going to start as empty and then as soon as we get the filtered we get a new state of filter begin

185
00:11:17,370 --> 00:11:23,510
to set the state of this filter with whatever result we have right here.

186
00:11:24,020 --> 00:11:24,410
OK.

187
00:11:24,510 --> 00:11:26,690
So I'm going to go right here to say this.

188
00:11:26,730 --> 00:11:33,270
That said state opening close and we're going to say that this felt heard it's going to be equal to

189
00:11:33,270 --> 00:11:37,810
whatever we get right here after we type the keyboard.

190
00:11:37,980 --> 00:11:38,570
OK.

191
00:11:38,730 --> 00:11:42,090
Since we're using Year Six there's no need to do this.

192
00:11:42,150 --> 00:11:43,560
We can use past Filcher.

193
00:11:43,710 --> 00:11:45,390
And this is going to be is going to pass.

194
00:11:45,390 --> 00:11:48,550
Is this going to all happen behind the scenes.

195
00:11:49,370 --> 00:11:49,980
Right.

196
00:11:50,030 --> 00:11:52,710
So now we have the new state of filters.

197
00:11:52,870 --> 00:11:58,830
So now we need to specify right here what we want to do it to output what we want to render.

198
00:11:59,180 --> 00:12:04,400
So it's going to be it's going to look a little bit where we could do it just just right here and I'm

199
00:12:04,400 --> 00:12:06,520
going to use a turnaround operation.

200
00:12:06,590 --> 00:12:14,540
I'm going to say this that state DOT will be going to be AXS accessing the filtered begin to check on

201
00:12:14,540 --> 00:12:18,300
the filter whenever the application renders for the first time.

202
00:12:18,470 --> 00:12:21,830
If we have something inside if it's if it's empty.

203
00:12:21,830 --> 00:12:24,090
So going to check the length of it.

204
00:12:24,200 --> 00:12:30,230
So if the length is going to be equal to zero which it means that it's going to be empty we want to

205
00:12:30,290 --> 00:12:32,360
do something right here.

206
00:12:32,600 --> 00:12:37,850
And if it's not empty which means that we have the keyboard and we have some result we're going to displace

207
00:12:37,850 --> 00:12:38,870
something else.

208
00:12:39,230 --> 00:12:48,750
So if the gas filtered is empty going to say render this that state that news can render all the news.

209
00:12:48,830 --> 00:12:55,710
But if they felt her state has some data we want to render that one instead.

210
00:12:55,850 --> 00:12:59,810
So we're going to say does that state that filtered.

211
00:12:59,970 --> 00:13:01,780
All right I made a mistake.

212
00:13:02,050 --> 00:13:06,790
I may go back but so know the fonts are really big.

213
00:13:06,890 --> 00:13:11,710
So for so you can the you can see right here the code if I trimmed down.

214
00:13:11,820 --> 00:13:15,340
You're not going to be able to see it on screen that fonts are going to be small.

215
00:13:15,350 --> 00:13:17,150
That's why you know I have this.

216
00:13:17,450 --> 00:13:19,460
So we're going to trim this in a minute.

217
00:13:19,520 --> 00:13:21,290
So what is happening right here.

218
00:13:21,410 --> 00:13:27,280
The application renders for the first time is going to be checking if we have something inside filtered.

219
00:13:27,440 --> 00:13:32,810
Of course we didn't have anything because whenever the application starts the state of filtered is going

220
00:13:32,810 --> 00:13:36,410
to be nothing but just an empty array.

221
00:13:36,740 --> 00:13:44,000
So since this is going to be passing it's true we're going to just return this that state that use this

222
00:13:44,000 --> 00:13:46,430
state contains all the news.

223
00:13:46,430 --> 00:13:53,510
Now the second one if this is the slang the filter length has some use which means that we made a filter.

224
00:13:53,630 --> 00:13:55,510
And we get we salts.

225
00:13:55,590 --> 00:13:57,540
It's going to render the filtered.

226
00:13:57,740 --> 00:13:58,020
OK.

227
00:13:58,070 --> 00:14:00,200
Let's see if it's working.

228
00:14:00,230 --> 00:14:01,340
I'm going to go right here.

229
00:14:01,370 --> 00:14:03,780
I'm going to say e as sex.

230
00:14:03,930 --> 00:14:05,660
You know it's working.

231
00:14:06,260 --> 00:14:07,810
Let's try something else.

232
00:14:07,820 --> 00:14:10,690
If I delete everything and leave it to empty.

233
00:14:10,830 --> 00:14:13,390
It's going to fall back and go to this state.

234
00:14:13,400 --> 00:14:16,220
So now the made him sick.

235
00:14:16,700 --> 00:14:20,090
So now Newsless is going to be rendering all the news.

236
00:14:20,510 --> 00:14:21,490
You know it's working.

237
00:14:21,770 --> 00:14:23,900
Let's say re-act for example.

238
00:14:23,900 --> 00:14:27,830
Of course not going to work because his lower case and we have our case right here.

239
00:14:27,830 --> 00:14:30,930
If I do upper case react we get two.

240
00:14:30,980 --> 00:14:34,970
So it's working right now in this line.

241
00:14:34,970 --> 00:14:36,650
It's a little bit long.

242
00:14:36,650 --> 00:14:39,300
It's not human to human readable.

243
00:14:39,470 --> 00:14:45,110
So what we can do we can create an alias for this and this is you can find this kind of kind of common.

244
00:14:45,290 --> 00:14:48,320
You can find it in a lot of re-act projects.

245
00:14:48,380 --> 00:14:54,100
So if we can have left can you create a viable that is going to serve as an alias for this.

246
00:14:54,130 --> 00:14:59,290
This state that Filcher And you know it makes sense for this application.

247
00:14:59,300 --> 00:15:03,090
This code could get could get much much longer.

248
00:15:03,260 --> 00:15:07,290
So we are always using this date and something.

249
00:15:07,430 --> 00:15:10,550
So you can create an alias just for this.

250
00:15:10,700 --> 00:15:17,960
I'm going to say news filtered and this one is going to be equal to this state that filter and then

251
00:15:17,960 --> 00:15:23,330
are going to say let And I'm going to say news and then hold something like that.

252
00:15:23,570 --> 00:15:28,630
Going to be instead of this state that filter it's going to be news.

253
00:15:29,590 --> 00:15:30,360
OK.

254
00:15:30,570 --> 00:15:31,160
There you go.

255
00:15:31,370 --> 00:15:37,560
So instead of making a reference to this because it's a long string I could just say use.

256
00:15:38,090 --> 00:15:46,690
Replace this with news filtered and right here going to copy the news hole and make reference to news.

257
00:15:46,770 --> 00:15:47,460
Whoa.

258
00:15:47,690 --> 00:15:50,500
So you know a little bit better a little bit better.

259
00:15:50,570 --> 00:15:54,560
So I'm going to go right here and just going to say sex and it works.

260
00:15:54,620 --> 00:15:58,410
And if I delete everything it works OK.

261
00:15:58,460 --> 00:16:01,550
So everything works as expected.

262
00:16:01,550 --> 00:16:05,220
Now let's recap something right here.

263
00:16:05,600 --> 00:16:11,810
I'm using whenever the application starts I'm storing the Jason data inside News I'm storing all the

264
00:16:11,810 --> 00:16:13,500
news inside news.

265
00:16:13,800 --> 00:16:19,790
And then we are running something to filter and we're storing the filtered news inside something else.

266
00:16:19,790 --> 00:16:21,970
Why am I duplicating this.

267
00:16:21,980 --> 00:16:28,600
It's always a bad idea to mutate the original state of something that it's really really important in

268
00:16:28,610 --> 00:16:32,040
this case we are rendering all the news we get all the news right here.

269
00:16:32,150 --> 00:16:39,670
If I filter the news and I store it inside News I'm going to be mutating the or regional data.

270
00:16:39,800 --> 00:16:44,300
And then the next time that we need to use dysfunction you're not going to get this data.

271
00:16:44,390 --> 00:16:46,120
You know we are just mutated the data.

272
00:16:46,130 --> 00:16:47,650
We don't have access to this.

273
00:16:47,720 --> 00:16:53,210
So we will have to find the news again and do something else OK that's good.

274
00:16:53,460 --> 00:16:59,820
So you know we could take a different approach in this we could use life cycles but we're not there

275
00:16:59,820 --> 00:17:00,080
yet.

276
00:17:00,090 --> 00:17:01,210
We're going to get there.

277
00:17:01,430 --> 00:17:01,880
So OK.

278
00:17:01,920 --> 00:17:05,170
This is the final section of this tiny tiny project.

279
00:17:05,220 --> 00:17:08,290
It looks really really ugly but that's good.

280
00:17:08,340 --> 00:17:16,050
It's practicing you know the main point of this it's not making a nice application a good look like

281
00:17:16,290 --> 00:17:19,020
a good application with good looks.

282
00:17:19,020 --> 00:17:20,670
It's not the main point of this.

283
00:17:20,670 --> 00:17:24,210
The main point is just learn the basics of react.

284
00:17:24,210 --> 00:17:27,150
We're going to be going to be doing more sections with react.

285
00:17:27,160 --> 00:17:32,830
We need to all we are going to be learning a lot more things and we're going to be talking about life

286
00:17:32,830 --> 00:17:34,240
cycles.

287
00:17:34,440 --> 00:17:35,930
We need to talk about broader.

288
00:17:35,960 --> 00:17:38,010
That's going to be really interesting.

289
00:17:38,010 --> 00:17:40,430
So we still need to do a lot of things.

290
00:17:40,590 --> 00:17:43,610
So let's go to the next section and start with something new.

