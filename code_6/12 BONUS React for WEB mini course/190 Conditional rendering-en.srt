1
00:00:01,070 --> 00:00:08,240
So whenever re-act executes the render or the return with some GSX and so on we can make use of conditionals

2
00:00:08,330 --> 00:00:10,140
inside of the statements.

3
00:00:10,160 --> 00:00:15,000
So I'm going to create a new route to play with this just a little bit and create a simple route.

4
00:00:15,290 --> 00:00:21,650
And I've tried to create the brand here with you so we can get familiar with this process of creating

5
00:00:21,650 --> 00:00:22,260
routes.

6
00:00:22,430 --> 00:00:26,080
So this route is going to be called conditional just like that.

7
00:00:26,420 --> 00:00:28,610
I'm going to create a route that it's going to be conditional.

8
00:00:28,610 --> 00:00:34,070
We didn't have this just yet conditional just like that in a go at the bottom of the copy.

9
00:00:34,070 --> 00:00:37,810
This one going to go right here at the bottom.

10
00:00:37,850 --> 00:00:43,340
Then paste it and I'm going to say conditional and you know same named right here.

11
00:00:43,340 --> 00:00:46,770
Conditional.

12
00:00:47,070 --> 00:00:50,110
OK so I'm going to go and create the round for this.

13
00:00:50,110 --> 00:00:53,560
And again same thing conditional.

14
00:00:53,570 --> 00:00:57,950
I get to go at the top and grab that component's real simple.

15
00:00:57,950 --> 00:01:00,090
So we did this a few times already.

16
00:01:00,260 --> 00:01:02,790
But we didn't have the component as yet.

17
00:01:02,870 --> 00:01:08,320
So going to create it right now is going to be conditional digests and conditional is going to be just

18
00:01:08,330 --> 00:01:09,860
a functional components.

19
00:01:10,040 --> 00:01:13,260
So I get to go to home because we don't have much code right here.

20
00:01:13,410 --> 00:01:18,310
I'm just going to paste it and rename everything conditional conditional.

21
00:01:18,350 --> 00:01:19,220
There we go.

22
00:01:19,580 --> 00:01:22,020
And same thing right here at the bottom.

23
00:01:22,280 --> 00:01:27,530
And just to make sure that you're getting the correct roud I'm going to say conditional just like that.

24
00:01:28,100 --> 00:01:29,240
OK he's going to rewrite under.

25
00:01:29,270 --> 00:01:30,180
Everything is good.

26
00:01:30,230 --> 00:01:32,330
If you go to conditional You know it's working.

27
00:01:32,330 --> 00:01:34,100
We get that route.

28
00:01:34,550 --> 00:01:42,110
So now what we can do inside here inside of the return we can make use of curly braces and right here

29
00:01:42,170 --> 00:01:45,380
we can run kind of an IF statement.

30
00:01:45,940 --> 00:01:51,500
And it's a kind of because we cannot really use this we cannot do this right here.

31
00:01:51,710 --> 00:01:55,310
But what we can do we can use the ternary operator.

32
00:01:55,520 --> 00:02:01,310
If you don't know what fernery is it's going to be just checking of Arbel could be whatever.

33
00:02:01,380 --> 00:02:05,630
And then as you can to say equal equal or whatever you want to check you know in this case we want to

34
00:02:05,630 --> 00:02:05,970
check.

35
00:02:05,980 --> 00:02:06,770
It's true.

36
00:02:06,950 --> 00:02:11,780
And if it's true you can have something like this.

37
00:02:11,780 --> 00:02:17,540
So what it's happening right here is that it's going to check the value it's true and if it's true it's

38
00:02:17,540 --> 00:02:18,110
going to pass.

39
00:02:18,110 --> 00:02:21,900
So this statement just like NF is going to be true.

40
00:02:21,960 --> 00:02:26,640
So what's it's going to be rendered this code with Will will be executed.

41
00:02:26,870 --> 00:02:34,030
And if this is false which means that the rule the rule is there's no match with this rule begin to

42
00:02:34,030 --> 00:02:35,920
be outputting this content.

43
00:02:35,930 --> 00:02:37,190
So this is kind of a doing.

44
00:02:37,220 --> 00:02:41,580
If and then value triple equals true.

45
00:02:41,960 --> 00:02:45,960
And if it's true we rendered this one because it's this one and if.

46
00:02:45,960 --> 00:02:51,720
Else which is going to be the calling we render the other one to you know just the same thing.

47
00:02:51,730 --> 00:02:54,380
Then there's a shorter version.

48
00:02:54,380 --> 00:02:59,100
So inside re-act inside the Rander or the return we can do this.

49
00:02:59,390 --> 00:03:00,650
So I'm going to delete this.

50
00:03:00,650 --> 00:03:05,480
Now if we do that this condition it means that by default the value is true.

51
00:03:05,480 --> 00:03:06,880
We don't have a value right here.

52
00:03:06,890 --> 00:03:08,500
So I'm going to create a variable.

53
00:03:08,590 --> 00:03:12,770
There's going to be called value and it's going to be equal to true.

54
00:03:12,770 --> 00:03:18,710
Now if this condition this value is equal to true we want to render whatever code we have right here

55
00:03:19,130 --> 00:03:22,800
and what we can do we can return some GSX if you want it.

56
00:03:22,910 --> 00:03:30,880
So I'm going to say div opening close and this let me put it at the bottom div is going to say hello.

57
00:03:31,040 --> 00:03:33,220
It's true.

58
00:03:33,380 --> 00:03:37,440
Now if this condition it's not math which means it's false.

59
00:03:37,460 --> 00:03:42,180
What we can do we can say no nothing is going to be is going to get rendered.

60
00:03:42,410 --> 00:03:43,870
So if we check this we get.

61
00:03:43,910 --> 00:03:44,640
Hello.

62
00:03:44,660 --> 00:03:45,480
It's true.

63
00:03:45,760 --> 00:03:52,520
Now if I change it to false let me put right here this and see it change on the fly.

64
00:03:52,640 --> 00:03:55,820
One second Almazan.

65
00:03:55,820 --> 00:04:02,130
So if I save it it's going to reload and we are not getting anything because this condition is not met.

66
00:04:02,180 --> 00:04:03,790
And again this is the same thing.

67
00:04:03,790 --> 00:04:07,500
And in this just like that.

68
00:04:07,550 --> 00:04:11,950
So if we change it to true of course it works.

69
00:04:12,470 --> 00:04:17,630
Of course if you wanted to do the opposite we would we would have to to change the statement just a

70
00:04:17,630 --> 00:04:18,160
little bit.

71
00:04:18,290 --> 00:04:20,440
If you say that this one is false.

72
00:04:20,740 --> 00:04:22,870
What we can do of course it's not going to work.

73
00:04:22,880 --> 00:04:26,750
But what we can do we can add some more GSX right here at the bottom.

74
00:04:27,080 --> 00:04:30,000
So we could say div and then hello.

75
00:04:30,140 --> 00:04:34,490
It's false.

76
00:04:34,510 --> 00:04:36,990
So if the values are not false we get.

77
00:04:37,100 --> 00:04:42,880
And if we change it to false decoded the code that's going to run is going to be this one.

78
00:04:42,880 --> 00:04:44,760
So we can we can make use of this.

79
00:04:44,760 --> 00:04:50,010
I'm going to be using this the whole time you know this is pretty common right now.

80
00:04:50,390 --> 00:04:51,350
So OK.

81
00:04:51,370 --> 00:04:56,090
So right now we are just checking a viable what we can do we can use a function.

82
00:04:56,110 --> 00:05:01,450
Let's say I'm going to create a function that is going to be returning a Boolean or whatever it's going

83
00:05:01,450 --> 00:05:02,860
to say return value.

84
00:05:03,160 --> 00:05:08,200
And that's when it's going to be equal to fat R-OH function just like that.

85
00:05:08,200 --> 00:05:12,150
And you know you're going to do all your logic right here whatever.

86
00:05:12,190 --> 00:05:14,210
Then at the end you're going to return something.

87
00:05:14,230 --> 00:05:17,430
In this case I just get this function returns true.

88
00:05:17,710 --> 00:05:23,780
So what we can do instead of checking viable we can check the function function returns true.

89
00:05:23,980 --> 00:05:24,430
We get.

90
00:05:24,450 --> 00:05:24,780
Hello.

91
00:05:24,790 --> 00:05:28,000
It's true if it's returning false we get.

92
00:05:28,030 --> 00:05:28,710
Hello.

93
00:05:28,750 --> 00:05:36,120
It's a false that mistake false so you know that's working.

94
00:05:36,140 --> 00:05:41,550
So you know you can use a function you can do whatever function you want and then you just check this.

95
00:05:41,600 --> 00:05:45,920
And now right here we are just returning this content right here inside.

96
00:05:45,920 --> 00:05:52,130
But what we can do we can just make all of this logic inside the actual function.

97
00:05:52,200 --> 00:05:54,700
It's going to create different function just to prove this.

98
00:05:54,900 --> 00:06:00,680
It's going to see a concert and then show it of course is going to be a fat R.O. function just like

99
00:06:00,680 --> 00:06:01,850
before.

100
00:06:02,240 --> 00:06:04,830
And this one is going to be returning something.

101
00:06:04,880 --> 00:06:11,930
So I'm going to grab this just copy and paste it down here and I'm going to copy all of this and then

102
00:06:11,930 --> 00:06:13,020
just delete it.

103
00:06:13,340 --> 00:06:15,250
So we are just calling this a show.

104
00:06:15,260 --> 00:06:16,210
Show it.

105
00:06:16,210 --> 00:06:16,740
So ink.

106
00:06:16,850 --> 00:06:23,630
So here what we can do if you think about it if we do the same thing then before we say return and we

107
00:06:23,660 --> 00:06:27,750
return this code just like this.

108
00:06:27,820 --> 00:06:31,830
So you know this one will not work but it is a drag.

109
00:06:31,830 --> 00:06:36,650
Here we are calling this function and we are returning something and we are returning something in curly

110
00:06:36,650 --> 00:06:37,320
braces.

111
00:06:37,370 --> 00:06:42,920
So whenever you try to return something inside of a function with react which means you want to return

112
00:06:42,920 --> 00:06:45,120
some GSX this one.

113
00:06:45,140 --> 00:06:47,380
Now it's not going to work.

114
00:06:47,390 --> 00:06:54,570
So what I need to do we need to wrap everything in parenthesis this way it's going to work.

115
00:06:54,590 --> 00:06:57,280
Now it is that we have the turn ready we need to address.

116
00:06:57,320 --> 00:07:00,740
So I'm going to I'm going to use the same function that we have on top.

117
00:07:00,860 --> 00:07:03,790
So if return value it's equal to true.

118
00:07:03,800 --> 00:07:09,230
We want to to return this or we want to return.

119
00:07:09,230 --> 00:07:09,780
Yes.

120
00:07:09,930 --> 00:07:10,280
OK.

121
00:07:10,340 --> 00:07:14,620
So I'm going to save it and look at we get.

122
00:07:14,880 --> 00:07:15,340
Hello.

123
00:07:15,360 --> 00:07:18,150
It's false because the return value is false.

124
00:07:18,330 --> 00:07:21,470
If we change it to true of course we get.

125
00:07:21,750 --> 00:07:22,460
Hello.

126
00:07:22,530 --> 00:07:23,570
It's true.

127
00:07:23,880 --> 00:07:31,170
So don't worry you will have the chance to interact and do more logic more complex logic using the conditionals

128
00:07:31,260 --> 00:07:33,700
inside the actual render.

129
00:07:33,990 --> 00:07:35,750
OK so let's move forward.

130
00:07:35,760 --> 00:07:37,460
Let's go to the next topic.

131
00:07:37,490 --> 00:07:39,710
We're going to be talking about pure components.

