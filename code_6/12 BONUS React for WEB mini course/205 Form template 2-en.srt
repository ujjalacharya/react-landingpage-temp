1
00:00:01,000 --> 00:00:02,920
OK so let's continue with this.

2
00:00:02,920 --> 00:00:08,500
So right here you're are just looping the information we have right here so we need to at least display

3
00:00:08,500 --> 00:00:09,190
something.

4
00:00:09,220 --> 00:00:11,770
Nothing is happening because we need to do this.

5
00:00:11,770 --> 00:00:14,490
We need to make a reference to form template.

6
00:00:14,560 --> 00:00:16,700
That's the thing that we are returning.

7
00:00:16,810 --> 00:00:21,060
And it's again say this when it's equal to you know some GSX.

8
00:00:21,370 --> 00:00:24,320
So opening close just like that.

9
00:00:24,440 --> 00:00:30,780
So if I save it we're going to get to IMPA it's because we have two different templates that's good.

10
00:00:31,090 --> 00:00:36,130
So I get to go back to form fields that begin to be you know adding all the logic for this.

11
00:00:36,130 --> 00:00:44,500
So now on each iteration we have the items you know each item which is going to be each form element.

12
00:00:44,500 --> 00:00:51,620
So now inside data we have access to data settings and we have all the information about that item.

13
00:00:51,640 --> 00:00:54,010
Let's go to the first one let's go bit by bit.

14
00:00:54,020 --> 00:01:00,610
Now the first element says that we want to label and the label is going to be a name you know we have

15
00:01:00,610 --> 00:01:07,360
a label text and right here we have the ability to you know to to include the Leavell or not.

16
00:01:07,360 --> 00:01:11,860
So I'm going to go to a form fields and I'm going to be creating a function that is going to be checking

17
00:01:11,860 --> 00:01:15,130
all this data and return a Leavell if we need it.

18
00:01:15,130 --> 00:01:18,880
So he's going to be show level just like that.

19
00:01:19,120 --> 00:01:24,720
And this show label is going to be receiving values DOT level.

20
00:01:24,730 --> 00:01:29,340
Remember we made reference to values which is equal data that settings.

21
00:01:29,350 --> 00:01:37,000
Now if we don't do this each time we pass a value we need to do data that settings that level something

22
00:01:37,000 --> 00:01:37,680
like that.

23
00:01:37,710 --> 00:01:39,500
You know it's just pretty boring.

24
00:01:39,770 --> 00:01:46,770
So OK so I'm going to do this you know do something else going to do values that label.

25
00:01:46,960 --> 00:01:53,660
Now then we to do a coma and we're going to be passing values DOT level text.

26
00:01:53,890 --> 00:01:58,250
So pretty much we are passing this Balis.

27
00:01:58,660 --> 00:02:02,600
OK so this is going to go to a function that calls show level.

28
00:02:02,710 --> 00:02:05,620
We didn't have this function begin to create it right now.

29
00:02:05,950 --> 00:02:10,180
So this show label is going to be you know just checking if we have a label or not.

30
00:02:10,180 --> 00:02:17,310
So I'm going to say Konst show Leavell this show label's going to receive two prompts me.

31
00:02:17,320 --> 00:02:24,270
Make it nice and it's going to be receiving the arguments that if we want to show it and then we're

32
00:02:24,270 --> 00:02:31,870
going to be getting the actual labels are going to call it show and label now are going to be returning

33
00:02:31,870 --> 00:02:35,460
something of course dysfunction is going to be returning believe it or not.

34
00:02:35,530 --> 00:02:41,580
So I'm going to say return now if we have a show which just means it means that we have true.

35
00:02:41,680 --> 00:02:42,960
We're going to do something.

36
00:02:43,050 --> 00:02:44,990
And if not we're going to do something else.

37
00:02:45,070 --> 00:02:47,940
We're going to be returning No because we don't have a label.

38
00:02:48,130 --> 00:02:48,630
OK.

39
00:02:48,790 --> 00:02:52,070
So I'm going to go right here at the bottom I got to say level.

40
00:02:52,210 --> 00:02:59,500
So in the case that this one is true we want to return a label that has you know the label text on going

41
00:02:59,500 --> 00:03:00,610
to say label.

42
00:03:00,970 --> 00:03:01,800
OK.

43
00:03:02,230 --> 00:03:05,950
So if we go right here we get name and we get the last name again.

44
00:03:06,000 --> 00:03:08,620
We are just looping each item.

45
00:03:08,630 --> 00:03:13,020
It's matching the type of the element it's entering the template.

46
00:03:13,030 --> 00:03:14,670
It's creating the template.

47
00:03:14,800 --> 00:03:19,190
And then at the end it's going to it's going to return that specific input right here.

48
00:03:19,420 --> 00:03:25,480
So the application it's including first name and then the last name because we have two different elements

49
00:03:25,640 --> 00:03:27,730
now make sense so far.

50
00:03:28,060 --> 00:03:33,710
So let's you know continue creating the actual input you know the most important part.

51
00:03:34,120 --> 00:03:38,070
So I get to create an input because we have an input.

52
00:03:38,080 --> 00:03:44,170
If the case is select instead of input begin to do select you know we can do this later so we can have

53
00:03:44,170 --> 00:03:50,140
a whatever I'm going to have an impact and this input is going to be a self-closing tag.

54
00:03:50,300 --> 00:03:53,790
This is going to be requiring some configuration.

55
00:03:53,980 --> 00:04:02,500
If you remember inside user inside form data and the name of input inside config we have all the information

56
00:04:02,590 --> 00:04:03,370
about that.

57
00:04:03,460 --> 00:04:08,740
You know that input the name the text and the place holder whatever.

58
00:04:09,250 --> 00:04:11,000
Ok so I'm going to go.

59
00:04:11,110 --> 00:04:16,500
But back to form fields and are going to be adding all the information that we need.

60
00:04:16,820 --> 00:04:19,120
I'm going to atomistic right here let's go back.

61
00:04:19,120 --> 00:04:22,460
It's not text it's not it's type.

62
00:04:22,560 --> 00:04:25,070
Maybe you notice this and you were saying do you mean it was day.

63
00:04:25,100 --> 00:04:26,160
Well yeah I did.

64
00:04:26,530 --> 00:04:32,920
So the type is going to be type text you know type text make sense are going to be going to go back

65
00:04:32,920 --> 00:04:33,920
to form fields.

66
00:04:34,120 --> 00:04:36,990
And now we need to pass this configuration.

67
00:04:37,000 --> 00:04:38,520
How do we pass it.

68
00:04:38,620 --> 00:04:41,840
One way of doing it is just creating a type.

69
00:04:41,860 --> 00:04:45,430
It's going to be equal to values.

70
00:04:45,640 --> 00:04:51,000
You know config and then type something like that.

71
00:04:51,190 --> 00:04:56,360
But since all the information that you have you have it inside you know an actual object.

72
00:04:56,530 --> 00:04:59,490
What you could do is something much simpler.

73
00:04:59,500 --> 00:05:01,500
You can do that dad.

74
00:05:01,630 --> 00:05:05,710
And then values that config.

75
00:05:05,710 --> 00:05:06,740
So now react.

76
00:05:06,760 --> 00:05:11,800
It's going to be creating a property for each data that we have inside config.

77
00:05:11,800 --> 00:05:15,330
So if I go to confect if I go to the view we have.

78
00:05:15,340 --> 00:05:17,200
Enter your name and enter your last name.

79
00:05:17,200 --> 00:05:23,310
You know we are getting the placeholder me make this bigger let it go go.

80
00:05:23,640 --> 00:05:29,730
So we have the type which was text the name name empathy and then the placeholder remember that if you

81
00:05:29,730 --> 00:05:35,990
add something right here that should not be included inside the actual input as a property.

82
00:05:36,000 --> 00:05:37,280
You know it's going to get included.

83
00:05:37,290 --> 00:05:43,020
So remember that the only information that we need to get right here inside confect is whatever we're

84
00:05:43,030 --> 00:05:44,660
going to be putting right here.

85
00:05:45,070 --> 00:05:45,310
OK.

86
00:05:45,330 --> 00:05:47,480
So let's go back to form fields.

87
00:05:47,700 --> 00:05:49,070
Now what else do we need.

88
00:05:49,170 --> 00:05:51,350
We need the input we need to value.

89
00:05:51,360 --> 00:05:53,330
This is going to be a control component.

90
00:05:53,400 --> 00:05:55,180
So we're going to be adding value.

91
00:05:55,380 --> 00:06:01,810
It's going to go right here at the bottom and save value equal to values.

92
00:06:02,490 --> 00:06:05,840
DODD And if we check right here we have value.

93
00:06:05,880 --> 00:06:10,090
So I'm going to say value of course value.

94
00:06:10,330 --> 00:06:14,460
So now this impede the value of this input it's going to be whatever we have right here.

95
00:06:14,460 --> 00:06:21,580
If I save Francis the application will reload and we're going to have a pretty fine value right here.

96
00:06:21,690 --> 00:06:23,400
Let me save it.

97
00:06:23,400 --> 00:06:24,220
There you go.

98
00:06:24,660 --> 00:06:25,960
So we have Frances that's good.

99
00:06:25,980 --> 00:06:27,550
So that is working.

100
00:06:28,110 --> 00:06:28,390
OK.

101
00:06:28,410 --> 00:06:29,760
So everything is ready.

102
00:06:29,790 --> 00:06:35,790
We are creating and we are creating the inputs are going to be creating a text file and we're going

103
00:06:35,790 --> 00:06:39,760
to be creating a select feel but we're going to be doing that in a minute.

104
00:06:39,800 --> 00:06:41,890
Now what do we need to do next.

105
00:06:41,890 --> 00:06:50,070
Well it's really important for us whenever we submit the form we need a way right here when we submit

106
00:06:50,460 --> 00:06:56,800
we need a way to pass a function right here that is going to be catching the new state of the ballot.

107
00:06:56,800 --> 00:06:59,890
Remember you are going to be using a control component.

108
00:07:00,240 --> 00:07:03,200
It's going to be grabbing the value that we are typing here.

109
00:07:03,420 --> 00:07:09,290
It's going to access the form data updating information update the value.

110
00:07:09,390 --> 00:07:12,430
And then the application is going to be read rendering.

111
00:07:12,440 --> 00:07:18,420
You know with the new value maybe then a and whatever we need to do that right now is going to be a

112
00:07:18,420 --> 00:07:19,310
little bit confusing.

113
00:07:19,320 --> 00:07:20,190
But don't worry.

114
00:07:20,280 --> 00:07:22,940
You know again telling you how to do it step by step.

115
00:07:24,320 --> 00:07:27,290
OK so now let's read that on change.

116
00:07:27,380 --> 00:07:29,890
So we can update you know the news date.

117
00:07:29,900 --> 00:07:35,990
So first I'm going to go to user and of course what we need to do we need to pass a function that is

118
00:07:35,990 --> 00:07:40,040
going to be receiving the new state after we type a new value.

119
00:07:40,130 --> 00:07:43,410
It is going to be adding you know updating the state.

120
00:07:43,520 --> 00:07:48,890
So I gotta go right here to form Phil's and at the beginning this is not going to make sense but don't

121
00:07:48,890 --> 00:07:50,810
worry it's going to make sense in a minute.

122
00:07:50,990 --> 00:07:54,800
I'm going to say change is going to be equal to something.

123
00:07:54,800 --> 00:07:59,690
So now whenever we get in book form fields begin to be passing a function that is going to be called

124
00:07:59,690 --> 00:08:01,220
change.

125
00:08:01,790 --> 00:08:08,730
So change is going to be equal to use date because we need to pass the new state.

126
00:08:09,020 --> 00:08:11,340
And again Don't worry is going to make sense.

127
00:08:11,360 --> 00:08:17,930
So it's going to be whenever we do this whenever we trigger this change function is going to be calling

128
00:08:17,930 --> 00:08:22,590
to a function that is going to be called update up date.

129
00:08:22,880 --> 00:08:29,030
And then four and then you state and let me make it right.

130
00:08:29,040 --> 00:08:30,830
You state.

131
00:08:30,850 --> 00:08:38,300
So the main job of this update form is going to be grabbing the new state of the you know the inputs

132
00:08:38,660 --> 00:08:43,260
and do set state of whatever new state we have.

133
00:08:43,400 --> 00:08:48,530
So if we go right here the top I can call this update form going to say update form.

134
00:08:48,560 --> 00:08:58,070
It's going to be equal to this new state that we're going to be getting on the ride new state and this

135
00:08:58,070 --> 00:08:58,750
new state.

136
00:08:58,880 --> 00:09:01,350
Of course we're going to be running a function with this.

137
00:09:01,640 --> 00:09:04,390
And this of course is going to do this this this.

138
00:09:04,400 --> 00:09:09,950
That said state and whatever data we have right here for now I'm just going to do Konsole long.

139
00:09:10,070 --> 00:09:14,080
And then again a console log you know hello whatever.

140
00:09:14,930 --> 00:09:21,440
So oh sorry instead of doing hello I'm going to show the new state now we don't have this function.

141
00:09:21,440 --> 00:09:26,020
We don't have something that connects to this change and we get it created right now.

142
00:09:26,150 --> 00:09:33,170
But notice no that whenever we Boag we never call it we call the change within the form fields is going

143
00:09:33,170 --> 00:09:38,160
to be running a function that it's going to be expecting a.

144
00:09:38,300 --> 00:09:43,370
You know an argument with some data and then it's going to be passing whatever we're getting from the

145
00:09:43,370 --> 00:09:48,370
other component is going to pass it to that form you know with the new arguments.

146
00:09:48,380 --> 00:09:51,110
So this one this ones are just the same.

147
00:09:51,170 --> 00:09:53,980
The only difference is that you're getting it from a different place.

148
00:09:53,990 --> 00:09:58,950
This one is receiving from foreign fields and this one this one right here.

149
00:09:58,970 --> 00:10:03,230
It's passing the update form as an argument.

150
00:10:03,230 --> 00:10:03,660
All right.

151
00:10:03,710 --> 00:10:05,960
Don't worry you're going to see it in a minute.

152
00:10:06,080 --> 00:10:11,900
Senators and now whenever we change of an input when we trigger a change whenever we type something

153
00:10:12,350 --> 00:10:15,820
just like with did before we need to run an event.

154
00:10:15,890 --> 00:10:21,230
So it's going to be on change and the change is going to be equal to something.

155
00:10:21,260 --> 00:10:26,560
Now this change first is going to grab the event because we need to grab the value and they're begin

156
00:10:26,570 --> 00:10:33,150
to be running a function that can be called Change hand or good.

157
00:10:33,740 --> 00:10:37,530
Now this change handler is going to be passing the event makes sense.

158
00:10:37,670 --> 00:10:39,800
You already did this in the past.

159
00:10:39,800 --> 00:10:42,380
So we don't have dysfunction that's created right now.

160
00:10:42,510 --> 00:10:49,300
Going to say change handlers going to be equal to make Konst right here.

161
00:10:49,400 --> 00:10:52,360
Maybe it was like the pope.

162
00:10:52,430 --> 00:10:57,940
So this change handler is going to be receiving and event it's going to be called to a function opening

163
00:10:57,950 --> 00:10:58,790
close.

164
00:10:58,910 --> 00:11:02,200
So now whenever we type something we have access to the event.

165
00:11:02,210 --> 00:11:08,600
So what we can do is say console log event that target that value.

166
00:11:08,680 --> 00:11:14,690
And if we go right here to the component I type f so we get the T.F. we get whatever.

167
00:11:14,770 --> 00:11:15,030
OK.

168
00:11:15,050 --> 00:11:15,680
So it's working.

169
00:11:15,680 --> 00:11:18,200
We are getting the data inside change handler.

170
00:11:18,230 --> 00:11:23,190
But the thing is the problem is that whenever we type something we are not updating the state.

171
00:11:23,360 --> 00:11:28,820
So we only get you know the letter I'm typing the character I'm typing.

172
00:11:28,820 --> 00:11:35,840
So we need a way to catch that information store it someplace and then pass the new state of form data.

173
00:11:35,840 --> 00:11:38,620
That's the main point of this.

174
00:11:38,630 --> 00:11:41,770
Now the thing is that we are getting the event right.

175
00:11:42,110 --> 00:11:48,710
So now whenever we have this component loads we have a prop and inside probably have something called

176
00:11:48,710 --> 00:11:53,100
form data which is you know the current state of the application.

177
00:11:53,420 --> 00:12:00,890
So what we need to do we need to access form data find the name of the input that we want to change

178
00:12:00,890 --> 00:12:05,080
because at this point inside event we don't have that.

179
00:12:05,210 --> 00:12:08,450
So we need to wait to pass the the the name of the input.

180
00:12:08,450 --> 00:12:13,980
We want to change and then access that modify it and pass the new state.

181
00:12:14,150 --> 00:12:14,860
OK.

182
00:12:15,140 --> 00:12:16,070
Going to delete this.

183
00:12:16,080 --> 00:12:19,090
Now I'm going to need it now so far.

184
00:12:19,130 --> 00:12:25,620
Whenever we call change handler we're just passing the event but you are also going to need is the name

185
00:12:25,620 --> 00:12:28,110
of the Emperor that we want to modify.

186
00:12:28,110 --> 00:12:35,640
If you remember whenever we do right here for example whenever we pass prompts we have right here inside

187
00:12:35,640 --> 00:12:36,410
the template.

188
00:12:36,540 --> 00:12:37,320
We have data.

189
00:12:37,320 --> 00:12:43,920
So if I do console log and data let's go one more time to N.F..

190
00:12:44,010 --> 00:12:50,100
Now we get ID name which is the name of the input and then settings and then we have an ID.

191
00:12:50,130 --> 00:12:51,140
And then last name.

192
00:12:51,150 --> 00:12:58,160
So what we need to do we need to catch this ID and password to change handler so gay.

193
00:12:58,200 --> 00:13:02,550
So I'm going to say coma and then data that ID.

194
00:13:02,550 --> 00:13:08,370
So now this function is going to receive two arguments the actual event and the ID of the elements we

195
00:13:08,370 --> 00:13:09,880
want to modify.

196
00:13:10,280 --> 00:13:10,970
OK.

197
00:13:11,400 --> 00:13:14,850
Now what do we need to do we need to update the new state.

198
00:13:14,850 --> 00:13:20,580
So I'm going to say Kunst and are going to create a novel that is going to be called new state and this

199
00:13:20,580 --> 00:13:29,910
one is going to be equal to prop's dot form data now form data its going to be equal to all of this

200
00:13:29,910 --> 00:13:32,060
to all the inputs that we have.

201
00:13:32,340 --> 00:13:33,050
Okay.

202
00:13:33,600 --> 00:13:40,170
So now inside the new state since we have the ID of what we want to change what we can do is going to

203
00:13:40,170 --> 00:13:47,980
say let me go right here is going to be going to new state you know access that variable then fine the

204
00:13:48,090 --> 00:13:55,500
ID find the ID and then of course we can be access in the value and the value is going to be equal to

205
00:13:55,560 --> 00:14:00,630
event that target dot value.

206
00:14:01,370 --> 00:14:07,630
Okay so now let me do the console log and then you state so we can see what we get is going to reload

207
00:14:07,650 --> 00:14:09,170
the application any file type.

208
00:14:09,170 --> 00:14:16,960
NF We know we get the new state viable and if I do go to name inside value we have a neph.

209
00:14:17,010 --> 00:14:23,660
OK so this is working we are adding the value inside the correct place.

210
00:14:23,880 --> 00:14:31,590
So now since we have the new state of things what we need to do is we need to pass this new state to

211
00:14:31,590 --> 00:14:35,640
the user component and the user component is going to be doing that.

212
00:14:35,910 --> 00:14:38,100
That said stayed with the new state.

213
00:14:38,210 --> 00:14:38,790
Okay.

214
00:14:39,240 --> 00:14:46,310
So if I go to form fields going to delete this can save it and I guess the video is going too long.

215
00:14:46,320 --> 00:14:51,240
So we're going to be doing this on the next section where we're going to be doing is just passing the

216
00:14:51,240 --> 00:14:55,170
news tade to the other component so we can update that state.

