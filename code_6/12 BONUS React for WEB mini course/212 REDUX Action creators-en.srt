1
00:00:00,930 --> 00:00:06,120
OK so now what we need to do we need to add an action creator the action creator is going to be the

2
00:00:06,120 --> 00:00:09,110
one in charge to connect with the producer.

3
00:00:09,390 --> 00:00:14,490
And you know just like with it with that we do so we need a place where we can be hosting all the action

4
00:00:14,490 --> 00:00:15,230
creators.

5
00:00:15,330 --> 00:00:21,010
So I get to go inside source Negre create a new folder called actions just like this.

6
00:00:21,270 --> 00:00:27,480
And now just like reducers we going to have a new file inside of actions called index that Jay has.

7
00:00:27,510 --> 00:00:28,130
All right.

8
00:00:28,410 --> 00:00:32,000
So this is going to be changing this structure is going to be changing in a little while.

9
00:00:32,190 --> 00:00:37,290
So inside actions we're going to have a list of all the actions and you can have multiple actions not

10
00:00:37,290 --> 00:00:37,790
just one.

11
00:00:37,800 --> 00:00:38,420
Right.

12
00:00:38,610 --> 00:00:43,220
So this actually creator is just going to be a function just like the reducer.

13
00:00:43,440 --> 00:00:48,930
So I'm going to say export and then function and notice that I'm not using the default because we could

14
00:00:48,930 --> 00:00:50,680
have many functions.

15
00:00:50,880 --> 00:00:55,410
So going to export a function and this one is going to be called movies list.

16
00:00:55,890 --> 00:00:56,210
Right.

17
00:00:56,280 --> 00:00:56,850
OK.

18
00:00:57,490 --> 00:01:03,900
So the real world for example if we want to make a network request we're going to be using x make that

19
00:01:03,900 --> 00:01:05,560
requires then whatever whatever.

20
00:01:05,710 --> 00:01:08,640
And at the end remember that X just returns a promise.

21
00:01:08,700 --> 00:01:12,210
So whenever we get the promise we get the data we need.

22
00:01:12,240 --> 00:01:13,700
You know the list of movies.

23
00:01:14,010 --> 00:01:17,730
So whenever we get the data out what we do we return an object.

24
00:01:17,730 --> 00:01:24,220
The main the only thing that that this function needs to do is just to return an object.

25
00:01:24,240 --> 00:01:27,180
Now we're going to say Return going to hard code.

26
00:01:27,180 --> 00:01:30,450
For now we're going to be of course doing an ad request and everything else.

27
00:01:30,450 --> 00:01:32,880
For now we're just going to learn the basics.

28
00:01:32,910 --> 00:01:34,850
So it's just going to be returning an object.

29
00:01:34,860 --> 00:01:37,890
This object needs to have a type.

30
00:01:37,950 --> 00:01:42,690
And if you remember this type is the one we need to use to match with the reducer.

31
00:01:42,840 --> 00:01:46,770
In this case the user has a type of movies list.

32
00:01:46,870 --> 00:01:48,980
It's going to go and put moves list.

33
00:01:48,990 --> 00:01:53,910
The second thing that this object needs to have is going to be a payload.

34
00:01:53,910 --> 00:01:58,610
Now the payload is going to be just the data we get from the server.

35
00:01:58,620 --> 00:02:05,220
You know the list of movies have an object right here so you don't have to type I'm to paste it.

36
00:02:05,310 --> 00:02:10,740
So we're going to have just a just an array of objects with three movies both fiction because I love

37
00:02:10,740 --> 00:02:11,760
that movie.

38
00:02:11,880 --> 00:02:13,660
Then a Pacific Rim because I love it.

39
00:02:13,680 --> 00:02:15,620
I know it's a stupid movie but I love it.

40
00:02:15,840 --> 00:02:16,880
And then we have Rambo.

41
00:02:16,890 --> 00:02:18,370
But the first one first blood.

42
00:02:18,390 --> 00:02:21,350
The other ones are really shady.

43
00:02:21,440 --> 00:02:21,790
OK.

44
00:02:21,810 --> 00:02:24,080
So now this is it.

45
00:02:24,120 --> 00:02:25,690
This is our action Creator.

46
00:02:25,710 --> 00:02:29,740
At the end it always returns an object with a type and a payload.

47
00:02:30,000 --> 00:02:35,570
So now what's going to happen is that for example the application starts in our app function.

48
00:02:35,580 --> 00:02:38,740
This component is going to call this function.

49
00:02:38,760 --> 00:02:44,760
This function is going to go to the reducers and it's going to be finding a match with the movers list.

50
00:02:44,910 --> 00:02:50,970
The producer is going to be returning the previous has stayed with the movies we have inside of the

51
00:02:50,970 --> 00:02:55,100
action creator right action that action that payload.

52
00:02:55,470 --> 00:03:02,610
So now the combined reducers we have right here is going to be always listening for what happens inside

53
00:03:02,610 --> 00:03:03,890
the reducers.

54
00:03:04,200 --> 00:03:09,320
So it's going to be detecting a change you know it's going to know that something happened and it's

55
00:03:09,340 --> 00:03:15,250
going to be connecting to the application right to the provider is going to say OK I do it.

56
00:03:15,600 --> 00:03:16,980
I just received new data.

57
00:03:16,980 --> 00:03:22,110
So I have and you stayed and it's going to be passing and storing the new state.

58
00:03:22,140 --> 00:03:28,410
The application is going to know that something happened and you can a new state and of course you're

59
00:03:28,410 --> 00:03:32,290
going to be able to access that state from within the components.

60
00:03:32,310 --> 00:03:36,330
And there you go and you get the at the information that you need it.

61
00:03:36,330 --> 00:03:42,920
So now if you notice there is no connection at all between this action creator and the actual reduce

62
00:03:42,940 --> 00:03:48,880
her user and it's combined with the combined reducers and they combined reducers with the actual store.

63
00:03:48,990 --> 00:03:51,750
But the actions it's not related.

64
00:03:51,750 --> 00:03:53,280
So what we're going to be doing next.

65
00:03:53,280 --> 00:04:00,270
It's going to be creating just changing this app to be a state state component and begin to be connecting

66
00:04:00,320 --> 00:04:05,610
an action see how to use the actions to connect with the reducers.

67
00:04:05,610 --> 00:04:09,000
And you know and update the store and the state.

68
00:04:09,280 --> 00:04:11,000
So we are going to be doing that right now.

69
00:04:11,810 --> 00:04:17,000
OK so how to connect the action creators with the producers and the actual component.

70
00:04:17,070 --> 00:04:21,020
OK we're going to be doing that right now so I'm going to delete this Konst app.

71
00:04:21,050 --> 00:04:24,460
Just going to delete it and I'm going to create a new components right.

72
00:04:24,470 --> 00:04:26,210
A class based component.

73
00:04:26,270 --> 00:04:30,230
So I'm going to go to source create a new file that it's going to be called app.

74
00:04:30,280 --> 00:04:31,300
Yes.

75
00:04:31,360 --> 00:04:34,820
Now app that jazz is going to be a class based component.

76
00:04:34,820 --> 00:04:38,610
So first we need to import re-act from Bre act.

77
00:04:38,630 --> 00:04:44,690
Then we bring components just like this then from and react to.

78
00:04:44,750 --> 00:04:51,440
So then we need to create a class that it's going to be called app and then extends and then component

79
00:04:52,670 --> 00:04:56,230
and this one is going to be render it's going to be going to use the render method.

80
00:04:56,240 --> 00:04:59,000
And of course we always need to return something.

81
00:04:59,120 --> 00:05:06,190
So we say return and for now which is going to return a simple simple dev saying hello whatever.

82
00:05:06,590 --> 00:05:10,840
Now I'm going to go at the bottom I'm going to say export then default.

83
00:05:10,840 --> 00:05:12,220
There we go.

84
00:05:12,260 --> 00:05:16,630
And then of course he's going to be app and are going to delete this time.

85
00:05:16,970 --> 00:05:18,950
So we have our class based components.

86
00:05:19,070 --> 00:05:25,820
So I'm going to go back to index and I'm going to import the app and then from and it's going to be

87
00:05:25,820 --> 00:05:28,160
a dot forward slash and then app.

88
00:05:28,220 --> 00:05:29,140
Right.

89
00:05:29,270 --> 00:05:32,040
So if I saved the project reload the application.

90
00:05:32,170 --> 00:05:32,740
Oh sorry.

91
00:05:32,750 --> 00:05:35,170
We should be getting hello so we get.

92
00:05:35,180 --> 00:05:35,640
Hello.

93
00:05:35,730 --> 00:05:36,110
That's good.

94
00:05:36,170 --> 00:05:37,310
So it's working.

95
00:05:37,600 --> 00:05:38,330
So OK.

96
00:05:38,480 --> 00:05:45,350
So how do we connect we bind redux with the actions and the users and everything else.

97
00:05:45,440 --> 00:05:45,910
OK.

98
00:05:46,130 --> 00:05:50,220
So first we would need do we need to bring something from re-act redux.

99
00:05:50,270 --> 00:05:52,160
Remember that redux.

100
00:05:52,160 --> 00:05:54,000
It's not react.

101
00:05:54,080 --> 00:05:54,550
OK.

102
00:05:54,590 --> 00:05:56,270
Not from the same developers.

103
00:05:56,270 --> 00:05:58,400
So we need a way to connect them both.

104
00:05:58,440 --> 00:06:06,460
You know this re-act notation and the re-act code and and re-act redux.

105
00:06:06,470 --> 00:06:14,750
So we bring import and what we do we can use something called connect and we bring it from react and

106
00:06:14,750 --> 00:06:17,270
then redux.

107
00:06:17,270 --> 00:06:24,920
So this connect is going to be in charge of connecting whatever logic we have from redux with this application.

108
00:06:24,920 --> 00:06:26,420
With this class.

109
00:06:26,420 --> 00:06:27,420
So how do we use it.

110
00:06:27,500 --> 00:06:29,600
OK so I'm going to go to the export default.

111
00:06:29,630 --> 00:06:31,160
I'm going to delete the app.

112
00:06:31,300 --> 00:06:37,650
I'm going to use the connect instead of this connect it's going to be using two different arguments.

113
00:06:37,670 --> 00:06:38,170
Right.

114
00:06:38,240 --> 00:06:40,750
Two different arguments begin to be talking about this.

115
00:06:40,820 --> 00:06:42,100
But for now I'm going to pass.

116
00:06:42,110 --> 00:06:43,750
No you get changes.

117
00:06:43,760 --> 00:06:44,260
Change it.

118
00:06:44,270 --> 00:06:46,040
Change this in a minute.

119
00:06:46,190 --> 00:06:48,140
And then what are we going to do.

120
00:06:48,140 --> 00:06:51,510
We're going to be just rendering the app and the application reload.

121
00:06:51,530 --> 00:06:55,510
And we are still getting Coloe So you know we are not getting any error messages.

122
00:06:55,520 --> 00:06:57,450
So this is working.

123
00:06:57,470 --> 00:07:01,230
So now this connect takes this this arguments.

124
00:07:01,550 --> 00:07:08,240
The first argument is going to be something called Map state prompts which show something else and to

125
00:07:08,240 --> 00:07:12,120
save it we're going to go right here on the East Coast plug ins.

126
00:07:12,310 --> 00:07:17,780
You have to find if you want of course there is something called re-act redux.

127
00:07:17,790 --> 00:07:19,970
Yes six snippets.

128
00:07:19,970 --> 00:07:24,310
So the this one it's true to use snippets of redux.

129
00:07:24,310 --> 00:07:25,090
Right.

130
00:07:25,210 --> 00:07:28,140
They're going to show you why it's good to install it.

131
00:07:28,400 --> 00:07:35,060
So what we need to do right here and I'm going to be typing after the class I want to do map state prompts

132
00:07:35,800 --> 00:07:39,800
and you know it's good to have a snippet because if you have to type this by hand every time you have

133
00:07:39,800 --> 00:07:41,750
to use it you go crazy.

134
00:07:42,140 --> 00:07:47,760
So right here we just have a Condes which is a map state to prop's is going to be just a function.

135
00:07:47,870 --> 00:07:50,340
For now I'm going to delete this.

136
00:07:50,810 --> 00:07:53,920
The second argument you're just going to use one.

137
00:07:54,050 --> 00:08:02,010
So we get one argument and then we run a function and we turn something really real simple.

138
00:08:02,030 --> 00:08:03,930
So I'm going to call this data.

139
00:08:04,100 --> 00:08:07,020
And for now it's just going to be empty right now.

140
00:08:07,130 --> 00:08:08,040
That's good.

141
00:08:08,510 --> 00:08:11,450
So now what is the purpose of doing this.

142
00:08:11,510 --> 00:08:17,020
So what are we going to do we can copy this the name of the barbel and we pass it as a first argument.

143
00:08:17,030 --> 00:08:19,190
It's always the first.

144
00:08:19,220 --> 00:08:21,080
So this is redux quote.

145
00:08:21,110 --> 00:08:26,800
So whenever we connect this one is going to go to redux and it's going to be working with the maps state

146
00:08:26,800 --> 00:08:27,620
to props.

147
00:08:27,620 --> 00:08:30,920
Now what is the main function of my state to props.

148
00:08:30,920 --> 00:08:37,120
Now if we dispatch an action we triggered this this is going to go to the producer and update the store.

149
00:08:37,250 --> 00:08:43,820
So this one this maps state probs is going to be always listening for an action and when the action

150
00:08:43,820 --> 00:08:50,360
happens and we have a new state this one is going to run and it's going to be passing the new state

151
00:08:50,420 --> 00:08:51,470
with the movies.

152
00:08:51,500 --> 00:08:51,970
Right.

153
00:08:52,040 --> 00:08:52,630
OK.

154
00:08:52,790 --> 00:08:57,890
And then what it's going to do this map state to Probst is going to grab the new state and it's going

155
00:08:57,890 --> 00:09:02,770
to inject the new state inside this component as a class.

156
00:09:02,910 --> 00:09:07,980
And now and then we're going to be able to enter this that Probst the data.

157
00:09:08,120 --> 00:09:13,140
And we will have the list of movies now just going to go right here I'm going to say Konsole law and

158
00:09:13,190 --> 00:09:17,300
it going to cost a lot of props to see what we get.

159
00:09:17,300 --> 00:09:21,950
So inside this that props of yours we are getting data and empty so it's going to be injected.

160
00:09:21,960 --> 00:09:23,790
But of course we don't have any data.

161
00:09:23,960 --> 00:09:27,740
And then of course we have this patch we're going to go there later.

162
00:09:27,740 --> 00:09:32,140
So now this second one is going to be the second argument.

163
00:09:32,180 --> 00:09:37,310
It's going to be the actual This patch the one we have here for now we don't have anything.

164
00:09:37,310 --> 00:09:43,370
But the main point of using this is that whenever we import an action we're going to trigger this and

165
00:09:43,370 --> 00:09:49,000
begin to inject this action that that which is dysfunction inside this process.

166
00:09:49,010 --> 00:09:51,960
So we are pretty much doing the same thing that Mab's state Propst.

167
00:09:52,100 --> 00:09:53,990
But with the actions.

168
00:09:53,990 --> 00:09:54,550
Right.

169
00:09:54,560 --> 00:09:59,830
So first it's going to need to import the actions begin to import everything manually.

170
00:10:00,060 --> 00:10:01,700
We're going to change it of course.

171
00:10:01,700 --> 00:10:06,680
So I'm going to import all these actions from.

172
00:10:06,730 --> 00:10:08,760
And then the actions.

173
00:10:09,170 --> 00:10:11,760
So this is going to bring this function right.

174
00:10:11,780 --> 00:10:12,300
OK.

175
00:10:12,800 --> 00:10:19,490
So now all the functions all the action creators are going to be inside this Vrable called actions are

176
00:10:19,490 --> 00:10:24,260
going to be copying this I'm going to paste it as a second argument.

177
00:10:24,290 --> 00:10:31,310
So now the actions are going to be inside maps state to probably notice that right here we have movies

178
00:10:31,310 --> 00:10:33,470
that list and it is a function.

179
00:10:33,770 --> 00:10:40,430
So in theory if now we can do this this stuff probs and then movies list just going to be triggering

180
00:10:40,430 --> 00:10:41,570
this action.

181
00:10:41,570 --> 00:10:45,340
There is a special way to add the actions begin to do it in a minute.

182
00:10:45,350 --> 00:10:48,890
No no just like this because right now we are just learning.

183
00:10:49,390 --> 00:10:53,990
So we're going to go right here and I know that this is going to weird and makes no sense but you're

184
00:10:54,000 --> 00:10:57,720
going to see right now why and how it works.

185
00:10:57,770 --> 00:11:02,960
So I'm going to say component will mount this function is going to be triggering we going to trigger

186
00:11:02,970 --> 00:11:05,370
this before we render everything.

187
00:11:05,390 --> 00:11:11,930
So now remember that we are injecting the actions inside this stuff props.

188
00:11:11,930 --> 00:11:17,380
So in theory if I did this that props and then the name of the action.

189
00:11:17,750 --> 00:11:21,500
This one is going to run whatever function we have right here.

190
00:11:21,980 --> 00:11:24,170
This one is going to it's going to run.

191
00:11:24,170 --> 00:11:29,780
It's going to pass the payload to the reducers and they're reducers will return the information and

192
00:11:30,020 --> 00:11:32,540
it's going to be running the maps state to.

193
00:11:32,780 --> 00:11:38,780
Now with the maps that prompts contain a new state you know with the actual data with the movies and

194
00:11:38,780 --> 00:11:40,160
everything else.

195
00:11:40,250 --> 00:11:46,470
And now let's go back and then map state to prop's is going to inject whatever state we get inside this

196
00:11:46,600 --> 00:11:47,280
props.

197
00:11:47,420 --> 00:11:50,770
So inside here we can have this that props that movies.

198
00:11:50,780 --> 00:11:57,400
So I'm going to go right here and say state that movie is going to save it and go to the application.

199
00:11:57,410 --> 00:12:00,930
So the first time that reloads of course we get no data.

200
00:12:01,010 --> 00:12:06,900
You know the database senti then map state to prop's is going to receive new data in the state.

201
00:12:06,960 --> 00:12:08,690
It is going to inject everything.

202
00:12:08,690 --> 00:12:11,480
So the application will rerun under for a second time.

203
00:12:11,570 --> 00:12:16,160
And inside data we have movies and we have the rate of movies.

204
00:12:16,160 --> 00:12:22,280
So now inside here what we can do we can say this that probably that data that movies

205
00:12:25,480 --> 00:12:28,240
and of course first begin and find because it doesn't exist.

206
00:12:28,240 --> 00:12:33,660
And the second time we get the data and this is why we are going to be using redux.

207
00:12:33,790 --> 00:12:40,060
First we connect and we passed the maps state to prop's that injects the new state inside the component

208
00:12:40,510 --> 00:12:46,020
and then we pass the second argument the actions so we can have the actions available inside this stuff

209
00:12:46,030 --> 00:12:47,020
props.

210
00:12:47,050 --> 00:12:47,890
Right.

211
00:12:47,890 --> 00:12:49,650
And then of course what we can do.

212
00:12:49,730 --> 00:12:54,400
We can just create just the function that is going to be rendering the movies.

213
00:12:54,400 --> 00:13:00,760
I could say I don't know something like render and then movies stuff like that.

214
00:13:00,760 --> 00:13:07,200
And of course it's going to be this that rendered movies and I hear what we can do is just to marvel

215
00:13:07,200 --> 00:13:12,790
and just our function that's going to be called render movies and it's going to be called to a function

216
00:13:13,490 --> 00:13:14,780
opening close.

217
00:13:15,190 --> 00:13:20,290
And this one this render movies is going to be receiving some data and the data is going to be whatever

218
00:13:20,290 --> 00:13:22,650
we have inside data and movies.

219
00:13:22,840 --> 00:13:31,280
So it's going to be render movies and then it's going to be this that prompts that data that movies.

220
00:13:31,330 --> 00:13:34,860
So this is going to be passing the movies this to this component.

221
00:13:34,900 --> 00:13:36,790
So here we're going to say movies.

222
00:13:36,950 --> 00:13:37,660
Good.

223
00:13:38,020 --> 00:13:38,610
OK.

224
00:13:38,950 --> 00:13:42,540
So this one is going to be returning some GSX some are going to change it.

225
00:13:43,270 --> 00:13:47,590
And this this one is going to be just doing a map with the names.

226
00:13:47,590 --> 00:13:54,550
So I'm going to say movies that map open it close we get an item on each iteration and then we're going

227
00:13:54,550 --> 00:13:55,630
to return something.

228
00:13:55,630 --> 00:13:57,820
So let me go back.

229
00:13:57,910 --> 00:14:04,720
Going to be returning this and what we will return is just a div with the with the name.

230
00:14:04,720 --> 00:14:08,990
So I'm going to say item that name going to save it and it's going to fail.

231
00:14:10,120 --> 00:14:13,730
It's ok cannot properly map often define.

232
00:14:13,840 --> 00:14:19,680
And this because it's not finding anything called movies if you remember the first time that the application

233
00:14:19,680 --> 00:14:21,630
loads movies is empty.

234
00:14:21,630 --> 00:14:22,690
We don't have this.

235
00:14:22,890 --> 00:14:29,140
So what we can do we can say if movies we get if for movies is not empty we want to do this.

236
00:14:29,220 --> 00:14:31,200
If not we want to return.

237
00:14:31,200 --> 00:14:33,690
No it's not going to return anything.

238
00:14:33,720 --> 00:14:41,410
So if I save it we should be getting the list of movies Pulp Fiction Pacific Rim and Rambo.

239
00:14:41,430 --> 00:14:43,960
So that works again.

240
00:14:44,100 --> 00:14:46,470
What is the point of doing all of this.

241
00:14:46,830 --> 00:14:51,680
Well whenever you have a large obligation you can have a lot of factions.

242
00:14:51,720 --> 00:14:56,750
So right here what you do you create different actions for different things whatever.

243
00:14:56,910 --> 00:15:02,670
And then whenever you need them you're going to be go into the app import the actions and then just

244
00:15:02,760 --> 00:15:07,170
trigger the action trigger the moves list and then of course maps that to prompt is going to be always

245
00:15:07,170 --> 00:15:07,950
listening.

246
00:15:07,950 --> 00:15:11,570
So this is going to work and you're going to get the information inside.

247
00:15:11,580 --> 00:15:13,930
It's really easy to work with.

248
00:15:14,130 --> 00:15:20,490
Once you get the idea how everything works it works like a charm and you want you will want to use it

249
00:15:20,490 --> 00:15:23,040
the whole time I assure you that.

250
00:15:23,520 --> 00:15:29,600
OK so now we know about the maps stick two props and we have a few more things.

251
00:15:29,790 --> 00:15:36,080
Right now we are importing the actions as a file when we're just passing the actions just like this.

252
00:15:36,150 --> 00:15:39,300
But there is a special way to pass the actions.

253
00:15:39,510 --> 00:15:44,380
So let's go to the next Berio and see how to pass this patch in action.

254
00:15:44,400 --> 00:15:44,950
Probably.

