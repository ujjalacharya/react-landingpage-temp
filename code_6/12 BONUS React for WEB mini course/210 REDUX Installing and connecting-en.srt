1
00:00:01,190 --> 00:00:01,670
OK.

2
00:00:01,720 --> 00:00:07,900
So now we hit the redux section of the course and it's going to be challenging for sure.

3
00:00:07,900 --> 00:00:09,840
So what is redux.

4
00:00:09,940 --> 00:00:15,430
If we check the redux documentation redux dodgiest that org is going to is going to save relex is a

5
00:00:15,430 --> 00:00:23,120
predictable state container for javascript apps and you know that it's nice but it's not very clear.

6
00:00:23,140 --> 00:00:27,320
So let me show your chart and explain you what that redux is going to do.

7
00:00:27,320 --> 00:00:29,650
So let me bring the chart up to go back.

8
00:00:29,660 --> 00:00:30,340
There you go.

9
00:00:30,640 --> 00:00:33,650
So let's pretend that you have three different things.

10
00:00:33,680 --> 00:00:36,520
Redux your application and the browser.

11
00:00:36,520 --> 00:00:38,360
So first we have the Rydex data.

12
00:00:38,530 --> 00:00:43,530
And for example let's pretend that this is something that we can see and we can search we have Rita

13
00:00:43,600 --> 00:00:46,840
we have react and then we have the actual browser.

14
00:00:46,900 --> 00:00:52,690
So we realize what is going to happen someone is going to enter to our domain to our web app and you

15
00:00:52,690 --> 00:00:55,290
know the application is going to start.

16
00:00:55,360 --> 00:01:01,540
So re-act is going to be starting and it's going to request for a list of movies because of course home

17
00:01:02,380 --> 00:01:04,020
needs to render a list of movies.

18
00:01:04,030 --> 00:01:05,480
So we need that data.

19
00:01:05,710 --> 00:01:11,660
So redux is going to do the process of going to the server fetching the information and then it's going

20
00:01:11,660 --> 00:01:14,520
to be stored someplace inside redux.

21
00:01:14,650 --> 00:01:19,770
So then of course we have the list of movies is going to be passing to the component that needs that

22
00:01:19,780 --> 00:01:23,710
list of movies and the component it's going to be rendered on the screen.

23
00:01:23,950 --> 00:01:26,270
That's what's going to happen pretty much.

24
00:01:26,360 --> 00:01:33,220
Then of course if the user selects a movie it's going to go to relax read it is going to fetch the information

25
00:01:33,220 --> 00:01:35,450
about that movie that was selected.

26
00:01:35,620 --> 00:01:37,510
The components are going to receive this.

27
00:01:37,630 --> 00:01:42,430
And then at the end it's going to show the information we need of course is going to go to the next

28
00:01:42,430 --> 00:01:44,280
few with the data.

29
00:01:44,290 --> 00:01:47,650
So this is what happens inside a redux.

30
00:01:47,710 --> 00:01:48,670
In a nutshell.

31
00:01:48,700 --> 00:01:55,870
So the critics and creators of Rydex describes redux as a state management library.

32
00:01:55,900 --> 00:02:02,680
Right here we have the developer experience and it's going to say my goal was to create a state management

33
00:02:02,890 --> 00:02:03,610
library.

34
00:02:03,730 --> 00:02:08,320
So if you remember we work we react and we used a lot of est.

35
00:02:08,380 --> 00:02:15,810
So the idea and the main idea of redux is to make the usage of state a little bit easier.

36
00:02:16,270 --> 00:02:19,450
OK so we think about this.

37
00:02:19,480 --> 00:02:23,640
So the state is an object where we store data.

38
00:02:23,800 --> 00:02:30,460
So again redux going to be kind of a big object where we stored data inside and this data will advise

39
00:02:30,520 --> 00:02:33,270
we act in how to behave.

40
00:02:33,530 --> 00:02:33,980
OK.

41
00:02:34,180 --> 00:02:34,640
That's good.

42
00:02:34,780 --> 00:02:35,620
That's fine.

43
00:02:35,650 --> 00:02:36,850
We need to start with this.

44
00:02:36,850 --> 00:02:44,860
Of course we need to create a new project so go to your computer or your main directory or whatever.

45
00:02:44,860 --> 00:02:51,640
Create a new project do the Create re-act app and delete everything in sight just like we did previously

46
00:02:51,690 --> 00:02:53,120
at the beginning with the before.

47
00:02:53,260 --> 00:02:58,690
So just create a new project and are going to be going to be doing that and I'll be right back.

48
00:02:59,170 --> 00:03:02,170
OK so I have my clean clean project.

49
00:03:02,170 --> 00:03:09,130
The only thing I left you know the untouched is going to be the index that is which has the import react

50
00:03:09,190 --> 00:03:10,490
and the reaction.

51
00:03:10,500 --> 00:03:11,020
That's it.

52
00:03:11,020 --> 00:03:12,730
Then they went there of course.

53
00:03:12,730 --> 00:03:17,830
I don't have an I don't have a file that it's going to be rendering the app going to be doing this in

54
00:03:17,830 --> 00:03:18,700
a minute.

55
00:03:19,000 --> 00:03:21,660
But first we need to do a few things.

56
00:03:21,670 --> 00:03:23,250
Reac or redux.

57
00:03:23,290 --> 00:03:26,530
It is a third party library.

58
00:03:26,560 --> 00:03:33,360
You know it's not from the same developers is not from re-act from Facebook from us from someone else.

59
00:03:33,430 --> 00:03:35,260
So we need to install that.

60
00:03:35,290 --> 00:03:42,160
So we're going to go to the terminal just navigate to your project and first begin to do and PM install

61
00:03:42,340 --> 00:03:46,060
and we need to install redux just like this.

62
00:03:46,060 --> 00:03:46,760
Relax.

63
00:03:46,930 --> 00:03:52,320
We're going to install the latest version is going to be 3.7 2.

64
00:03:52,480 --> 00:03:54,860
And then of course we need to install something else.

65
00:03:54,900 --> 00:03:57,640
Think about this redux is Fruma.

66
00:03:57,670 --> 00:03:59,960
It is a third party library.

67
00:04:00,010 --> 00:04:07,960
So you know it's not related to read to react so we need to install something else that connects redux

68
00:04:08,050 --> 00:04:09,210
with react.

69
00:04:09,340 --> 00:04:12,290
So and that that's going to be called re-act redux.

70
00:04:12,370 --> 00:04:17,780
Just like with with we react router Dom we need to connect something we need to use something to connect

71
00:04:17,780 --> 00:04:18,320
that.

72
00:04:18,340 --> 00:04:23,860
All right so we can react Dasch then redux and it's going to be apt.

73
00:04:23,920 --> 00:04:27,910
And the Bushin is 5 0 6.

74
00:04:27,990 --> 00:04:30,330
That of course mine is mine is safe.

75
00:04:30,460 --> 00:04:35,440
I'm going to press center and then just possibly deal whenever this is done.

76
00:04:35,440 --> 00:04:37,090
All right so everything was installed.

77
00:04:37,090 --> 00:04:42,280
So now we need to do a lot of setup redux is going to use a lot of fans.

78
00:04:42,280 --> 00:04:45,500
It uses a lot of fancy words fancy keywords.

79
00:04:45,700 --> 00:04:47,950
So it's going to be a little bit over whelming.

80
00:04:47,990 --> 00:04:55,790
First one is as we repeat the process many many times it will become natural to us trust me.

81
00:04:55,870 --> 00:05:02,200
So to connect redux we need to import from Briac redux something that cold's provider it's going to

82
00:05:02,200 --> 00:05:10,300
go right here at the top and I'm going to say import just like this opening close and then provider.

83
00:05:10,410 --> 00:05:16,860
Now this provider is going to come from react and then rejects just like this.

84
00:05:16,870 --> 00:05:23,260
So just like we did with re-act router we need to wrap our main application the main starting point

85
00:05:23,260 --> 00:05:28,180
of our application inside of this provider just like we did with re-act router.

86
00:05:28,390 --> 00:05:32,680
So going to go over here the bottom going to you know just make it a little bit better.

87
00:05:32,800 --> 00:05:40,240
And I'm going to bring something that calls provider just like this open and close now inside of the

88
00:05:40,360 --> 00:05:41,330
provider.

89
00:05:41,360 --> 00:05:51,600
I was just you know the app got of course if I do NPM start I need to mention this if I need to do NPM

90
00:05:51,610 --> 00:05:54,550
start you know nothing is going to happen.

91
00:05:54,550 --> 00:05:56,310
We're going to get a lot of errors.

92
00:05:56,530 --> 00:05:58,600
And of course we don't have a nap right here.

93
00:05:58,600 --> 00:05:59,740
App is not defined.

94
00:05:59,740 --> 00:06:05,620
So I'm going to go around here and create just a function functional component that is going to be just

95
00:06:05,820 --> 00:06:15,700
rendering some div just a div so I'm going to say Dev and then hello or something like that just I'm

96
00:06:15,760 --> 00:06:17,090
going to save it.

97
00:06:17,260 --> 00:06:19,300
The application should we render and we get.

98
00:06:19,300 --> 00:06:19,940
Hello.

99
00:06:20,200 --> 00:06:22,890
And of course I'm going to check the inspect.

100
00:06:22,900 --> 00:06:24,640
You can do that as well.

101
00:06:24,730 --> 00:06:27,540
So I fail prop Taieb the props.

102
00:06:27,670 --> 00:06:30,330
Smart as required in provider.

103
00:06:30,340 --> 00:06:35,460
So again again in the provider we need to do something else.

104
00:06:35,530 --> 00:06:40,990
Remember that this provider comes from re-act redux not redux.

105
00:06:40,990 --> 00:06:43,060
So this is a connection between them.

106
00:06:43,240 --> 00:06:48,990
But before we can connect them we need to bring GUI docs to our application.

107
00:06:49,090 --> 00:06:49,550
Right.

108
00:06:49,600 --> 00:06:50,160
OK.

109
00:06:50,410 --> 00:06:51,480
So I'm going to go right here.

110
00:06:51,490 --> 00:06:55,840
I'm going to import something else I can open and close.

111
00:06:55,840 --> 00:06:59,440
Now first we need a couple of things from redux.

112
00:06:59,460 --> 00:07:07,360
We're going to be needing something that cold calls create just like this and store create store and

113
00:07:07,380 --> 00:07:14,840
then we're going to be using something that calls apply middleware.

114
00:07:15,120 --> 00:07:19,580
Remember that we have the apply no cap and then you know caps right here.

115
00:07:20,100 --> 00:07:20,370
OK.

116
00:07:20,400 --> 00:07:23,390
And this comes from redux.

117
00:07:24,240 --> 00:07:30,780
So first what we will need to do is create store but this is a kind of a something that we could keep

118
00:07:30,780 --> 00:07:31,380
right now.

119
00:07:31,380 --> 00:07:38,850
But the thing is that in real life you can be using redux with middleware and you know I'm just going

120
00:07:38,850 --> 00:07:43,300
to jump a step and tell you about a middleware.

121
00:07:43,440 --> 00:07:44,670
I have a chart right here.

122
00:07:44,730 --> 00:07:47,770
Let's bring the chart.

123
00:07:47,890 --> 00:07:53,080
OK so again you can use relex without using mere words.

124
00:07:53,250 --> 00:07:55,180
But again real life you can use them.

125
00:07:55,200 --> 00:07:59,550
So it's just going explain you what we're going to be doing with words why we can use it.

126
00:07:59,550 --> 00:08:04,440
So first again let's pretend that we have an application you know with main the user is going to enter

127
00:08:04,440 --> 00:08:10,160
here then the server is going to go to the server Maker Faire a network request and we will bring the

128
00:08:10,180 --> 00:08:14,150
data whatever data we need to render the actual component.

129
00:08:14,160 --> 00:08:19,230
So this one is going to be stored in redux and then it's going to be passing the information to the

130
00:08:19,230 --> 00:08:24,750
actual component and the component is going to be rendering whatever we need on the screen.

131
00:08:24,750 --> 00:08:31,890
So what could happen is that what happens even after you make the network request and read X receives

132
00:08:31,890 --> 00:08:37,680
the information we need to grab that information before it goes to the component and we need you know

133
00:08:37,680 --> 00:08:45,260
to change the name or maybe to check something or maybe multiply a number and then pass it to the component.

134
00:08:45,540 --> 00:08:51,030
So for this reason what we're going to be doing is we're going to be using Minner wares so middleware

135
00:08:51,060 --> 00:08:59,100
just like the word middleware middle we can use something in-between redux and the data flow you know

136
00:08:59,100 --> 00:09:04,300
the actual component we can grab this information mutated change it whatever.

137
00:09:04,320 --> 00:09:10,660
And then of course do something before it goes to the component that is the main idea of using Mynor

138
00:09:10,660 --> 00:09:11,360
wares.

139
00:09:11,430 --> 00:09:16,320
And again just like I told before you're going to be using this in there in the real live the whole

140
00:09:16,320 --> 00:09:16,730
time.

141
00:09:16,740 --> 00:09:23,720
You're not going to be using read X without made whereas I assure you that of course we can use discreate

142
00:09:23,730 --> 00:09:26,850
store just with the provider and use it.

143
00:09:26,870 --> 00:09:28,590
I'm going to show you right now.

144
00:09:28,590 --> 00:09:35,510
So now we have the interest a provider and we have this keywords from redux.

145
00:09:35,520 --> 00:09:41,130
So again we are using the providers so now we need to grab this provider and we need to tell the provider

146
00:09:41,280 --> 00:09:42,780
that begin to be using redoes.

147
00:09:42,780 --> 00:09:46,580
So we need to connect the re-act redux with redux.

148
00:09:46,830 --> 00:09:49,920
So for this would be can to be using begin to pass.

149
00:09:49,980 --> 00:09:52,390
We're going to be using something that calls store.

150
00:09:52,560 --> 00:09:56,540
So this store is going to be the connection between them.

151
00:09:56,610 --> 00:09:58,970
Now again just like I told you you can do this.

152
00:09:58,980 --> 00:10:01,390
You can create a store and that's it.

153
00:10:01,590 --> 00:10:03,040
But again we're going to be using middleware.

154
00:10:03,060 --> 00:10:07,500
So I'm going to go right here at the bottom and I get to create a viable that is going to be called

155
00:10:07,560 --> 00:10:13,630
create store just like this store.

156
00:10:13,920 --> 00:10:20,650
And then with middleware this variable can be called whatever you like.

157
00:10:20,650 --> 00:10:21,170
Doesn't matter.

158
00:10:21,180 --> 00:10:25,790
I'm just writing something that makes sense create store with middleware.

159
00:10:26,040 --> 00:10:30,840
So again just like it's old for we can pass the create store right here but we want to pass it with

160
00:10:30,840 --> 00:10:31,570
middleware.

161
00:10:31,680 --> 00:10:37,630
So how do we include this create store inside this apply middleware function.

162
00:10:37,800 --> 00:10:40,490
So what we do we call and apply middleware.

163
00:10:40,590 --> 00:10:46,080
And of course it's going to be a function and then what we do we pass the create store just like this

164
00:10:46,950 --> 00:10:50,340
and now create store is going to be it's going to be created.

165
00:10:50,340 --> 00:10:51,380
It's going to be working.

166
00:10:51,510 --> 00:10:55,240
But with men Wheres that we're going to be adding things inside of here.

167
00:10:55,260 --> 00:10:57,800
But don't worry we will get there.

168
00:10:57,810 --> 00:11:03,570
So now since we have this viable that it's create that it's creating a store with the middleware we

169
00:11:03,570 --> 00:11:07,670
need to pass it to the provider this provider needs the connection.

170
00:11:07,680 --> 00:11:09,790
And this one is the connection.

171
00:11:09,900 --> 00:11:14,940
So I'm going to go right here and they're going to say create store with me where I'm going to be passing

172
00:11:14,940 --> 00:11:15,780
this viable.

173
00:11:15,810 --> 00:11:20,330
And of course this is going to be a function we're going to be adding some more things right here.

174
00:11:20,340 --> 00:11:26,280
But for now this is the the first thing that you need to do whenever you work with redux you need to

175
00:11:26,280 --> 00:11:33,210
call the dependencies create the viral that binds the middleware with the create store and then pass

176
00:11:33,210 --> 00:11:35,450
the store to the provider.

177
00:11:35,460 --> 00:11:37,080
That's the first thing we need to do.

178
00:11:37,110 --> 00:11:42,790
If I go to the browser a fight checker on the screen you can get a lot of errors.

179
00:11:42,870 --> 00:11:47,220
And you know we need to do a lot of things before we can see that.

180
00:11:47,220 --> 00:11:47,760
Hello.

181
00:11:47,760 --> 00:11:49,760
Now we are used in redux.

182
00:11:49,770 --> 00:11:53,730
We are doing a lot of things but read ads it's going to need more things.

183
00:11:53,730 --> 00:11:59,070
In this case it's going to be expected there we douceur to be of function.

184
00:11:59,070 --> 00:12:06,000
Now everything works but now this store discreate store it's expecting for a reducers expecting for

185
00:12:06,000 --> 00:12:07,830
something that calls reduce hurt.

186
00:12:08,010 --> 00:12:08,260
OK.

187
00:12:08,280 --> 00:12:16,080
So now we're going to need to stop to make pause and talk about actions and reducers and other big keywords

188
00:12:16,120 --> 00:12:18,030
but this ones are really important.

189
00:12:18,030 --> 00:12:21,350
OK so don't don't skip the next video.

190
00:12:21,480 --> 00:12:24,950
Let's go to the next election next letter and talk about actions.

191
00:12:24,960 --> 00:12:26,100
And we do cers.

