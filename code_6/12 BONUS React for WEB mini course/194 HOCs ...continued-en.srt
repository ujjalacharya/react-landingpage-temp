1
00:00:01,150 --> 00:00:05,430
OK so now I will explain you a different type of high or other component.

2
00:00:05,590 --> 00:00:08,570
And at first it's going to look really really weird.

3
00:00:08,680 --> 00:00:09,520
But don't worry.

4
00:00:09,520 --> 00:00:11,880
Then we can stop and explain what's going on.

5
00:00:12,040 --> 00:00:13,320
So you know you're going to get it.

6
00:00:13,320 --> 00:00:14,790
Don't worry it makes perfect sense.

7
00:00:14,800 --> 00:00:16,630
But it looks weird at the beginning.

8
00:00:16,780 --> 00:00:20,930
I've created a route so we can save some times some time is going to be a user.

9
00:00:20,950 --> 00:00:26,470
The files is going to be user Dodge's And you know we just have a route that's going to be user and

10
00:00:26,470 --> 00:00:29,300
it's just returning a div with a user one.

11
00:00:29,410 --> 00:00:29,940
OK.

12
00:00:30,310 --> 00:00:31,890
So first I'm going to start doing this.

13
00:00:31,900 --> 00:00:37,960
I'm going to start tape typing all of this and again is not going to make sense but then I will explain

14
00:00:37,960 --> 00:00:44,920
you are going to go to H.O. CS and I get to create a new file that is going to be called user HAMC whatever

15
00:00:44,980 --> 00:00:47,900
user H.O. see that jazz.

16
00:00:48,280 --> 00:00:55,880
And just like always we need to import re-act from react just like that.

17
00:00:55,940 --> 00:01:00,040
Is going to be a functional component so we don't need to bring components.

18
00:01:00,040 --> 00:01:05,320
So now I'm going to I'm going to create a function that is going to be user a chose C and it's going

19
00:01:05,320 --> 00:01:09,230
to be equal to a function just like we did before.

20
00:01:09,490 --> 00:01:11,890
So this one is going to take some arguments.

21
00:01:11,890 --> 00:01:15,850
First one is going to be the wrapped component.

22
00:01:16,330 --> 00:01:17,170
Just like that.

23
00:01:17,350 --> 00:01:21,170
And then it is going to receive an argument it's going to be argument one.

24
00:01:21,350 --> 00:01:21,990
OK.

25
00:01:22,270 --> 00:01:27,790
So again this function is going to return something and what it's going to be returning it's going to

26
00:01:27,790 --> 00:01:34,900
be whatever with the prompts and then returned a new function say prompts and then it's going to return

27
00:01:34,900 --> 00:01:35,850
a function.

28
00:01:35,890 --> 00:01:39,420
So this function is going to have some code inside.

29
00:01:39,640 --> 00:01:42,160
So this code to me make it right.

30
00:01:42,490 --> 00:01:44,500
I mean it mistake right there.

31
00:01:44,500 --> 00:01:51,100
There you go is going to right here it's going to return some code and this code is going to be just

32
00:01:51,250 --> 00:01:55,690
a component with the wrapped component inside.

33
00:01:55,750 --> 00:01:59,750
I know that it doesn't make sense so far but don't worry I can explain you're limited.

34
00:01:59,890 --> 00:02:03,610
I'm going to say export and of course we need to make this component available.

35
00:02:03,650 --> 00:02:06,700
So I'm going to say user H.O. C.

36
00:02:07,240 --> 00:02:11,990
So now I'm going to go back to user and I'm going to import this file.

37
00:02:12,040 --> 00:02:13,640
So it's going to be important.

38
00:02:13,690 --> 00:02:17,950
And then I'm going to call it a Josi makes sense.

39
00:02:17,950 --> 00:02:27,930
User HAMC from and then dot dot for Slash a chose C and then user H.M.S..

40
00:02:27,970 --> 00:02:33,130
So now what are we going to do instead of purely putting this component inside of here.

41
00:02:33,310 --> 00:02:40,170
I'm going to go right here at the bottom and I'm going to say user Tosi making reference to this user.

42
00:02:40,230 --> 00:02:42,070
You change it user.

43
00:02:42,070 --> 00:02:42,840
There you go.

44
00:02:43,060 --> 00:02:49,860
And then I get to pass this the user as the first argument and then I'm going to say hello.

45
00:02:49,980 --> 00:02:52,610
Just something simple just a string.

46
00:02:52,980 --> 00:02:55,160
And if you notice again the application.

47
00:02:55,180 --> 00:02:58,000
And this is still working.

48
00:02:58,000 --> 00:03:00,580
So why is this working.

49
00:03:00,580 --> 00:03:02,080
We didn't know this.

50
00:03:02,080 --> 00:03:02,610
So OK.

51
00:03:02,800 --> 00:03:08,980
So the application starts and we load the user components going to be showing the user components.

52
00:03:08,980 --> 00:03:09,570
All right.

53
00:03:09,670 --> 00:03:11,190
Well not really.

54
00:03:11,410 --> 00:03:16,950
So what it's happening it's that it's loading this file and this function this component.

55
00:03:17,140 --> 00:03:18,560
It's not exported.

56
00:03:18,610 --> 00:03:24,790
You know we have the export default and instead of showing this what we're doing we are exporting the

57
00:03:24,790 --> 00:03:26,390
user chose C.

58
00:03:26,730 --> 00:03:27,290
OK.

59
00:03:27,490 --> 00:03:30,940
So instead of doing this it's going to go and do this now.

60
00:03:30,970 --> 00:03:31,400
User.

61
00:03:31,400 --> 00:03:34,680
H O C is going to receive two arguments.

62
00:03:34,720 --> 00:03:37,390
First it's going to be the actual component.

63
00:03:37,390 --> 00:03:39,260
This is going to be the key component.

64
00:03:39,490 --> 00:03:42,490
And then you know we passed some text just a string.

65
00:03:43,090 --> 00:03:47,440
So it's going to go to HNC instead of rendering this is going to render HAMC.

66
00:03:47,440 --> 00:03:49,360
So let's go to HAMC.

67
00:03:49,360 --> 00:03:55,810
So H O C user HAMC is going to receive the wrap component which is going to be this component and then

68
00:03:55,900 --> 00:03:59,030
an argument which is going to be this text.

69
00:03:59,110 --> 00:04:05,890
So the job of this component is going to be returning just to function and this function what it's going

70
00:04:05,890 --> 00:04:12,510
to return is going to be dead with whatever components we passed as an argument.

71
00:04:12,650 --> 00:04:14,920
And that's why we're getting user 1.

72
00:04:15,020 --> 00:04:21,370
So this is the you know it's a really weird right here and whenever we get to redux we're going to find

73
00:04:21,370 --> 00:04:23,780
the same the same syntax right here.

74
00:04:24,010 --> 00:04:27,040
But this this is the thing that's happening this function.

75
00:04:27,040 --> 00:04:34,070
It's receiving a component and the job of this function is just return the component we get as an argument.

76
00:04:34,570 --> 00:04:35,800
Okay that's good.

77
00:04:35,830 --> 00:04:37,700
You know really really weird.

78
00:04:37,810 --> 00:04:39,500
But why would we use this.

79
00:04:39,640 --> 00:04:46,570
Well the cool thing about this is that we can we can call a component and we can pass that component

80
00:04:46,570 --> 00:04:49,060
and then we can use different arguments.

81
00:04:49,060 --> 00:04:54,350
So right here what I could do I can say arg one.

82
00:04:54,850 --> 00:04:58,460
And you know everything is going to be it's going to get rendered Halo and user want.

83
00:04:58,570 --> 00:05:01,020
So we are outputting two pieces of code.

84
00:05:01,030 --> 00:05:07,610
First whatever argument we get on top and then the actual component that we are passing as an arguments.

85
00:05:07,740 --> 00:05:14,680
And again this user H.O. C could serve as a template for one ever so we can go to a different a different

86
00:05:14,680 --> 00:05:21,430
component right here and call that user HNC and pass the components as an argument and it will always

87
00:05:21,930 --> 00:05:25,330
be rendered with a div and maybe with the arguments.

88
00:05:25,550 --> 00:05:26,470
OK that's good.

89
00:05:26,470 --> 00:05:30,490
You know it's nice to know that we have this available.

90
00:05:30,580 --> 00:05:32,040
Now the weird thing.

91
00:05:32,080 --> 00:05:34,750
The confusing thing is going to be the props.

92
00:05:34,750 --> 00:05:37,510
Why am I doing this why am I passing this prompts.

93
00:05:37,610 --> 00:05:40,060
OK let's go back to user.

94
00:05:40,270 --> 00:05:48,040
Whenever we call this function we load this component instead of running this we run this.

95
00:05:48,040 --> 00:05:51,680
So if we remember the component that wraps the.

96
00:05:51,700 --> 00:05:57,090
This section is going to be rehang router so re-act router is going to give us some props.

97
00:05:57,160 --> 00:06:05,080
Now if I go right here and let's go to a user going to go right here I'm going to say console log and

98
00:06:05,080 --> 00:06:10,580
then prompts and right here at the top I'm going to say props OK.

99
00:06:10,960 --> 00:06:18,600
So in theory this user this component it's receiving the react router prompts just like with that before.

100
00:06:18,850 --> 00:06:24,820
Now if you go to the console we are getting nothing which is getting an empty object.

101
00:06:24,820 --> 00:06:27,800
And again this make first it makes perfect sense.

102
00:06:27,880 --> 00:06:32,700
The component that it's rendering it's not this one is going to be user hoc.

103
00:06:32,860 --> 00:06:36,150
So the one that is getting the props it's this one.

104
00:06:36,160 --> 00:06:40,410
So if I go right here and say console log and then prop's

105
00:06:42,870 --> 00:06:48,260
reload the page a minute mistake sorry it's over that and the copier.

106
00:06:48,520 --> 00:06:52,680
I to put it inside of course because you're getting the props right here.

107
00:06:52,860 --> 00:06:59,400
So if we reload the page we are getting the props inside the props from Briac writer are entering this

108
00:06:59,400 --> 00:07:00,130
user Haack.

109
00:07:00,150 --> 00:07:03,490
And then we returned the function with the props.

110
00:07:03,870 --> 00:07:10,860
Another thing is that what we need to do is to pass the prompts that we are getting from Riyadh Browder

111
00:07:11,130 --> 00:07:15,920
to the next component in the list which is going to be the ract corrupt component.

112
00:07:15,940 --> 00:07:19,250
Remember the ramp component is going to be this components.

113
00:07:19,290 --> 00:07:24,700
So now how do we make this problem available within this component.

114
00:07:24,950 --> 00:07:25,490
Okay.

115
00:07:25,710 --> 00:07:30,480
So going to make a space and what we do we do a little bit of rest.

116
00:07:30,480 --> 00:07:32,770
Operator It's going to be dot dot dot.

117
00:07:32,820 --> 00:07:39,200
Then we pass props and whatever prompts we are we are getting We're going to pass them to the wrapped

118
00:07:39,200 --> 00:07:40,210
components.

119
00:07:40,390 --> 00:07:42,880
A middle of this.

120
00:07:42,950 --> 00:07:46,500
So now remember that we have a user doing the console log of props.

121
00:07:46,650 --> 00:07:52,100
So now we are getting it the prompts are available with this computer component.

122
00:07:52,350 --> 00:07:58,950
So again we are as we see triggering this user Hok this one is getting to the prompts of from the router

123
00:07:59,220 --> 00:08:04,730
and then we grab the props and we pass it to the next line of code to the next component.

124
00:08:05,040 --> 00:08:05,570
OK.

125
00:08:05,940 --> 00:08:12,780
So you know it's a little bit confusing but once you get the idea of what user I'm sorry the h o zes

126
00:08:13,350 --> 00:08:15,690
do it's going to it's going to simple.

127
00:08:15,690 --> 00:08:23,580
So again this whole logic using H-how sees when whenever we reach via the practice project it's going

128
00:08:23,580 --> 00:08:26,260
to get really really complex.

129
00:08:26,310 --> 00:08:33,720
We can have tons of code right here and they're going to be checking important parts of our application

130
00:08:33,720 --> 00:08:36,590
so we can use and this is just a dumb example.

131
00:08:36,930 --> 00:08:39,670
But you're going to be doing more difficult stuff don't worry.

132
00:08:39,990 --> 00:08:41,710
OK so let's keep moving forward.

133
00:08:41,730 --> 00:08:44,130
Let's go to the next topic.

134
00:08:45,200 --> 00:08:45,740
Sorry guys.

135
00:08:45,740 --> 00:08:49,390
I would like to add one more thing I forgot to mention.

136
00:08:49,490 --> 00:08:51,800
It's actually something we call.

137
00:08:51,950 --> 00:08:58,040
So right here the Whenever we are we are exporting the user Hok you're just passing user but something

138
00:08:58,040 --> 00:08:59,190
else that we could do.

139
00:08:59,270 --> 00:09:02,540
We can create whatever components right here.

140
00:09:02,540 --> 00:09:03,240
We can do.

141
00:09:03,270 --> 00:09:04,820
We can just do two.

142
00:09:04,850 --> 00:09:11,600
We can have a lot of components and I'm going to say user 2 and then user 2 and now instead of just

143
00:09:11,600 --> 00:09:16,830
passing one component we can pass as many components as we wish.

144
00:09:17,120 --> 00:09:19,070
And then right here you're going to get them.

145
00:09:19,070 --> 00:09:24,010
So I'm going to say wrap component is a second argument and this one is going to be the number two.

146
00:09:24,110 --> 00:09:26,570
So we are getting the first user one component.

147
00:09:26,570 --> 00:09:32,660
The second user to component and then the arc and right here do pretty much the same thing.

148
00:09:32,660 --> 00:09:36,640
You're still going to get the problem you're going to say wrapped component.

149
00:09:36,680 --> 00:09:41,580
So instead of just rendering one component we can render whatever component we want.

150
00:09:41,600 --> 00:09:48,410
We could have 10 different components and you're going to be rendering all the components in at once.

151
00:09:48,470 --> 00:09:48,810
That's it.

152
00:09:48,850 --> 00:09:50,540
That's the only thing I want to add.

153
00:09:50,540 --> 00:09:51,470
Sorry for that.

154
00:09:51,480 --> 00:09:53,050
Let's move forward now.

