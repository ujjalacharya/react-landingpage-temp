1
00:00:01,060 --> 00:00:04,290
All right so let's go to all the logic of our updating form.

2
00:00:04,420 --> 00:00:06,400
Because right now if you type something.

3
00:00:06,520 --> 00:00:07,780
Nothing gets updated.

4
00:00:07,780 --> 00:00:08,290
All right.

5
00:00:08,650 --> 00:00:15,220
So now whenever we type something we want to trigger a function right here so we can update this estate

6
00:00:15,460 --> 00:00:16,590
with the value.

7
00:00:16,750 --> 00:00:23,740
That's we want to do so of course as you know whenever we attach an onchange function on the input we

8
00:00:23,740 --> 00:00:26,610
can know what the user is typing.

9
00:00:26,650 --> 00:00:31,120
So I'm going to go right here and create a function called on change.

10
00:00:31,120 --> 00:00:31,800
All right.

11
00:00:32,050 --> 00:00:34,960
So this change takes an event.

12
00:00:35,290 --> 00:00:37,180
And of course it runs a function.

13
00:00:37,180 --> 00:00:39,160
We don't have a function so far.

14
00:00:39,160 --> 00:00:42,770
So for now I'm just going to save this and I'm going to go back to n roll.

15
00:00:42,850 --> 00:00:45,340
And of course nothing is going to work with that.

16
00:00:45,730 --> 00:00:51,070
So inside the form field we will you know lead the application know what is the function we want to

17
00:00:51,070 --> 00:00:53,190
run to update the state.

18
00:00:53,200 --> 00:00:54,540
So I'm going to call.

19
00:00:54,670 --> 00:00:57,680
I'm going to pass a prop with the key word change.

20
00:00:57,730 --> 00:01:05,360
Now this change of course we will we will we will it will be receiving an event you know the event we

21
00:01:05,370 --> 00:01:08,730
are passing right here is going to get received by this change.

22
00:01:08,740 --> 00:01:13,120
So instead of a band I'm going to call it element and again explain you why in a minute.

23
00:01:13,120 --> 00:01:20,080
So whenever we trigger this function this change of function what we want to do we want to run a function

24
00:01:20,230 --> 00:01:23,490
called update form and we didn't have this function.

25
00:01:23,560 --> 00:01:24,780
We will create it.

26
00:01:24,820 --> 00:01:26,990
This will create the function in a minute.

27
00:01:27,010 --> 00:01:32,800
And of course we will grab that element that will be passed from here which is the actual event and

28
00:01:32,800 --> 00:01:36,150
we will pass that element to the update for.

29
00:01:36,400 --> 00:01:37,360
We don't have this function.

30
00:01:37,390 --> 00:01:41,490
I'm going to put it right here and say that we want to update a form.

31
00:01:41,490 --> 00:01:42,320
All.

32
00:01:42,660 --> 00:01:47,420
So now again we are not passing anything whenever we trigger this function from form fields.

33
00:01:47,520 --> 00:01:49,000
Nothing is going to happen.

34
00:01:49,000 --> 00:01:49,440
All right.

35
00:01:49,630 --> 00:01:50,860
So what are we going to be doing.

36
00:01:50,860 --> 00:01:57,580
We're going to be triggering this change function and we're going to pass two things we need to pass

37
00:01:57,580 --> 00:01:58,440
two things.

38
00:01:58,570 --> 00:02:02,670
I'm going to pass an object with the event we are getting right here.

39
00:02:02,710 --> 00:02:06,470
And in addition I'm going to pass the ID of the element.

40
00:02:06,530 --> 00:02:13,090
Remember that right here at the top we are passing we are receiving this prompt the ID of the elements

41
00:02:13,570 --> 00:02:20,050
because whenever we trigger this update form we need to know what form field with which element on the

42
00:02:20,050 --> 00:02:22,470
form data we want to update.

43
00:02:22,480 --> 00:02:28,450
For example if you had another one right here called Name another input what how would the application

44
00:02:28,450 --> 00:02:31,530
is going to know which one needs to update the email or the name.

45
00:02:31,750 --> 00:02:36,060
So that's why we are passing an object with the event and the e-mail.

46
00:02:36,070 --> 00:02:37,730
All right let's go below.

47
00:02:38,170 --> 00:02:44,020
So again we we go to this function if we go to the update form.

48
00:02:44,230 --> 00:02:47,170
It's going to be receiving the event and the ID.

49
00:02:47,380 --> 00:02:47,880
All right.

50
00:02:48,130 --> 00:02:54,760
So inside update form of course we don't have we don't have any logic so far so we can get at it right

51
00:02:54,760 --> 00:02:55,270
now.

52
00:02:55,270 --> 00:03:01,480
So on the update form we we will be receiving an element just like this.

53
00:03:02,050 --> 00:03:05,990
So if I cancel log the element just like this.

54
00:03:06,100 --> 00:03:08,440
Of course we should be getting something.

55
00:03:08,440 --> 00:03:10,360
So let me reload the application.

56
00:03:10,450 --> 00:03:19,540
And change is not defined so I might call a change the update form just let me make sure are up of course

57
00:03:19,780 --> 00:03:25,330
right here at the top on the form fields are not bringing the change prop so change.

58
00:03:25,330 --> 00:03:26,150
There we go.

59
00:03:26,530 --> 00:03:28,980
So now it should be working.

60
00:03:29,350 --> 00:03:36,100
So I'm going to bring the console and on the console if I type something you know we get the actual

61
00:03:36,100 --> 00:03:40,850
event and the name and the ID of the impot where we are typing something.

62
00:03:41,110 --> 00:03:47,330
So now from within the event we can get the value or the the characters that the user is typing begin

63
00:03:47,380 --> 00:03:48,360
to do that.

64
00:03:48,750 --> 00:03:51,040
OK so I'm going to go back to enroll.

65
00:03:51,490 --> 00:03:55,280
Going into this and we're going to start doing all of this logic.

66
00:03:55,600 --> 00:03:56,980
So what do we need to do.

67
00:03:57,190 --> 00:03:59,920
We need to create a copy of this form data.

68
00:03:59,920 --> 00:04:05,170
Remember it's not good to know mutate the state directly.

69
00:04:05,200 --> 00:04:14,490
So I'm going to create a viable Konst new form data just like this form data that it's equal and I'm

70
00:04:14,490 --> 00:04:19,270
going to do it just like this because right here we have form data not in camel case.

71
00:04:19,270 --> 00:04:20,450
So from data.

72
00:04:20,800 --> 00:04:25,420
So this one is going to be equal to a copy of whatever we have inside form data.

73
00:04:25,540 --> 00:04:32,360
So I'm going to say that that Dudd this that state that form data.

74
00:04:32,360 --> 00:04:34,240
All right so now we have a copy of this.

75
00:04:34,270 --> 00:04:39,250
So all the changes that we're going to do right now we're going to do it on this copy and at the very

76
00:04:39,250 --> 00:04:43,300
end this form data it will be equal to this form data.

77
00:04:43,300 --> 00:04:45,960
So then we will update the whole state.

78
00:04:46,020 --> 00:04:46,700
Right.

79
00:04:47,200 --> 00:04:51,190
So then we need to make a copy of the elements so we can mutate that elements.

80
00:04:51,310 --> 00:05:01,180
So Konst new element equals to open and close and then we do that that new form data that we can grab.

81
00:05:01,220 --> 00:05:08,500
Always that copy right now and we copy inside of here the elements in this case is going to be e-mail.

82
00:05:08,510 --> 00:05:10,830
So how can we copy the elements.

83
00:05:10,910 --> 00:05:14,270
Remember that inside elements we're getting the idea.

84
00:05:14,450 --> 00:05:18,490
So I'm going to go right here and say element that ID.

85
00:05:18,740 --> 00:05:24,060
So now inside new element we will get a copy of this state of this email state.

86
00:05:24,290 --> 00:05:24,720
Right.

87
00:05:26,960 --> 00:05:34,160
So now of course inside element we have the event if you remember and inside the event we have the value

88
00:05:34,250 --> 00:05:39,710
and you know the characters that the user is inputting inside the input.

89
00:05:39,740 --> 00:05:48,780
So I'm going to access new element just like this new element dot and I'm going to enter the value.

90
00:05:48,830 --> 00:05:58,910
I'm going to enter this value and I'm going to say that this value is equal to Element dot target dot

91
00:05:59,260 --> 00:06:05,700
of sorry elements an event that target just like this that value.

92
00:06:06,140 --> 00:06:11,750
So after we do this this new element will contain the value that the user is typing right here.

93
00:06:11,960 --> 00:06:13,420
All right.

94
00:06:13,430 --> 00:06:15,500
That's the first step.

95
00:06:15,600 --> 00:06:20,220
Then of course we will add some validation but we will do it on maybe on the next video.

96
00:06:20,300 --> 00:06:27,760
So OK so now what we have is the new element with all the new values when we need to update right now.

97
00:06:27,800 --> 00:06:32,710
So what we will do we will get this new elements and we will update new form data.

98
00:06:32,930 --> 00:06:37,780
So I'm going to grab you for form data just like this new form data.

99
00:06:38,930 --> 00:06:39,570
Sorry.

100
00:06:39,680 --> 00:06:44,920
Square as core brackets and are going to access the element Id just like with it right here.

101
00:06:44,930 --> 00:06:51,420
And we're going to said that the new front data elements Id just email it's equal to new elements.

102
00:06:51,680 --> 00:06:58,040
So now we are pretty much updating this new form data Barville the state of this era and at the very

103
00:06:58,040 --> 00:07:04,390
end the only thing we need to do right now since we have the new state of e-mail we get to set this

104
00:07:04,580 --> 00:07:12,890
state and update this state and of course since this is the main state it will be reflected right here.

105
00:07:12,890 --> 00:07:13,670
All right.

106
00:07:14,030 --> 00:07:15,760
So we're going to say this.

107
00:07:15,860 --> 00:07:23,150
That said state opening close and I'm going to say that form data now now the new state of form data

108
00:07:23,360 --> 00:07:25,800
it's called new form data.

109
00:07:25,820 --> 00:07:30,230
All right get out I'm going to close it.

110
00:07:30,340 --> 00:07:35,380
So I'm going to reload the application and if I type something now we get the value.

111
00:07:35,380 --> 00:07:36,970
So everything is here.

112
00:07:37,120 --> 00:07:41,860
So this f f f is going to be de-value right now inside the actual state.

113
00:07:42,010 --> 00:07:46,830
So much much later when we submit a form we will have a value on this estate.

114
00:07:46,840 --> 00:07:52,220
We will evaluate what whenever we have informed data and we will make the request.

115
00:07:52,420 --> 00:07:57,390
Of course we do have some validation and we need to change this valid to true.

116
00:07:57,400 --> 00:08:00,030
If we do have a valid value.

117
00:08:00,070 --> 00:08:01,890
Right now this is not valid.

118
00:08:01,900 --> 00:08:04,000
This is an email so we can not submit this.

119
00:08:04,000 --> 00:08:06,960
We need to add some validation right.

120
00:08:06,970 --> 00:08:10,320
So to add some validation to this.

121
00:08:11,230 --> 00:08:13,420
OK so let's add some validation.

122
00:08:13,420 --> 00:08:19,540
So again the validation is something that we're going to be using on different forms different sections

123
00:08:19,800 --> 00:08:24,250
so it can have it's May is a good idea to create a reusable component.

124
00:08:24,250 --> 00:08:30,140
Or maybe it's just a global function where we can you know check if the input is valid.

125
00:08:30,370 --> 00:08:31,960
So we have validation right here.

126
00:08:31,960 --> 00:08:33,320
We will come to a function.

127
00:08:33,460 --> 00:08:38,000
It will check the validation and it's going to check if it's if it's required.

128
00:08:38,050 --> 00:08:43,420
You know if it devalues not empty and if the if we have e-mail it's going to check if the value is a

129
00:08:43,420 --> 00:08:44,210
valid e-mail.

130
00:08:44,230 --> 00:08:45,550
But it's the whole idea.

131
00:08:45,550 --> 00:08:47,370
Very very simple just to function.

132
00:08:47,710 --> 00:08:53,700
So inside you I am going to store everything inside mints this time it's a mistake.

133
00:08:53,970 --> 00:08:59,200
Since this mistake we will have a function called validate and we will pass it through there.

134
00:08:59,200 --> 00:09:06,370
So for now it's going to go right here at the bottom and say export then Konst and then validate and

135
00:09:06,460 --> 00:09:08,320
it's going to be equal to something.

136
00:09:08,530 --> 00:09:12,910
And then of course we will return something right.

137
00:09:13,000 --> 00:09:14,920
Very just to function.

138
00:09:14,950 --> 00:09:21,210
So now I'm going to go to enroll now will you call this validate function so we can use it.

139
00:09:21,220 --> 00:09:25,150
So import opening close then validate

140
00:09:28,210 --> 00:09:34,680
that for flash that that force slashed at that 4 slash you I for Slash and then misc.

141
00:09:34,730 --> 00:09:35,130
All right.

142
00:09:35,260 --> 00:09:38,410
So now we can use this date function.

143
00:09:38,410 --> 00:09:39,420
So how are we going to use it.

144
00:09:39,460 --> 00:09:39,810
Okay.

145
00:09:39,910 --> 00:09:40,450
Very simple.

146
00:09:40,450 --> 00:09:41,200
I'm going to go right here.

147
00:09:41,200 --> 00:09:50,870
The bottom and after we update the new state of the elements are going to you know pass through the

148
00:09:50,930 --> 00:09:52,560
actual validation.

149
00:09:52,560 --> 00:09:53,270
All right.

150
00:09:53,690 --> 00:09:58,380
So it seems we have the new value inside this new elements before we update the state.

151
00:09:58,580 --> 00:10:02,150
What I can do I can create a variable called valid data.

152
00:10:02,150 --> 00:10:08,430
You can call this whatever you want doesn't matter and that's valid data will be true or false.

153
00:10:08,450 --> 00:10:16,370
Or maybe an array or maybe something this one will host you know the data that says if the element is

154
00:10:16,610 --> 00:10:19,880
valid or not valid or if we have an error message.

155
00:10:19,880 --> 00:10:20,330
All right.

156
00:10:20,570 --> 00:10:26,870
So I'm going to call this function and I will be passing all the values we have inside new elements.

157
00:10:26,870 --> 00:10:30,770
That's why we did it on a different variable.

158
00:10:30,770 --> 00:10:34,880
There are many ways to do this right now and this project we're going to do it this way on the next

159
00:10:34,880 --> 00:10:36,920
one we're going to change some things.

160
00:10:36,950 --> 00:10:38,640
It's going to get a little bit easier.

161
00:10:38,870 --> 00:10:39,620
All right.

162
00:10:39,930 --> 00:10:46,820
So today it's going to be returnable the data will be equal to whatever we get back from validate.

163
00:10:46,820 --> 00:10:47,340
All right.

164
00:10:47,750 --> 00:10:59,260
So now if I do console log opening close valid data and I type something let me bring the console.

165
00:10:59,500 --> 00:11:00,130
There you go.

166
00:11:00,140 --> 00:11:06,200
I type something we get of course undefined because this function this misc function is not returning

167
00:11:06,220 --> 00:11:07,000
anything.

168
00:11:07,010 --> 00:11:13,660
Right now we can add some things now from and roll whenever we call the bonneted function.

169
00:11:13,760 --> 00:11:18,620
We are passing the new element with the file with the updated value.

170
00:11:18,650 --> 00:11:23,180
So if I go to validate this one will be receiving an element.

171
00:11:23,210 --> 00:11:23,910
All right.

172
00:11:24,140 --> 00:11:29,820
Now this element contains all the data we have of that elements in this case.

173
00:11:29,830 --> 00:11:30,730
All of this.

174
00:11:30,920 --> 00:11:36,890
So what we need to check is the validation what which validation rules we have for this one and we will

175
00:11:36,890 --> 00:11:39,250
be accessing the value right.

176
00:11:39,350 --> 00:11:39,940
All right.

177
00:11:40,160 --> 00:11:42,510
So we have validation and value.

178
00:11:42,550 --> 00:11:44,390
I going to go back to Ms.

179
00:11:44,390 --> 00:11:48,130
I'm going to create a viable called error.

180
00:11:48,410 --> 00:11:56,320
So at the end if the input it's valid we will return an array because this array will be containing

181
00:11:56,380 --> 00:12:02,870
what we're saying if the input is true which is this which is valid or false if it's not valid and the

182
00:12:02,870 --> 00:12:07,940
second argument the second position is going to be a message we're going to be adding a message must

183
00:12:07,940 --> 00:12:10,130
be a valid email.

184
00:12:10,130 --> 00:12:13,690
Please enter a valid email or you know something like that.

185
00:12:13,700 --> 00:12:18,940
So the first position will be true which is you know if it's true valid or false.

186
00:12:18,950 --> 00:12:22,110
So by default it's true that it's the default.

187
00:12:22,700 --> 00:12:26,960
And then I get a pass an empty an empty message.

188
00:12:26,960 --> 00:12:33,410
So of course there's no match with the with the elements and with the form fields we have right here

189
00:12:33,500 --> 00:12:37,250
with this read there's no match we'd require or e-mail.

190
00:12:37,310 --> 00:12:43,530
We will assume that the e-mail that this impot this element needs no validation at all.

191
00:12:43,550 --> 00:12:46,280
That's why we are returning that the input is valid.

192
00:12:46,330 --> 00:12:49,280
True and no error message.

193
00:12:49,280 --> 00:12:53,000
Now of course if we have validation we need to do it.

194
00:12:53,000 --> 00:12:58,940
So first we're going to do e-mail I'm sorry we're going to do require we're going to check if the value

195
00:12:59,120 --> 00:13:00,710
it's empty or not.

196
00:13:00,710 --> 00:13:01,370
All right.

197
00:13:01,610 --> 00:13:04,720
So we're going to go right here and this is going to be very simple.

198
00:13:04,820 --> 00:13:08,220
We're going to enter elements OK.

199
00:13:08,430 --> 00:13:16,110
Then we enter validation just like this and then dot and we check if they're required it's equal to

200
00:13:16,110 --> 00:13:16,650
true.

201
00:13:16,680 --> 00:13:24,330
So if it's equal to true we will run some code and we will modify this error this arrival if we really

202
00:13:24,330 --> 00:13:25,080
need.

203
00:13:25,080 --> 00:13:25,740
All right.

204
00:13:25,980 --> 00:13:33,950
So I'm going to say Konst ballot equals and I need to trim whatever value I have inside elements I'm

205
00:13:33,960 --> 00:13:37,380
going to say element that value that trim.

206
00:13:37,380 --> 00:13:40,620
And this is not reacting to standard javascript.

207
00:13:40,710 --> 00:13:45,300
I'm going to trim it and I'm going to evaluate if this value is equal to nothing.

208
00:13:45,360 --> 00:13:50,520
Of course this will return true or false if it's empty will return.

209
00:13:50,530 --> 00:13:59,670
You know it's true if not false or they're going to say Kunst in a say message equals and we will be

210
00:13:59,670 --> 00:14:03,150
adding a message if ballot it's false.

211
00:14:03,150 --> 00:14:06,680
Of course if it's empty it's false if not empty is true.

212
00:14:06,900 --> 00:14:12,330
So if we do have a message I'm going to I'm going to return just to string just a text so I'm going

213
00:14:12,330 --> 00:14:14,700
to be adding some template strings right here.

214
00:14:14,970 --> 00:14:19,000
I'm going to say if ballot it's equal to false.

215
00:14:19,050 --> 00:14:21,460
Notice I'm using this at the beginning.

216
00:14:21,620 --> 00:14:24,680
You're going to return a message just like this.

217
00:14:24,720 --> 00:14:27,090
If not we are not going to return anything.

218
00:14:27,090 --> 00:14:28,400
Just an empty string.

219
00:14:28,730 --> 00:14:33,770
But right now I'm going to say this field is required.

220
00:14:33,960 --> 00:14:36,650
You know very simple message doesn't matter.

221
00:14:37,330 --> 00:14:44,280
And at the end after we do all this logic about it it's going to be true by default or false and message

222
00:14:44,310 --> 00:14:47,080
is going to be equal to a message or an empty string.

223
00:14:47,250 --> 00:14:49,670
No this message or an empty string.

224
00:14:49,920 --> 00:14:53,950
So when we return it's the actual error right here.

225
00:14:54,210 --> 00:14:55,560
So going to say return.

226
00:14:55,660 --> 00:14:57,090
So are you going to say error.

227
00:14:57,300 --> 00:14:58,630
It's equal to.

228
00:14:58,800 --> 00:15:06,570
And if it's not bounded we will append an array will change it to an array would be valid we have right

229
00:15:06,570 --> 00:15:08,320
here which is true or false.

230
00:15:08,520 --> 00:15:14,010
And the I'm sorry in this case falls because we are doing a check right here and the actual message

231
00:15:14,010 --> 00:15:14,990
that we get.

232
00:15:15,180 --> 00:15:17,550
If the element is not valid.

233
00:15:17,550 --> 00:15:20,580
If not or is it still going to be equal to error.

234
00:15:20,610 --> 00:15:23,300
The default which is true and empty.

235
00:15:23,640 --> 00:15:28,660
And this at the end at the very end we just return the error.

236
00:15:28,820 --> 00:15:33,200
It does get looks nice.

237
00:15:33,250 --> 00:15:41,020
So now I'm going to go back to n roll and write here we are updating the violent data so Barlett data

238
00:15:41,160 --> 00:15:41,950
you go.

239
00:15:42,430 --> 00:15:46,370
Well let's see what you get really made a mistake right here.

240
00:15:46,400 --> 00:15:48,190
Ms error is not the find.

241
00:15:48,490 --> 00:15:52,900
That is my mistake or rather there we go.

242
00:15:55,630 --> 00:15:56,190
All right.

243
00:15:56,530 --> 00:16:02,760
So I'm going to go right here and if I type something we get true and we get empty.

244
00:16:02,950 --> 00:16:05,320
And that is good because we have what caracter.

245
00:16:05,530 --> 00:16:07,340
It's it's not empty.

246
00:16:07,420 --> 00:16:13,090
Now if I delete it we get falls and this field is required.

247
00:16:13,090 --> 00:16:19,420
So now we have an array saying telling us that the input if it's false if it's valid or not and if we

248
00:16:19,420 --> 00:16:20,750
do have an error message.

249
00:16:20,830 --> 00:16:25,770
So we have an array inside of this and rollbar all this valid data.

250
00:16:25,930 --> 00:16:28,810
So now what we need to do is we need to update the state.

251
00:16:28,810 --> 00:16:32,680
Remember right here we have a ballot and we have a validation message.

252
00:16:32,680 --> 00:16:35,760
So we need to convert this at this.

253
00:16:35,790 --> 00:16:38,480
The keys and values to the actual form data.

254
00:16:38,740 --> 00:16:44,780
So since I have it inside valid data right here the array I'm going to delete this and I to say OK.

255
00:16:45,010 --> 00:16:54,100
So new elements dot valid is going to be equal to whatever I get from valid data and the precision number

256
00:16:54,100 --> 00:16:56,810
zero of that array which is true or false.

257
00:16:57,310 --> 00:17:03,790
And the validation message same thing new elements dot and a have it right here on the day the message

258
00:17:04,390 --> 00:17:10,990
is going to be equal to whatever I get from ballasted data and the position number 1 which is the actual

259
00:17:10,990 --> 00:17:12,920
message or empty.

260
00:17:13,120 --> 00:17:13,560
Right.

261
00:17:13,570 --> 00:17:14,980
Makes sense.

262
00:17:14,980 --> 00:17:26,920
So now of course if I can slog console log new form data and from data that is get when me type something

263
00:17:27,700 --> 00:17:32,620
and I inspect this email elements we get that the devalue it says it's valid.

264
00:17:32,620 --> 00:17:33,420
True.

265
00:17:33,610 --> 00:17:35,580
And the validation message is nothing.

266
00:17:35,590 --> 00:17:43,270
If I delete it inside the state of e-mail we get an error message validation message and valid false.

267
00:17:43,270 --> 00:17:49,780
So now what we can do whenever the application renders with this date with the latest state we can check

268
00:17:49,780 --> 00:17:53,150
if we do have a validation message display the message.

269
00:17:53,170 --> 00:17:59,290
And then of course later when we submit the form if the is input it's valid for us.

270
00:17:59,440 --> 00:18:01,680
We will not do anything and we will update.

271
00:18:01,690 --> 00:18:07,150
We will actually show a different message or maybe you know something else we will not submit the form

272
00:18:07,160 --> 00:18:09,450
because the element is false.

273
00:18:09,450 --> 00:18:11,930
All right so let's add this validation message.

