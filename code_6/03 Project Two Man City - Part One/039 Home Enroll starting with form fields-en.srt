1
00:00:00,530 --> 00:00:04,880
All right so let's create the input and everything else so everything is going to be on the inside and

2
00:00:04,880 --> 00:00:05,580
roll.

3
00:00:05,600 --> 00:00:08,080
So I'm going to go to and roll.

4
00:00:08,180 --> 00:00:10,480
Let me just close some other things.

5
00:00:10,480 --> 00:00:11,980
They have opened right here.

6
00:00:11,990 --> 00:00:12,990
I don't need them.

7
00:00:13,080 --> 00:00:14,990
They're just kind of in the way.

8
00:00:15,110 --> 00:00:16,030
So anyway.

9
00:00:16,100 --> 00:00:18,340
Not going to do you any more that it's done.

10
00:00:18,350 --> 00:00:20,130
So I'm in the index of promotion.

11
00:00:20,240 --> 00:00:21,680
I'm going to bring in roll.

12
00:00:21,710 --> 00:00:25,800
Of course this one will be class based component.

13
00:00:25,820 --> 00:00:29,990
We need to use the state to you know to work with the actual input.

14
00:00:30,230 --> 00:00:31,690
So it's going to be a controlled component.

15
00:00:31,700 --> 00:00:38,360
So re-act stateless sart react class based components Burguet so I'm going to call and roll that is

16
00:00:38,360 --> 00:00:42,610
get it now from here we will of course import some other things.

17
00:00:42,860 --> 00:00:49,690
But for now I'm just going to import fade from Briac reveal we're going to use that fading effect.

18
00:00:49,730 --> 00:00:55,870
So re-act reveal and of course for Slash and inmate in the name of the effect.

19
00:00:55,910 --> 00:00:57,120
Right.

20
00:00:57,240 --> 00:01:02,820
And is the first thing now instead of here what we will do we will create of course the title everything

21
00:01:02,840 --> 00:01:03,240
else.

22
00:01:03,440 --> 00:01:09,860
But the input needs to be controlled so we need a state to control everything through state and what

23
00:01:09,860 --> 00:01:10,870
we will create.

24
00:01:10,880 --> 00:01:17,300
If you maybe you come from a different course with me we will create a file that will render all the

25
00:01:17,300 --> 00:01:19,570
inputs that we have inside state.

26
00:01:19,580 --> 00:01:24,050
We have declared insights state don't worry if it does confuse you.

27
00:01:24,050 --> 00:01:26,790
You know don't worry they're going to do everything is step by step.

28
00:01:26,810 --> 00:01:32,770
So first thing going to create a state now inside the state we will have all the logic of the form.

29
00:01:32,930 --> 00:01:34,560
So first I want to store.

30
00:01:34,590 --> 00:01:38,450
We have our forms so form error.

31
00:01:38,600 --> 00:01:40,290
So it's going to start as follows.

32
00:01:40,310 --> 00:01:41,630
That's the first thing.

33
00:01:41,630 --> 00:01:48,060
Then of course if we get success if the form gets you know submitted and everything goes OK.

34
00:01:48,080 --> 00:01:53,210
We have a message so form success for now is going to be empty when the applications start.

35
00:01:53,330 --> 00:01:58,490
Then we need a place where we or are we going to be stored all the elements of the four.

36
00:01:58,490 --> 00:02:03,300
Right now we just have one but we could have maybe a name a password or something else.

37
00:02:03,320 --> 00:02:11,390
So inside the key form data form just like this and then data will have all the inputs that we need

38
00:02:11,740 --> 00:02:13,010
in this case we just need one.

39
00:02:13,010 --> 00:02:19,020
So it's going to be called email and the name it's really important if your input it's email.

40
00:02:19,040 --> 00:02:20,280
This should be e-mail.

41
00:02:20,420 --> 00:02:22,720
If it's a name it should be name.

42
00:02:22,730 --> 00:02:26,630
So this is like the name of the input inside a email right.

43
00:02:26,630 --> 00:02:27,670
Same thing.

44
00:02:27,800 --> 00:02:33,890
So I'm going to open it close now instead of this email we'll pass a bunch of attributes a bunch of

45
00:02:33,890 --> 00:02:35,180
key value pairs.

46
00:02:35,180 --> 00:02:38,010
We need to generate this input.

47
00:02:38,300 --> 00:02:43,330
So the first one is going to be with what kind of elements we get you know we want to get.

48
00:02:43,340 --> 00:02:47,720
So it's going to be element and the name for this is just a name pre-text right.

49
00:02:47,730 --> 00:02:48,300
OK.

50
00:02:48,740 --> 00:02:51,710
So then of course that element has a value.

51
00:02:51,830 --> 00:02:54,410
And when the application starts it's going to be empty.

52
00:02:54,410 --> 00:02:56,550
So we get an empty value.

53
00:02:57,110 --> 00:03:03,050
Now each each element could get a configuration you know when you create an input you need to give it

54
00:03:03,050 --> 00:03:11,780
a name maybe a placeholder and maybe it type well inside config begin to store all this configuration.

55
00:03:11,780 --> 00:03:18,020
So the name again is just like the H Tim L name when you create an input NHT mail.

56
00:03:18,080 --> 00:03:19,390
So email input.

57
00:03:19,490 --> 00:03:22,520
That's the kind of the name of this type.

58
00:03:22,640 --> 00:03:25,910
Well it is an input but it's not typed text.

59
00:03:25,970 --> 00:03:27,780
It's going to be a type of e-mail.

60
00:03:27,780 --> 00:03:32,210
All right then we're going to add a place holder just like this.

61
00:03:32,590 --> 00:03:35,800
And it's going to be Enter make it right.

62
00:03:35,950 --> 00:03:38,980
Enter your e-mail.

63
00:03:38,990 --> 00:03:39,410
All right.

64
00:03:39,430 --> 00:03:40,580
And that is it for now.

65
00:03:40,970 --> 00:03:43,990
Of course we will need to add some validation.

66
00:03:44,120 --> 00:03:49,780
So of course I'm going to create a place where we're going to be hosting our validations.

67
00:03:49,790 --> 00:03:53,500
So this one whenever we submit it needs to be required.

68
00:03:53,510 --> 00:03:57,620
We cannot submit something if you know if we have an empty value.

69
00:03:57,800 --> 00:04:02,380
So it's going to be required and then we just pass a boolean and there's one.

70
00:04:02,450 --> 00:04:06,010
Now what else we're going to be checking if this one it is an email.

71
00:04:06,010 --> 00:04:12,320
So if we do have true or validation it's going to check that we have a valid e-mail you know regular

72
00:04:12,320 --> 00:04:13,790
validation and HMO.

73
00:04:14,180 --> 00:04:20,490
So Como and I are going to go below the validation and we can add an attribute saying that it's valid.

74
00:04:20,540 --> 00:04:23,950
So whenever the application starts we don't really have a value.

75
00:04:23,960 --> 00:04:27,630
So it's going to start as false it's not valid.

76
00:04:27,630 --> 00:04:27,990
All right.

77
00:04:28,040 --> 00:04:33,440
And of course after we do some checking before we submit the server we're going to change changes to

78
00:04:33,710 --> 00:04:33,880
it.

79
00:04:33,890 --> 00:04:34,910
True.

80
00:04:34,910 --> 00:04:35,840
All right.

81
00:04:35,840 --> 00:04:40,140
And of course if we get an error message from validation I'm going to add one more.

82
00:04:40,160 --> 00:04:43,440
So it's going to be called a validation message.

83
00:04:43,580 --> 00:04:48,130
And again the Whenever the application starts starts empty.

84
00:04:48,530 --> 00:04:54,410
So what is the point of doing all of this now inside of the render will start creating all this you

85
00:04:54,410 --> 00:04:56,280
know its template and the input.

86
00:04:56,450 --> 00:04:58,210
And we weren't going to pass.

87
00:04:58,210 --> 00:05:02,790
We're going to create reusable component and we're going to be passing this data.

88
00:05:02,980 --> 00:05:08,540
So that component will read this and it will return an input with everything we need.

89
00:05:08,560 --> 00:05:09,760
That is the idea.

90
00:05:10,030 --> 00:05:11,110
And later maybe.

91
00:05:11,200 --> 00:05:16,810
And we're going to be using it later when when we create the admin section of the of the web page we're

92
00:05:16,900 --> 00:05:20,790
going to use that form data file that we use eval component.

93
00:05:20,900 --> 00:05:21,550
All right.

94
00:05:21,820 --> 00:05:26,660
So I'm going to go to the render and I'm going to start doing everything now.

95
00:05:26,770 --> 00:05:32,360
Again if you notice on the original one who might just show you if we scroll down we get this and we

96
00:05:32,380 --> 00:05:34,500
get a fading effect effect.

97
00:05:34,510 --> 00:05:42,120
So I'm going to wrap everything inside faced the same fate we have right here on the top right.

98
00:05:42,190 --> 00:05:45,970
So inside of here of course we need to add some HDMI mail.

99
00:05:46,060 --> 00:05:52,750
So the device is going to be a class name of and roll just like this and roll wrapper.

100
00:05:52,820 --> 00:05:54,300
Sense.

101
00:05:54,880 --> 00:05:57,010
Then of course we do have form.

102
00:05:57,040 --> 00:05:58,820
So I'm going to create a form.

103
00:05:58,990 --> 00:06:07,140
Now whenever we submit a form we need to call to a function to access this just like this and of course

104
00:06:07,530 --> 00:06:12,440
whenever the form gets submitted we need to run a function and pass the event.

105
00:06:12,780 --> 00:06:16,130
So I'm going to say event and we didn't have a function.

106
00:06:16,180 --> 00:06:19,550
I'm going to create right now and we are not going to do anything right now.

107
00:06:19,650 --> 00:06:27,610
So I'm going to call it MIT and then form and what we will do we will pass the event of you know submitting

108
00:06:27,610 --> 00:06:28,250
a form.

109
00:06:28,440 --> 00:06:34,170
We don't have this function going to go right here and say submit for opening close so we can skip any

110
00:06:34,440 --> 00:06:35,430
messages.

111
00:06:35,430 --> 00:06:35,750
All right.

112
00:06:35,820 --> 00:06:38,130
Let's get we are on the good track right now.

113
00:06:38,130 --> 00:06:49,980
Of course we have a title so we'll create a div just a div with a class name and roll title and it's

114
00:06:49,980 --> 00:06:54,690
going to be enter your e-mail.

115
00:06:55,170 --> 00:06:56,040
All right.

116
00:06:56,430 --> 00:07:02,310
So then I will create the container of the you know the actual input and this one will be a class of

117
00:07:02,700 --> 00:07:06,530
class name and then end roll input.

118
00:07:06,540 --> 00:07:07,610
All right.

119
00:07:08,250 --> 00:07:10,610
OK so now what we can do.

120
00:07:10,620 --> 00:07:14,020
Let me see what we get so far in Reloaded.

121
00:07:14,940 --> 00:07:18,100
And of course we get nothing because we need to include add.

122
00:07:18,150 --> 00:07:19,250
Sorry for that.

123
00:07:19,250 --> 00:07:25,050
Import and roll from that for Slash and roll.

124
00:07:25,050 --> 00:07:27,750
And now of course make reference to this.

125
00:07:27,850 --> 00:07:29,630
All right.

126
00:07:29,640 --> 00:07:31,300
So that's what you get.

127
00:07:31,350 --> 00:07:32,230
Enter your email.

128
00:07:32,280 --> 00:07:32,610
OK.

129
00:07:32,790 --> 00:07:40,830
So now right here the bottom we should be getting an input right a form field but of course how can

130
00:07:40,830 --> 00:07:41,370
we create it.

131
00:07:41,370 --> 00:07:47,400
We need to create that use reusable component so I'm going to go to you I'm going to create a new file

132
00:07:47,790 --> 00:07:52,490
called form fields that jazz.

133
00:07:52,560 --> 00:07:58,560
So this form fields is just going to be a stateless component component just though it's going to be

134
00:07:58,560 --> 00:08:03,390
we're going to be returning just to function and that function we will do some checking and return some

135
00:08:03,390 --> 00:08:04,050
GSX.

136
00:08:04,050 --> 00:08:04,960
That is the idea.

137
00:08:05,130 --> 00:08:12,740
So I'm going to say import re-act from Briac because we need to return's GSX right.

138
00:08:13,230 --> 00:08:20,400
So I'm going to create a function Konst form field just like this form field equals we will receive

139
00:08:20,400 --> 00:08:21,240
some props.

140
00:08:21,240 --> 00:08:28,630
And then of course we will do some checking and at the very end we will be returning you know some GSX

141
00:08:28,630 --> 00:08:36,490
so I'm going to open and close and pass it off and say I don't know form for now Porterfield frigate.

142
00:08:37,020 --> 00:08:46,600
So now the Konst forum feel we're going to be exporting this export default form field.

143
00:08:46,650 --> 00:08:49,500
So again it's just a re-act stateless component.

144
00:08:49,950 --> 00:08:54,740
So I'm going to go back to enroll and of course import form fields.

145
00:08:54,750 --> 00:08:59,050
So import and I believe I call this form fields.

146
00:08:59,690 --> 00:09:01,580
Right now I believe so.

147
00:09:01,620 --> 00:09:10,350
I'm notcher from feel so from Dad forward slash slash.

148
00:09:10,650 --> 00:09:18,290
Then one more and you I and then form feels very good.

149
00:09:18,360 --> 00:09:25,800
So now if I make a reference to Ford Field right here just like this we should be getting that form

150
00:09:25,800 --> 00:09:28,750
field text and we do we get it.

151
00:09:28,770 --> 00:09:34,290
So that is get now this form fill we will pass to this to this component.

152
00:09:34,290 --> 00:09:40,410
The information we have for this input for e-mail and this form field will check what kind of input

153
00:09:40,410 --> 00:09:47,150
we have the old configuration and it will return an input with all this you know information.

154
00:09:47,160 --> 00:09:49,610
Now we might have many types of inputs.

155
00:09:49,740 --> 00:09:56,010
So this form field will be deciding what kind of you know component or input will be returning.

156
00:09:56,010 --> 00:09:58,160
Right now we just have one bit on the future.

157
00:09:58,230 --> 00:10:06,700
We can add much more or so inside in our Roll we need to pass everything as props all the other what

158
00:10:06,790 --> 00:10:09,150
form fill needs to create that form.

159
00:10:09,150 --> 00:10:09,880
All right.

160
00:10:09,930 --> 00:10:13,510
So inside for IFILL We will start passing all the props.

161
00:10:13,590 --> 00:10:18,540
So I'm going to make some space some room right here and we're going to be passing an A and A D.

162
00:10:18,750 --> 00:10:22,850
So the ID is the name of the the name of the actual input.

163
00:10:23,010 --> 00:10:26,570
So we call it email then we need to pass the form data.

164
00:10:26,580 --> 00:10:30,460
So I'm going to say form data just like this equals.

165
00:10:30,670 --> 00:10:36,870
Does that state that form data that e-mail or at.

166
00:10:37,620 --> 00:10:40,010
And then we have a change property.

167
00:10:40,420 --> 00:10:42,170
We're going to maybe do it later.

168
00:10:42,570 --> 00:10:43,720
That's fine for now.

169
00:10:43,830 --> 00:10:49,410
So now this form if you will be receiving an ID with e-mail which is the name of the key right here

170
00:10:49,860 --> 00:10:51,610
and then the four data inside.

171
00:10:51,720 --> 00:10:52,320
All right.

172
00:10:52,500 --> 00:10:56,040
I'm going to go back to form fields now inside form fields.

173
00:10:56,040 --> 00:11:01,740
We will have a template and then we will return this template so we're going to do this and create a

174
00:11:01,740 --> 00:11:05,430
function called render and then template.

175
00:11:05,760 --> 00:11:06,970
We didn't have this function.

176
00:11:07,440 --> 00:11:11,950
So I'm going to copy the name of the function and I will you know create the function right now.

177
00:11:11,970 --> 00:11:14,270
Konst render template.

178
00:11:14,450 --> 00:11:22,510
Open and close and then of course we will do something right here and it's Kunst.

179
00:11:22,570 --> 00:11:22,960
All right.

180
00:11:24,280 --> 00:11:30,770
So now whenever we start we make a reference to this we have a template and the template starts empty.

181
00:11:30,790 --> 00:11:38,050
So that form template equals no equals to nothing.

182
00:11:38,050 --> 00:11:42,010
So if we get a mistake or something is wrong at the end will return nothing.

183
00:11:42,010 --> 00:11:45,580
Instead of you know maybe just some array I'm T-Ray or something like that.

184
00:11:45,580 --> 00:11:46,370
Just nothing.

185
00:11:46,370 --> 00:11:47,330
All right.

186
00:11:47,350 --> 00:11:54,250
And then what we will do we will add a switch and the switch will we will will check what kind of input

187
00:11:54,370 --> 00:11:55,390
we have in email.

188
00:11:55,400 --> 00:12:01,300
You know if it's a simple text or it's a text area or user selects or whatever doesn't matter.

189
00:12:01,360 --> 00:12:06,450
So I'm going to add a switch open and close just like this with the form data.

190
00:12:06,460 --> 00:12:09,300
Remember we have a form data at the top.

191
00:12:09,350 --> 00:12:14,570
Oh I didn't do this search for this we are passing props from that to this component.

192
00:12:14,860 --> 00:12:17,830
So we are right now getting IDM form data.

193
00:12:17,890 --> 00:12:21,560
So I will use destructuring instead of the keyword prompts.

194
00:12:21,640 --> 00:12:22,300
Right.

195
00:12:22,360 --> 00:12:24,070
Just like with it before.

196
00:12:24,070 --> 00:12:29,240
So with the form data just like this and the actual ID.

197
00:12:29,770 --> 00:12:37,180
So now if I do switch I can pass form data dot and element.

198
00:12:37,210 --> 00:12:41,280
So if I go back to one roll we know that the form data element it's input.

199
00:12:41,280 --> 00:12:42,160
All right.

200
00:12:42,160 --> 00:12:47,530
So where we will be checking it what kind of input we are getting from this form elements.

201
00:12:47,530 --> 00:12:48,560
Right.

202
00:12:48,640 --> 00:12:55,040
So Romulo here open it cause it's a switch just a Gudel switch.

203
00:12:55,390 --> 00:12:57,940
So if the form temp is the case.

204
00:12:57,960 --> 00:13:02,800
Sorry if the case the case is impaired just like this.

205
00:13:02,830 --> 00:13:04,590
We will return something.

206
00:13:04,720 --> 00:13:06,340
And of course we need to add a break.

207
00:13:06,340 --> 00:13:09,130
This is just a switch so we need to have a break.

208
00:13:09,290 --> 00:13:15,220
If you're at a break we will have a sign that something is going to break for us.

209
00:13:15,280 --> 00:13:22,330
And then at the end we have a default and we would just return the form template going to say that the

210
00:13:22,330 --> 00:13:29,320
form template that we have at the top it's still null and default.

211
00:13:29,320 --> 00:13:30,580
There we go.

212
00:13:30,820 --> 00:13:31,440
And that is it.

213
00:13:31,540 --> 00:13:37,990
So if we don't have a case we are not matching in case the default is still the form template input

214
00:13:38,230 --> 00:13:42,810
and at the very very end of this function we just return the form template.

215
00:13:42,940 --> 00:13:44,230
Just like this.

216
00:13:44,230 --> 00:13:47,650
So if we have no match the template is going to be null.

217
00:13:47,650 --> 00:13:52,570
So this whole function will be will be returning nothing nothing at all.

218
00:13:52,570 --> 00:13:53,300
All right.

219
00:13:53,560 --> 00:14:00,270
So if we do have a match in the case if it's an input and we do have a match right here with input what

220
00:14:00,280 --> 00:14:05,020
we will be returning is a form template with some you know some code inside.

221
00:14:05,020 --> 00:14:11,140
So I'm going to say form template equals and I'm going to open and close and right here is just some

222
00:14:11,500 --> 00:14:13,270
S.J. insects right here.

223
00:14:13,300 --> 00:14:19,290
We will return an input weird something whatever.

224
00:14:19,300 --> 00:14:19,860
All right.

225
00:14:20,050 --> 00:14:24,190
So now in theory if I go to our application we get that input with something.

226
00:14:24,370 --> 00:14:29,290
So we do have a match and right now we need to return an input text.

227
00:14:29,290 --> 00:14:30,040
All right.

228
00:14:30,040 --> 00:14:31,400
So I'm going to go right here.

229
00:14:31,480 --> 00:14:33,500
Dave going into this.

230
00:14:33,700 --> 00:14:39,400
And inside of the div. What do we need to do is to send back an input input.

231
00:14:39,670 --> 00:14:40,420
Right.

232
00:14:40,630 --> 00:14:43,740
Of course with the input we have a lot of configuration.

233
00:14:43,900 --> 00:14:51,410
First if you remember inside of the input config we have the name the type and the placeholder.

234
00:14:51,640 --> 00:14:59,230
So right from the start we could do dot dot dot form data access that form data and then pass the config

235
00:14:59,950 --> 00:15:01,420
and everything will be passed.

236
00:15:01,570 --> 00:15:03,960
As you know a regular attack of the impact.

237
00:15:04,240 --> 00:15:07,710
So if I check out the Riego we get the e-mail.

238
00:15:07,710 --> 00:15:09,600
Let me do an inspect right here.

239
00:15:11,390 --> 00:15:14,890
Inspect there go.

240
00:15:15,260 --> 00:15:21,380
So let me make it a little bit bigger so we get that name which is the one we have on the confect the

241
00:15:21,380 --> 00:15:24,880
type again same on the confect and the placeholder.

242
00:15:25,270 --> 00:15:30,290
And now what we can do for example if you have a different form we just include form fields.

243
00:15:30,410 --> 00:15:36,130
We just copy this or we pass it to the other components and then just include the form fields and there's

244
00:15:36,140 --> 00:15:38,600
no need to create the input and do all the logic.

245
00:15:38,620 --> 00:15:43,320
Every time you want to add an input you just create the state and that's it.

246
00:15:43,340 --> 00:15:43,950
Good idea.

247
00:15:44,000 --> 00:15:44,810
All right.

248
00:15:44,810 --> 00:15:47,110
Of course every input has a value.

249
00:15:47,270 --> 00:15:55,610
So again to add value opening close and I'm going to say this one it's the form data that value right.

250
00:15:55,640 --> 00:15:59,570
Of course whenever the application starts the value is going to be empty.

251
00:15:59,610 --> 00:16:04,180
Right so now let me just close as for now.

252
00:16:04,890 --> 00:16:09,410
Whenever we change we type something inside of the input nothing happens.

253
00:16:09,420 --> 00:16:11,790
I'm typing and nothing happens.

254
00:16:11,790 --> 00:16:17,160
And this is because we need to trigger a function that the text the onchange on the input.

255
00:16:17,310 --> 00:16:20,260
And it will update the state of this email.

256
00:16:20,400 --> 00:16:24,860
Since we are passing the value right here whenever this component updates.

257
00:16:24,870 --> 00:16:30,780
You know this is State updates we will be passing a value right here and the form field will return

258
00:16:30,840 --> 00:16:31,870
a value right here.

259
00:16:31,890 --> 00:16:34,920
So we will see the Chaser's right here.

260
00:16:34,920 --> 00:16:40,530
So let's go to the next section because this one went too long already and start you know adding what's

261
00:16:40,530 --> 00:16:41,700
next on this component.

