1
00:00:00,800 --> 00:00:06,400
OK so let's finish the log in of course after we enter some data we need to submit the form.

2
00:00:06,410 --> 00:00:09,920
So for this week we need to know some balance right here.

3
00:00:10,070 --> 00:00:17,000
But first we can look at the error state so if with this that state that form error remember that at

4
00:00:17,000 --> 00:00:19,280
the top we have the form or state.

5
00:00:19,370 --> 00:00:24,760
We will be returning DEP and if not we can at return nothing.

6
00:00:24,800 --> 00:00:26,020
Just like with it before.

7
00:00:26,040 --> 00:00:27,200
All right.

8
00:00:27,220 --> 00:00:27,950
No.

9
00:00:28,340 --> 00:00:28,970
OK.

10
00:00:29,210 --> 00:00:31,620
So I'm going to create an open and close.

11
00:00:31,720 --> 00:00:39,830
This will have cost name of error label and text.

12
00:00:39,850 --> 00:00:42,950
Please check your data.

13
00:00:42,950 --> 00:00:48,070
Now most of the message right here in this application at least they're going to be very general.

14
00:00:48,320 --> 00:00:55,220
Of course you can try to catch the error from the server because you get a code back from Mongo Magoo's

15
00:00:55,700 --> 00:01:00,090
so you can you know create a special thing for this of different types of messages.

16
00:01:00,200 --> 00:01:01,840
But it's completely up to you.

17
00:01:02,300 --> 00:01:11,150
So then of course we have a button opening close and on click just like this what we will do we will

18
00:01:11,540 --> 00:01:17,420
fire the same band that we do with the unsufficient same thing.

19
00:01:17,420 --> 00:01:19,930
Now I notice that you're passing any event.

20
00:01:19,970 --> 00:01:21,660
So let's go to this function.

21
00:01:21,740 --> 00:01:24,910
We're going to catch the event just like here.

22
00:01:25,040 --> 00:01:33,650
And of course we need to do event prevent default events oops event that doesn't prevent default.

23
00:01:33,650 --> 00:01:34,670
All right.

24
00:01:34,820 --> 00:01:44,090
Now if you remember we need to catch 22 kind of a convert all this form data all the keys to just a

25
00:01:44,090 --> 00:01:48,930
key value per to e-mail and the actual value right here and everything else.

26
00:01:48,950 --> 00:01:50,360
We actually don't need it.

27
00:01:50,510 --> 00:01:52,160
And the same with password.

28
00:01:52,190 --> 00:01:56,720
So just like with that with new form data we will create a function to do this.

29
00:01:56,720 --> 00:02:01,350
And later when we were working with different forms we just need to do this.

30
00:02:01,370 --> 00:02:05,700
And maybe you if you're coming from the second project hope.

31
00:02:05,720 --> 00:02:07,130
How much easier is this.

32
00:02:07,130 --> 00:02:10,100
How much cleaner is this ride.

33
00:02:10,340 --> 00:02:11,600
I told utility before.

34
00:02:11,840 --> 00:02:15,920
So data to serve meant.

35
00:02:16,210 --> 00:02:21,540
So this barbel will host the data we're going to be submitting.

36
00:02:21,610 --> 00:02:22,300
The end.

37
00:02:22,520 --> 00:02:27,960
So I'm going to create a function called generate and then data kind of makes sense.

38
00:02:27,960 --> 00:02:33,410
We are going to generate the data and we need to pass two things I need to pass that this state that

39
00:02:33,410 --> 00:02:35,450
form data and then coma.

40
00:02:35,480 --> 00:02:40,190
And just like with it right here because we might need it and we actually going to eat at home the next

41
00:02:40,190 --> 00:02:45,200
sections in the next few sections is the name of what we are doing in this case.

42
00:02:45,200 --> 00:02:45,690
We are.

43
00:02:45,710 --> 00:02:47,560
And so we are saying logging it.

44
00:02:47,930 --> 00:02:54,650
So we're going to go right here and console log the data to cement just to make sure you're getting

45
00:02:54,710 --> 00:02:56,520
everything back correctly.

46
00:02:56,690 --> 00:02:57,940
So we don't have this function.

47
00:02:57,970 --> 00:02:59,220
I'm going to put it right here.

48
00:02:59,230 --> 00:03:05,450
Coma generate data and I'm going to go back to form actions and we need to you know create the function.

49
00:03:05,490 --> 00:03:07,170
It's going to be a very simple function.

50
00:03:07,250 --> 00:03:14,810
So export Konst generate data equals to a function.

51
00:03:14,810 --> 00:03:22,530
Now if you remember we are getting the form data coma and the form name right.

52
00:03:22,550 --> 00:03:25,070
Just like with the brain here the top form name.

53
00:03:25,220 --> 00:03:25,770
All right.

54
00:03:25,970 --> 00:03:34,220
So first this data to submit so data to serve met is going to start as an empty object.

55
00:03:34,520 --> 00:03:36,920
And of course we are going to be entering form data.

56
00:03:37,100 --> 00:03:45,220
So we're going to do a four good old for opening close and for let key in form data.

57
00:03:45,260 --> 00:03:48,670
We're going to do something so for every key we have inside form data.

58
00:03:48,890 --> 00:03:56,480
We have a few ones right here we're going to just grab the one we need which is the value right.

59
00:03:56,540 --> 00:03:57,060
OK.

60
00:03:57,230 --> 00:03:59,680
So we say now data to submit.

61
00:03:59,990 --> 00:04:05,170
We passed the key which in this case email or password.

62
00:04:05,270 --> 00:04:10,790
And we're going to say OK just returned for this one for us as a result of this one which is the form

63
00:04:11,120 --> 00:04:12,900
the form data right here.

64
00:04:13,160 --> 00:04:16,770
This form data and then we enter the key.

65
00:04:17,540 --> 00:04:21,430
And then we say that we want to banlieue for this one.

66
00:04:21,440 --> 00:04:27,040
So now at the end the only thing this data out of MIT will host is just a key and a value.

67
00:04:27,550 --> 00:04:28,190
Right.

68
00:04:28,400 --> 00:04:29,450
All right.

69
00:04:30,350 --> 00:04:36,800
And then return data sets of mid.

70
00:04:36,940 --> 00:04:37,910
Very good.

71
00:04:38,390 --> 00:04:40,810
So now what are we going to be doing.

72
00:04:40,900 --> 00:04:42,590
We're going to.

73
00:04:43,070 --> 00:04:46,130
You know got we believe everything is going to work.

74
00:04:46,450 --> 00:04:47,740
So now let's go to log in.

75
00:04:47,740 --> 00:04:49,310
Let's try it again.

76
00:04:49,770 --> 00:04:52,330
And I didn't ask and text forgot to do that.

77
00:04:52,360 --> 00:04:56,340
Let's do it right now so we can pretty much finish with this section.

78
00:04:56,620 --> 00:04:57,840
So each side of the button.

79
00:04:57,850 --> 00:04:58,570
What are we going to say.

80
00:04:58,570 --> 00:05:04,420
Log in or log in or sign in whatever it is that you want to use.

81
00:05:04,930 --> 00:05:05,560
So try again.

82
00:05:05,600 --> 00:05:06,630
Going to type an email.

83
00:05:06,690 --> 00:05:13,480
As a matter of making a request right now and a passport in and going to open the console locks so we

84
00:05:13,480 --> 00:05:14,810
can actually see it.

85
00:05:15,800 --> 00:05:23,790
All right console log in and we get it we get e-mail and we get the passport Vergon everything works.

86
00:05:23,940 --> 00:05:28,980
So now of course this data is going to be the one that is going to we are going to submit.

87
00:05:28,980 --> 00:05:29,940
Now we have one more thing.

88
00:05:29,940 --> 00:05:33,130
We are just going to form the data.

89
00:05:33,150 --> 00:05:39,150
We are entering form data and we are adding this but we are not really checking if the form it's really

90
00:05:39,150 --> 00:05:39,870
valid.

91
00:05:40,080 --> 00:05:46,590
We actually did some validation but maybe the user enter some information did log in and the the validation

92
00:05:46,800 --> 00:05:48,870
actually we have to get the message right here.

93
00:05:48,870 --> 00:05:52,050
For example let me just show you with an example.

94
00:05:52,050 --> 00:05:58,790
So inspect and if I go to cancel and log in again we are still getting value but the values are wrong.

95
00:05:58,790 --> 00:06:06,990
So we need a previous step or maybe actually a new step at to check that the there's is a valid field.

96
00:06:07,100 --> 00:06:07,550
Right.

97
00:06:07,550 --> 00:06:09,280
It's actually correct.

98
00:06:09,290 --> 00:06:15,390
We're good to go but we are not that we are going to post the data into the web to the server.

99
00:06:15,770 --> 00:06:16,460
OK.

100
00:06:17,120 --> 00:06:26,270
So I'm going to go right here and I'm going to create a viable and the Vrable going to say form is valid.

101
00:06:26,330 --> 00:06:27,480
Makes sense.

102
00:06:27,950 --> 00:06:31,440
So if the form is valid we can move forward if not not.

103
00:06:31,490 --> 00:06:33,970
So this one at the end is going to be a true or false.

104
00:06:34,070 --> 00:06:35,450
So if it's true we move forward.

105
00:06:35,480 --> 00:06:37,250
If it's false we don't.

106
00:06:37,490 --> 00:06:40,430
So is form valid

107
00:06:43,320 --> 00:06:45,670
I did whatever form about it.

108
00:06:45,700 --> 00:06:46,730
All right.

109
00:06:47,230 --> 00:06:52,230
So I'm going to be passing the same thing that this that state farm data and that log in.

110
00:06:52,440 --> 00:06:56,430
So at the end of course we need to create dysfunction.

111
00:06:56,440 --> 00:06:57,540
It's form ballot.

112
00:06:57,550 --> 00:07:01,750
So let's go to form actions and I can add it right here.

113
00:07:01,900 --> 00:07:08,000
So export Export Konst is form ballot.

114
00:07:08,020 --> 00:07:14,960
Open and close and it's just a function and the arguments are going to be the same that once.

115
00:07:15,160 --> 00:07:15,660
All right.

116
00:07:15,820 --> 00:07:18,320
So what are we going to be doing right here.

117
00:07:18,400 --> 00:07:20,420
Really really simple.

118
00:07:20,440 --> 00:07:23,250
The only thing we need to do is pretty much what we did here.

119
00:07:23,290 --> 00:07:29,500
We need to loop everything and make sure that they have the ballot keyboard remember that we are looping

120
00:07:29,800 --> 00:07:31,200
the state of this.

121
00:07:31,240 --> 00:07:33,500
So if they have valid they are valid.

122
00:07:33,560 --> 00:07:36,960
Going to move forward if not we're going to return false.

123
00:07:36,970 --> 00:07:42,690
So are going to say let form is valid.

124
00:07:42,970 --> 00:07:46,550
Let me do it careful about it.

125
00:07:46,690 --> 00:07:48,570
And there's one by default.

126
00:07:48,700 --> 00:07:49,390
All right.

127
00:07:49,690 --> 00:07:52,350
So I'm going to do for opening close.

128
00:07:52,480 --> 00:08:00,820
And again I do let key let key and form data just like this.

129
00:08:00,850 --> 00:08:03,730
So what do we do we loop the form is valid.

130
00:08:03,790 --> 00:08:07,270
I'm sorry the form data and this one will be true or false.

131
00:08:07,510 --> 00:08:08,760
So what are we going to do.

132
00:08:08,770 --> 00:08:16,000
We're going to enter the form data to enter the key then begin to check if it's valid if it's true.

133
00:08:16,300 --> 00:08:17,800
And we're going to check.

134
00:08:17,800 --> 00:08:23,650
Of course when we go right here if the form is valid because we are not just validating a single impot

135
00:08:23,900 --> 00:08:26,170
we're going to validate multiple inputs.

136
00:08:26,170 --> 00:08:29,430
So this one should be always true.

137
00:08:29,740 --> 00:08:32,650
If you get it to false it's because something else fails.

138
00:08:32,800 --> 00:08:33,790
Right.

139
00:08:33,910 --> 00:08:40,900
So I'm going to go return and we returned the form as valid.

140
00:08:40,930 --> 00:08:41,290
All right.

141
00:08:41,350 --> 00:08:42,730
That is it.

142
00:08:42,760 --> 00:08:51,490
So I'm going to go to log in I'm going to go at the bottom and at the end of course we will get this

143
00:08:51,490 --> 00:08:54,100
form valid with true or false.

144
00:08:54,130 --> 00:08:56,260
So we just do a simple operation.

145
00:08:56,320 --> 00:08:59,110
If the form is valid we move forward.

146
00:08:59,350 --> 00:09:01,680
If not error.

147
00:09:01,720 --> 00:09:02,310
Right.

148
00:09:02,350 --> 00:09:08,530
And when we do when we get an error we do this that sets state opening close and we set the state of

149
00:09:08,630 --> 00:09:11,910
form error to true.

150
00:09:11,920 --> 00:09:12,300
All right.

151
00:09:12,340 --> 00:09:15,650
And we will display the error message that we have at the bottom.

152
00:09:15,670 --> 00:09:17,440
Please check your data.

153
00:09:17,470 --> 00:09:20,670
All right there you go.

154
00:09:20,800 --> 00:09:24,290
And of course if you are able to submit we can see the data to submit.

155
00:09:24,550 --> 00:09:25,770
So let's try again.

156
00:09:25,960 --> 00:09:27,330
We're going to open this.

157
00:09:27,410 --> 00:09:28,970
I'm going to log in.

158
00:09:28,990 --> 00:09:30,000
Please check your data.

159
00:09:30,010 --> 00:09:31,350
So we are going there.

160
00:09:31,600 --> 00:09:35,680
If I type something wrong and I type the password which is OK.

161
00:09:35,830 --> 00:09:36,810
Please check your data.

162
00:09:36,820 --> 00:09:40,660
If I add an email gmail dot com all the data is correct.

163
00:09:40,660 --> 00:09:43,550
So if you're able to do the submit.

164
00:09:43,750 --> 00:09:44,310
All right man.

165
00:09:44,320 --> 00:09:47,290
So everything so far everything works.

166
00:09:47,290 --> 00:09:53,560
Now what we need to do we need to make the actual request and remember that for this we are using in

167
00:09:53,560 --> 00:09:54,290
redux.

168
00:09:54,430 --> 00:10:01,060
So what we will need to do we will need to go to actions create a function to do the request imported

169
00:10:01,060 --> 00:10:06,460
here and you know we need to do all that logic would redux and it dispatched the server.

170
00:10:06,460 --> 00:10:06,800
Right.

171
00:10:06,880 --> 00:10:08,510
So let's go to the next section and do that.

