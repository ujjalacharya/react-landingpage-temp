1
00:00:01,320 --> 00:00:04,850
All right so later you're going to be pushing things in to get help.

2
00:00:04,890 --> 00:00:08,090
But of course you're going to store this some place on the cloud.

3
00:00:08,140 --> 00:00:13,240
So of course if we do it just like this we add the note modules and we don't want that.

4
00:00:13,240 --> 00:00:19,960
So I'm going to go create a new file and create a get ignored of course on this project we can send

5
00:00:19,960 --> 00:00:23,130
things to get have or you know get lab or something like that.

6
00:00:23,370 --> 00:00:25,270
You of course you need to do it your own way.

7
00:00:25,330 --> 00:00:31,330
But of course the year the final project which is the one to have right here it's a store it's a store

8
00:00:31,360 --> 00:00:32,620
everything in Hogan-Howe.

9
00:00:32,650 --> 00:00:38,290
And this final project this person is going to go to you so you can inspect it.

10
00:00:38,500 --> 00:00:39,770
So on that get ignored.

11
00:00:39,790 --> 00:00:43,730
We need to we need to put what we want to ignore when we push.

12
00:00:43,750 --> 00:00:51,910
So what I do we ignore the modules later we can have a build a client with no modules and you know the

13
00:00:51,940 --> 00:00:55,260
Yorn files and this one is for a Mac.

14
00:00:55,300 --> 00:00:58,210
Now we have this one the dot E M B.

15
00:00:58,210 --> 00:01:01,010
So this is an environment files right.

16
00:01:01,210 --> 00:01:04,660
Inby so we don't have this I'm going to create it right now.

17
00:01:04,660 --> 00:01:10,990
And it can explain you why that M-B So we're going to save that get ignored and close it.

18
00:01:11,170 --> 00:01:19,450
So later much much later when you push things into production you will need a file that hosts keyboards

19
00:01:19,480 --> 00:01:25,200
and passwords and maybe locations and you know you need the API keys or something like that.

20
00:01:25,360 --> 00:01:27,850
So you need to a place where you can store them.

21
00:01:27,940 --> 00:01:34,020
And that's why I'm going to store everything on the EMV and I'm putting this as a get ignored.

22
00:01:34,060 --> 00:01:40,690
So whenever we send this to have we don't want to show this inby file with our all our keywords right

23
00:01:40,690 --> 00:01:46,930
out passwords and then of course on the real life when you go to production when you push this to production

24
00:01:47,170 --> 00:01:50,680
you're going to send the keys and the passwords directly on the server.

25
00:01:50,680 --> 00:01:57,250
That's why we use a process that IOM report in production you have access to this environment virals

26
00:01:57,460 --> 00:02:04,390
that you set manually after you send everything to production and it's going to consume the passwords

27
00:02:04,390 --> 00:02:09,130
and the keys and everything else directly from the server because the only person who has access to

28
00:02:09,130 --> 00:02:09,660
your server.

29
00:02:09,670 --> 00:02:11,620
In theory it's you.

30
00:02:11,680 --> 00:02:12,440
All right.

31
00:02:12,760 --> 00:02:16,360
So that's this M-B of course we need to add some passwords.

32
00:02:16,360 --> 00:02:22,150
But before we need to bring Mongo divi and everything else to this server because right now it's pretty

33
00:02:22,150 --> 00:02:22,920
empty.

34
00:02:23,050 --> 00:02:30,460
Now later we're going to use body parts or we use body parser to bring things bring Jason for example

35
00:02:30,700 --> 00:02:34,630
from from the from from the actual request.

36
00:02:34,720 --> 00:02:38,830
When we make a request a post request maybe we send the Jason.

37
00:02:38,920 --> 00:02:44,120
So this body parser will get the information from that you know that request.

38
00:02:44,230 --> 00:02:51,400
And of course this works with Jaison or maybe body human body or maybe a query strings.

39
00:02:51,400 --> 00:02:55,420
So we need the body parts or something very very standard.

40
00:02:55,540 --> 00:03:03,350
So we do require and we do body body and then a parser just like this.

41
00:03:03,350 --> 00:03:03,900
All right.

42
00:03:05,880 --> 00:03:06,360
So OK.

43
00:03:06,660 --> 00:03:09,440
So required body parts or an exit.

44
00:03:09,460 --> 00:03:10,100
OK.

45
00:03:10,430 --> 00:03:13,550
Now this is actually installed right here.

46
00:03:13,550 --> 00:03:14,460
Body parts are.

47
00:03:14,600 --> 00:03:16,340
We've already installed this.

48
00:03:16,340 --> 00:03:17,210
Now what else we're going to need.

49
00:03:17,210 --> 00:03:18,050
We're going to need cookies.

50
00:03:18,050 --> 00:03:19,040
We're going to use cookies.

51
00:03:19,130 --> 00:03:23,240
So I'm going to say call Konst than a cookie just like this.

52
00:03:23,240 --> 00:03:27,440
And then parser again we're going to read cookies whenever we get a request.

53
00:03:27,440 --> 00:03:30,630
So we use the cookie parser's so require.

54
00:03:30,780 --> 00:03:35,850
Open it close and then Kuki parser right.

55
00:03:36,250 --> 00:03:36,590
OK.

56
00:03:36,620 --> 00:03:37,570
What is next.

57
00:03:37,580 --> 00:03:41,010
We have the express and we need to put mongoose right here.

58
00:03:41,090 --> 00:03:50,330
So I'm going to say Konst money goose equals and cons not Kanzi Konst and mongoose and we need to require

59
00:03:51,260 --> 00:03:52,970
mongoose could do this at the top.

60
00:03:52,970 --> 00:03:54,260
I'm going to do it right here.

61
00:03:54,530 --> 00:04:01,760
Mongoose Now this mongoose needs some configuration if you remember we do a mongoose connect and we

62
00:04:01,760 --> 00:04:07,880
use the link on the database and notice that my process for Mongo DVH it's run right here.

63
00:04:07,880 --> 00:04:10,400
So make sure you have this running.

64
00:04:10,470 --> 00:04:11,020
OK.

65
00:04:11,420 --> 00:04:15,470
So where are we going to store the location of our database.

66
00:04:15,470 --> 00:04:18,960
You know inside Mongo DVH at least in our computer.

67
00:04:18,980 --> 00:04:20,600
So from the dot that M-B.

68
00:04:20,780 --> 00:04:26,450
So on the Dandan Emmy I'm going to say database just like this equals.

69
00:04:26,600 --> 00:04:29,670
And then we're going to be passing that Mongo divi link.

70
00:04:29,750 --> 00:04:33,430
Remember we did this I did this on the previous section.

71
00:04:33,550 --> 00:04:38,580
Localhost 2 7 0 1 7 and the name of this is going to be waves.

72
00:04:38,810 --> 00:04:41,610
That's the name of the project waves.

73
00:04:41,840 --> 00:04:46,980
So now what I can do I can bring this dot EMV to our server.

74
00:04:47,090 --> 00:04:48,160
We can not use it.

75
00:04:48,240 --> 00:04:50,260
And imported just like any file.

76
00:04:50,270 --> 00:04:51,920
We cannot do it now.

77
00:04:51,950 --> 00:04:54,580
That's why I'm using this.

78
00:04:54,650 --> 00:04:57,230
When we find it that N.B. This library.

79
00:04:57,230 --> 00:04:58,830
So this library what it does.

80
00:04:58,910 --> 00:05:05,290
It grabs a M-B and makes makes this whatever we have right here available for us to use right here.

81
00:05:05,420 --> 00:05:14,010
So first I need to require just like this opening close and then dot EMV and then I'm going to do config.

82
00:05:14,030 --> 00:05:16,250
This is the way we bring it right here.

83
00:05:16,640 --> 00:05:21,790
Now of course we need to set up mongoose So first we need to do mongoose promise.

84
00:05:21,800 --> 00:05:24,600
If you if you're going to use you're going to use promise.

85
00:05:24,710 --> 00:05:32,700
And we said that global and then promise now promise with a capital P song and copy and paste it right.

86
00:05:32,930 --> 00:05:33,640
What is next.

87
00:05:33,680 --> 00:05:35,950
We need to sell it to do mongoose connect.

88
00:05:36,080 --> 00:05:43,610
So mongoose dart we connect to the database inside mongoose and I have the location right here with

89
00:05:43,610 --> 00:05:45,000
the key word database.

90
00:05:45,020 --> 00:05:53,020
So what we do we access process that EMV Jambi dot database.

91
00:05:53,030 --> 00:05:54,940
So this is what that EMV does.

92
00:05:54,980 --> 00:06:00,230
We can use this keyword process that M-B database and we need to we don't need to do something like

93
00:06:00,230 --> 00:06:00,920
this.

94
00:06:01,160 --> 00:06:01,400
Right.

95
00:06:01,400 --> 00:06:07,970
We don't need to hard code data is going to be always process that EMV and then database on the production

96
00:06:08,030 --> 00:06:11,220
on the actual the real server not on development server.

97
00:06:11,540 --> 00:06:17,410
So by using this like this we make sure we don't have to make changes in the future.

98
00:06:17,450 --> 00:06:17,890
Right.

99
00:06:18,030 --> 00:06:18,470
OK.

100
00:06:18,650 --> 00:06:25,770
So we are already using the final the final process that M-B keyboard.

101
00:06:25,810 --> 00:06:26,510
All right.

102
00:06:26,510 --> 00:06:31,810
Now to use body parser and grim cookie parser we need to register this as a middleware.

103
00:06:31,910 --> 00:06:36,620
So I'm going to use app that use and this is the way we register middleware.

104
00:06:36,770 --> 00:06:40,330
So we're going to bring this body parser just like this.

105
00:06:40,460 --> 00:06:43,680
We do dot and we're going to use equerry strengths.

106
00:06:43,730 --> 00:06:47,320
So we'd of course strings we use you are all encoded.

107
00:06:47,570 --> 00:06:51,170
And later we are going to be adding something because we're going to get a message but don't worry for

108
00:06:51,180 --> 00:06:58,760
now and then app that use opening close and we're going to use body parser again but this time to parse

109
00:06:58,840 --> 00:06:59,600
Jaison.

110
00:06:59,870 --> 00:07:03,630
So whenever we get our request we're going to be able to read it again.

111
00:07:03,650 --> 00:07:04,670
We use cookies.

112
00:07:04,670 --> 00:07:14,830
So app that use and then cookie parser and again is a function method actually so everything is good.

113
00:07:14,840 --> 00:07:15,640
We have the port.

114
00:07:15,650 --> 00:07:16,860
We have everything else.

115
00:07:17,060 --> 00:07:22,790
And if you go right here we're going to get this provide extend their undefined extend that provide

116
00:07:22,820 --> 00:07:23,810
extended option.

117
00:07:23,930 --> 00:07:30,900
So when you are Ellen coated we need to do this extended just like this and we say true.

118
00:07:31,400 --> 00:07:34,350
If not you're going to get a warning and the warning is gone.

119
00:07:34,550 --> 00:07:35,020
All right.

120
00:07:35,060 --> 00:07:38,900
OK so everything's it's run is running around.

121
00:07:38,930 --> 00:07:44,480
We have the embarkment marvels right here we added they get ignored and the servers are still running

122
00:07:44,660 --> 00:07:46,770
even though we added a bunch of things.

123
00:07:46,850 --> 00:07:51,230
Now on the next few sections we're going to be using this bunch of things we are doing right here.

124
00:07:51,410 --> 00:07:51,670
Right.

125
00:07:51,710 --> 00:07:53,750
So let's go to the next section and start with that.

