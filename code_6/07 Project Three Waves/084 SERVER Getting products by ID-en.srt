1
00:00:01,170 --> 00:00:03,080
OK so now what are we going to be doing.

2
00:00:03,300 --> 00:00:05,800
It's fetching products by something.

3
00:00:05,820 --> 00:00:11,640
In this case we're going to be fetching products by id and we're going to do this in two different ways.

4
00:00:11,640 --> 00:00:17,970
First we're going to get the parts by ID then we're going to get articles just articles and then a product

5
00:00:17,970 --> 00:00:18,710
buys something.

6
00:00:18,720 --> 00:00:20,370
Buy sell or buy a rival.

7
00:00:20,370 --> 00:00:22,970
Don't worry we will get we will get there.

8
00:00:23,340 --> 00:00:25,650
Now the first thing we're going to do is to buy I.D..

9
00:00:25,820 --> 00:00:32,490
Now there's two ways you can get information to the server right from the client to the server and it's

10
00:00:32,490 --> 00:00:35,440
by using a Jasen sending a Jasen right.

11
00:00:35,490 --> 00:00:37,000
Or you can use a query string.

12
00:00:37,170 --> 00:00:41,050
If you're asking yourself what is the query string a query string looks like this.

13
00:00:41,220 --> 00:00:47,670
It's a are you get the you know the actual Your L where you're making the the the request then you get

14
00:00:47,670 --> 00:00:53,100
the question mark and then you have right here an attribute and inside of the attribute you have some

15
00:00:53,100 --> 00:00:53,810
values.

16
00:00:53,810 --> 00:00:59,070
And in this case it's going to be an ID and then maybe you have a different attribute so you concatenate

17
00:00:59,070 --> 00:01:02,330
everything with the ampersand and maybe the type.

18
00:01:02,580 --> 00:01:07,620
And just like this type and this type is going to be equal to something else or whatever.

19
00:01:07,620 --> 00:01:09,150
So this is called string.

20
00:01:09,420 --> 00:01:12,820
So now we're going to do with strings and later begin to do.

21
00:01:12,830 --> 00:01:16,980
Jason Ryan so I just want to show you both ways.

22
00:01:17,010 --> 00:01:20,080
Just in case you know so now we need to get by.

23
00:01:20,100 --> 00:01:23,140
So I'm going to say app that get opening close.

24
00:01:23,370 --> 00:01:32,610
And the route is going to be API product and their products could be articles articles underscore and

25
00:01:32,640 --> 00:01:35,530
score by ID.

26
00:01:35,590 --> 00:01:43,010
All right of course after this we just run a function with a request and a response.

27
00:01:43,030 --> 00:01:44,580
Copy paste.

28
00:01:44,580 --> 00:01:46,330
Now what I want to do.

29
00:01:46,500 --> 00:01:47,540
I don't want to get.

30
00:01:47,610 --> 00:01:52,640
I went for this route to process single IDs or many IDs.

31
00:01:52,770 --> 00:01:56,120
So right here if I'm sending one ID OK that is good.

32
00:01:56,310 --> 00:02:06,330
So this is one ID but I want I want to be able to put coma and put a different ID Tacoma different ID

33
00:02:06,750 --> 00:02:07,390
and coma.

34
00:02:07,500 --> 00:02:10,280
So this is going to bring four different articles.

35
00:02:10,500 --> 00:02:15,960
So right here of course we need to make some logic to check if we have many or we have one and we do

36
00:02:15,960 --> 00:02:19,290
it with type if type equals to Array.

37
00:02:19,320 --> 00:02:24,160
It means that we have an array of product so we need to search for an array of products.

38
00:02:24,390 --> 00:02:28,560
If we have single we will search search for a single ID.

39
00:02:28,630 --> 00:02:29,370
All right.

40
00:02:29,910 --> 00:02:35,830
So first I'm going to create a barbell called Type let and type equals.

41
00:02:36,000 --> 00:02:42,660
And now if you remember right here we are using Jaison so request body enters to Jason you no searches

42
00:02:42,660 --> 00:02:43,470
for Jason.

43
00:02:43,650 --> 00:02:45,930
In this case we want to search for query.

44
00:02:45,960 --> 00:02:47,340
So it's a little bit different.

45
00:02:47,490 --> 00:02:53,380
So I'm going to say request Querrey Dodd and I want to cert and went to get the type.

46
00:02:53,400 --> 00:02:57,530
So this viable will be assigned with whatever we have inside type.

47
00:02:57,810 --> 00:03:00,690
And if you're asking yourself how can we use this.

48
00:03:00,690 --> 00:03:07,320
It's because we are using body parser and you are encoded so that you know where it comes from this.

49
00:03:07,470 --> 00:03:09,340
The other one comes from this.

50
00:03:09,420 --> 00:03:09,980
All right.

51
00:03:10,850 --> 00:03:16,460
So what else are going to create a viral called items and it's a big In the beginning is going to start

52
00:03:16,460 --> 00:03:18,590
with whatever we have inside the idea.

53
00:03:18,800 --> 00:03:21,780
So request Querrey idea.

54
00:03:21,850 --> 00:03:22,740
All right.

55
00:03:23,110 --> 00:03:25,190
Now I need to check if I have an array.

56
00:03:25,190 --> 00:03:27,710
No a single ID or many IDs.

57
00:03:27,890 --> 00:03:35,500
So if opening close and if I have a type just like this I'm going to say array.

58
00:03:35,750 --> 00:03:36,800
There's many ways you can do this.

59
00:03:36,810 --> 00:03:37,680
You can of course.

60
00:03:37,860 --> 00:03:41,120
It's kept the type in check if you have any rights you could do this.

61
00:03:41,120 --> 00:03:42,830
I'm just doing this a little bit simpler.

62
00:03:43,220 --> 00:03:45,900
So I the way this is just come in javascript.

63
00:03:45,950 --> 00:03:50,040
It's not new or node or re-act right nor react.

64
00:03:50,090 --> 00:03:58,630
So let IDs inside the IDs what I want to do and when to get whatever value I have inside items or requests

65
00:03:58,640 --> 00:04:03,970
to query that ID and split them like coma why am I adding the coma.

66
00:04:04,010 --> 00:04:08,580
And it's because the inside of the object's ID of mongoose we didn't have coma's.

67
00:04:08,720 --> 00:04:14,730
So as long as you use a character that is not being used by the ID you can split by coma.

68
00:04:14,990 --> 00:04:20,030
So I'm going to say request quite nicely and split open and close coma.

69
00:04:20,060 --> 00:04:22,080
I could just use this rival.

70
00:04:22,610 --> 00:04:25,150
All right so we are inside an array.

71
00:04:25,160 --> 00:04:26,940
I want these items.

72
00:04:27,140 --> 00:04:35,810
Barbel to the national right and right here we are creating the split of IDs so I get to go to items

73
00:04:36,090 --> 00:04:42,970
are going to convert this to an array and I'm going to enter items just like this items.

74
00:04:43,240 --> 00:04:44,470
Dodd Oh sorry.

75
00:04:44,480 --> 00:04:45,580
Items equals.

76
00:04:45,770 --> 00:04:52,790
And this is going to be IDs dot map opening close and on each iteration.

77
00:04:52,900 --> 00:04:53,790
I'm going to do something.

78
00:04:53,800 --> 00:04:57,160
So I'm going to say items and I'm going to run something.

79
00:04:57,170 --> 00:05:05,660
So what I want to do I want to return the return inside of the items array not just the idea of the

80
00:05:05,660 --> 00:05:05,960
array.

81
00:05:05,960 --> 00:05:07,940
I don't want to do this.

82
00:05:08,300 --> 00:05:12,610
I want to do this right what I want to do.

83
00:05:12,740 --> 00:05:15,360
I want to return something else instead of the array.

84
00:05:15,680 --> 00:05:24,100
Because this are IDs so I need to convert them to an object id from mongoose.

85
00:05:24,110 --> 00:05:28,650
So what I return is going to be Mungo's just like this.

86
00:05:28,700 --> 00:05:34,930
Then we access types got and I'm going to be entering object ID.

87
00:05:35,330 --> 00:05:38,000
And what we do I pass the item.

88
00:05:38,000 --> 00:05:43,390
So this what it will do in the end is going to push inside of the array.

89
00:05:43,460 --> 00:05:50,150
The idea of the item but converted to object ID and if we check the database the ID looks a little bit

90
00:05:50,150 --> 00:05:51,310
different.

91
00:05:51,890 --> 00:05:52,540
All right.

92
00:05:52,600 --> 00:05:54,300
Good so this is the first.

93
00:05:54,590 --> 00:06:00,540
So now since we could get an array or we could get a single item we need to make the actual request.

94
00:06:00,590 --> 00:06:07,700
So I going to go right here and I'm going to bring products just like with it before product we have

95
00:06:07,700 --> 00:06:08,060
it right here.

96
00:06:08,060 --> 00:06:08,460
Product.

97
00:06:08,510 --> 00:06:09,180
OK.

98
00:06:09,620 --> 00:06:12,890
So inside product I went to find some things I'm going to do Don.

99
00:06:13,130 --> 00:06:16,790
And I'm going to go right here at the bottom and I've got to say Fine.

100
00:06:17,450 --> 00:06:21,010
Now inside of find we need to specify what we want to find.

101
00:06:21,170 --> 00:06:24,370
In this case we are searching by ID.

102
00:06:24,530 --> 00:06:30,270
Now we want to pass something else which IDs and since we have one.

103
00:06:30,320 --> 00:06:33,100
We could have one ID or many IDs.

104
00:06:33,230 --> 00:06:34,620
I need to pass this.

105
00:06:34,700 --> 00:06:43,400
So we say in with the dollar sign inside and then I pass items now items could be one item or many items.

106
00:06:43,400 --> 00:06:46,180
So this one takes a single value or an array.

107
00:06:46,190 --> 00:06:48,770
That's why we can use it just like this.

108
00:06:48,770 --> 00:06:49,410
All right.

109
00:06:49,440 --> 00:06:50,140
And I made a mistake.

110
00:06:50,150 --> 00:06:52,910
I just need to add one more curly brace.

111
00:06:52,910 --> 00:06:55,090
All right.

112
00:06:55,290 --> 00:06:56,580
Oh sorry.

113
00:06:56,780 --> 00:06:57,550
I'm going to go right here.

114
00:06:57,560 --> 00:06:58,250
I'm going to start.

115
00:06:58,250 --> 00:06:59,550
I'm going to change things.

116
00:06:59,560 --> 00:07:00,110
They're going to go right.

117
00:07:00,110 --> 00:07:01,690
Going to go right here at the bottom.

118
00:07:01,850 --> 00:07:05,840
Now if we use this we need to use the execute.

119
00:07:05,900 --> 00:07:09,120
So X open and close.

120
00:07:09,170 --> 00:07:15,530
So whenever we execute this we're going to open and close right here and we're going to run the callback.

121
00:07:15,560 --> 00:07:21,640
So this Colback we get an error and we get docs and what are you gonna do.

122
00:07:21,650 --> 00:07:22,300
Oh sorry.

123
00:07:22,320 --> 00:07:24,230
Exec with the letter C.

124
00:07:24,710 --> 00:07:25,550
And what are you going to do.

125
00:07:25,550 --> 00:07:31,580
I'm going to return our response with a status of 200.

126
00:07:32,180 --> 00:07:35,920
And I'm going to send whatever we get back from ducks.

127
00:07:36,020 --> 00:07:41,840
So the only thing we are doing is just finding products by one single item or by an ID and then we execute

128
00:07:41,870 --> 00:07:45,390
whatever is that we want to execute and we send back to docs.

129
00:07:45,410 --> 00:07:46,480
Very good.

130
00:07:46,670 --> 00:07:47,670
OK.

131
00:07:48,260 --> 00:07:54,020
We're going to have a tiny problem but it's going to it's a little bit hard to explain right now without

132
00:07:54,020 --> 00:07:55,030
the context.

133
00:07:55,040 --> 00:07:59,030
First we're going to show we can see what we get inside postman and they're going to tell you how to

134
00:07:59,030 --> 00:07:59,860
fix it.

135
00:07:59,870 --> 00:08:00,400
All right.

136
00:08:00,440 --> 00:08:08,990
So let's go to post-master are going to go and create a new route and this one calls API and you know

137
00:08:08,990 --> 00:08:16,600
by ID so and then to use your I L and then by ID of course we need to add more things.

138
00:08:16,610 --> 00:08:18,540
If not nothing is going to work.

139
00:08:18,560 --> 00:08:24,460
So we have to add the attribute ID and we need to add some real IDs.

140
00:08:24,560 --> 00:08:28,450
So I'm going to go and copy this one inside products.

141
00:08:28,700 --> 00:08:38,860
You should do the same ID and I'm going to put a coma and again to put it different id think about it.

142
00:08:38,910 --> 00:08:41,260
We have it right here inside the read me.

143
00:08:41,550 --> 00:08:43,560
So again a copy a different one.

144
00:08:43,590 --> 00:08:45,230
Whatever doesn't matter.

145
00:08:46,030 --> 00:08:50,310
And paste that and I'm just going to bring two maybe three.

146
00:08:50,320 --> 00:08:51,460
That's OK.

147
00:08:52,100 --> 00:08:58,650
So coma and of course then we need to specify the type remember.

148
00:08:58,740 --> 00:09:04,860
So I'm going to say type ampersand and then type in this case.

149
00:09:04,950 --> 00:09:07,600
We have many is going to be a.

150
00:09:07,830 --> 00:09:08,450
Right.

151
00:09:08,460 --> 00:09:09,520
So let's see what happens.

152
00:09:09,660 --> 00:09:11,880
Going to send it and we get it.

153
00:09:11,880 --> 00:09:19,570
Man OK so we get an array with three different products with the you know specific ID.

154
00:09:19,680 --> 00:09:20,820
Right so this works.

155
00:09:20,820 --> 00:09:23,520
What happens if we tried to get one right.

156
00:09:23,550 --> 00:09:25,190
I'm going to go here.

157
00:09:25,300 --> 00:09:32,160
Going to delete the first the last two and this one is going to be single can assent and we get a single

158
00:09:32,160 --> 00:09:33,210
one.

159
00:09:33,210 --> 00:09:34,830
Now notice this.

160
00:09:34,860 --> 00:09:41,940
We are getting a response back but the brand and the wood are an ID because in real life they are an

161
00:09:41,970 --> 00:09:42,850
ID.

162
00:09:43,230 --> 00:09:49,590
So we're going to get this to display at inside of here and we can output an ID.

163
00:09:49,890 --> 00:09:54,270
And what we're going to do after we get the product from the server we're going to make a new request

164
00:09:54,270 --> 00:09:59,160
to the server with that ID to get the brand and then to get a different category.

165
00:09:59,160 --> 00:10:01,490
What happens if you have 20 categories.

166
00:10:01,680 --> 00:10:02,950
So that is a problem.

167
00:10:03,150 --> 00:10:07,390
So if you remember inside products we use the ref.

168
00:10:07,410 --> 00:10:13,260
So what this does is that we can make or we can specify right here in this request and we can tell.

169
00:10:13,260 --> 00:10:13,930
Ok dude.

170
00:10:13,930 --> 00:10:20,460
Where we at a reference so I need you to code to go to this database to this model and find whatever

171
00:10:20,460 --> 00:10:24,830
you get as a name or value for this object ID.

172
00:10:25,140 --> 00:10:34,080
So it creates kind of a relationship if you're used to work with with with with the larval for example

173
00:10:34,080 --> 00:10:37,090
or maybe this PH BE FREE frameworks.

174
00:10:37,200 --> 00:10:40,320
We make a relation it's a relationship.

175
00:10:40,320 --> 00:10:42,480
So how can we make it work.

176
00:10:42,810 --> 00:10:50,670
So what we need to do we need to add the the method populate like this and then opening close and inside

177
00:10:50,670 --> 00:10:53,150
of here not in capital.

178
00:10:53,190 --> 00:11:00,420
We need to tell the application which option which field we want to populate from here since this one

179
00:11:00,450 --> 00:11:01,490
it's brand.

180
00:11:01,650 --> 00:11:08,040
What we do is we say okay we want to populate brand that we do DOD and we want would as well.

181
00:11:08,040 --> 00:11:12,130
So I'm going to copy go other Bonnin and say what.

182
00:11:12,150 --> 00:11:12,690
All right.

183
00:11:12,690 --> 00:11:14,390
So let's try again and see what happens.

184
00:11:17,650 --> 00:11:18,850
Right so we try again.

185
00:11:18,870 --> 00:11:21,810
And now we began its brand but we get an object.

186
00:11:22,200 --> 00:11:28,440
So it's going to the database bring in whatever we have inside of that idea of brand and it's sending

187
00:11:28,440 --> 00:11:33,370
this response so now we get the name right and same thing with it.

188
00:11:33,630 --> 00:11:37,060
So get really good works or is good.

189
00:11:37,410 --> 00:11:41,730
OK so now and then the next section instead of getting by ID.

190
00:11:41,730 --> 00:11:47,960
What we need to do is we need to get kind of a different kind of articles.

191
00:11:48,030 --> 00:11:54,600
Let me tell you what let me just show you why right now I'm going to go to the final one and I'm going

192
00:11:54,600 --> 00:11:56,350
to go to home.

193
00:11:56,370 --> 00:12:04,650
So now what we need to do is we need to fetch four different products at least for home with some kind

194
00:12:04,650 --> 00:12:06,160
of arguments.

195
00:12:06,210 --> 00:12:08,570
This ones are the best selling guitars.

196
00:12:08,640 --> 00:12:17,550
So we need to search the whole database for the for to bring the four products with more you know amount

197
00:12:17,550 --> 00:12:23,080
of sense and the same thing for new arrivals instead of checking by cell.

198
00:12:23,090 --> 00:12:24,800
What are we going to do is check by date.

199
00:12:24,810 --> 00:12:28,170
So we need to bring the articles by date.

200
00:12:28,220 --> 00:12:31,910
So for this of course we need a different route with a different logic.

201
00:12:32,100 --> 00:12:34,270
So let's go to the next one and do that one.

